
==================== FINAL INTERFACE ====================
2019-01-29 19:51:51.7335293 UTC

interface main:Main 8063
  interface hash: 1bf3e2ea09d56a9dff8805e926b282ec
  ABI hash: 63ec6b520233dda7395694c054de0473
  export-list hash: add13f43b71844510aba8cb39eb0fc83
  orphan hash: 7e9a0a9fcf7722b2fd60d246ae15b56f
  flag hash: 1eef89f9c576a55168c029d83bb12d88
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.aTermi
  Main.akutsu
  Main.asulut
  Main.boolEtosi
  Main.boolTosi
  Main.booli
  Main.ehtolause
  Main.elsellinen
  Main.elseton
  Main.identifier
  Main.integer
  Main.intti
  Main.jAliohjelma
  Main.jAliohjelma'
  Main.jMain
  Main.jasennin
  Main.km
  Main.lakutsu
  Main.lauseke
  Main.lauseke'
  Main.lekseemi
  Main.luku
  Main.luokka
  Main.maaritelma
  Main.main
  Main.makutsu
  Main.mid
  Main.mjono
  Main.oMaaritelma
  Main.operaattorit
  Main.palautus
  Main.palautustietotyyppi
  Main.palautustyyppi
  Main.palautusvoid
  Main.parametri
  Main.parametrit
  Main.semi
  Main.sijoitus
  Main.silmukka
  Main.stringi
  Main.sulut
  Main.symboli
  Main.tietotyyppi
  Main.tulostus
  Main.uusisijoitus
  Main.vanhasijoitus
  Main.vsana
  Main.vsl
  Main.whitespace
  Main.AKutsu{Main.AKutsu}
  Main.Aliohjelma{Main.Aliohjelma}
  Main.Arvo{Main.ArvoBool Main.ArvoInt Main.ArvoString}
  Main.Ehtolause{Main.If Main.IfElse}
  Main.Id{Main.Id}
  Main.Lauseke{Main.LAKutsu Main.LEhto Main.LPalautus Main.LSijoitus Main.LSilmukka Main.LTulostus}
  Main.Luokka{Main.Luokka}
  Main.Maaritelma{Main.Aritmeettinen Main.MAKutsu Main.MArvo Main.MId Main.Vertailu}
  Main.MainOhjelma{Main.MainOhjelma}
  Main.Op{Main.Jako Main.Kerto Main.Miinus Main.Plus}
  Main.Palautustyyppi{Main.Palautustyyppi Main.Void}
  Main.Parametri{Main.Parametri}
  Main.Parser
  Main.Sijoitus{Main.UusiSijoitus Main.VanhaSijoitus}
  Main.Tietotyyppi{Main.TTBool Main.TTInt Main.TTString Main.TTVoid}
  Main.VOp{Main.Erisuuri Main.Pienempi Main.PienempiYhtasuuri Main.Suurempi Main.SuurempiYhtasuuri Main.Yhtasuuri}
module dependencies:
package dependencies: array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 containers-0.6.0.1
                      deepseq-1.4.4.0 ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 megaparsec-7.0.4 mtl-2.2.2
                      parser-combinators-1.0.1 primitive-0.6.4.0 scientific-0.3.6.2
                      text-1.2.3.1 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array text-1.2.3.1:Data.Text
                         text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.12.0.0:Control.Applicative 123b0192fa051c5703dd008e6b21f32d
import  -/  base-4.12.0.0:Control.Monad 80b89bcb2e69935b319a1dd37eaf3802
import  -/  base-4.12.0.0:Data.Foldable 0d844d41f2c5ae5ccafb3f5378ff6867
import  -/  base-4.12.0.0:Data.Functor d76c001d92d0a1adf6f6220faa8ca3e5
import  -/  base-4.12.0.0:Data.Void 8275bdb9ce14f1255dfe4ed62fee1492
import  -/  base-4.12.0.0:GHC.Base b0f6eed6c4b57b0a2f7c7570f245848b
import  -/  base-4.12.0.0:GHC.Show 5c4c5ac15ef4d7749e0e6f06242c812a
import  -/  base-4.12.0.0:Prelude b1ccc486556b171042710ef6f2d1a539
import  -/  base-4.12.0.0:System.IO c4f9b4edbf0d6a7a9a49fe16b71318d4
import  -/  ghc-prim-0.5.3:GHC.Classes 555218a5f891dab16ebc6e6e04763e77
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  megaparsec-7.0.4:Text.Megaparsec 7df8dafd569bbec3b9e4461882f5d1f8
import  -/  megaparsec-7.0.4:Text.Megaparsec.Char cf99495c2b9d970340d924c58fdc23b5
import  -/  megaparsec-7.0.4:Text.Megaparsec.Char.Lexer 7491e70f16b8f2481f147918ded7fb2b
import  -/  megaparsec-7.0.4:Text.Megaparsec.Class 69e3fcf22b7fea6247ba39e1e5f983a6
import  -/  megaparsec-7.0.4:Text.Megaparsec.Common 8aae37b98788a01a2a8755bd42f942d8
import  -/  megaparsec-7.0.4:Text.Megaparsec.Lexer 83dbd661cbe9657eaf7f67f0d3a31c0d
import  -/  parser-combinators-1.0.1:Control.Applicative.Combinators 79d226f48196dca675b00a2047bb8e23
import  -/  parser-combinators-1.0.1:Control.Monad.Combinators a896246bc439928f68ca3d3bc3e18ce9
import  -/  parser-combinators-1.0.1:Control.Monad.Combinators.Expr cc1a4ce057c2488c66b7a422ae48f5f4
70b434233c0b383083b1b7566c4ca8a9
  $fShowAKutsu :: GHC.Show.Show Main.AKutsu
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.AKutsu
                  Main.$fShowAKutsu_$cshowsPrec
                  Main.$fShowAKutsu_$cshow
                  Main.$fShowAKutsu_$cshowList -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowAKutsu1 :: Main.AKutsu -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(1*U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.AKutsu) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.AKutsu ww1 ww2 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
acb9d96ae8b2c68358c32d2041b77d67
  $fShowAKutsu2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Id "#) -}
089300e854aa739cb5d7f7ce5c2e468b
  $fShowAKutsu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AKutsu "#) -}
2e3271082b8e0b51725c2b1d3a453564
  $fShowAKutsu4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowAKutsu_$cshow :: Main.AKutsu -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.AKutsu) ->
                 Main.$fShowAKutsu_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowAKutsu_$cshowList :: [Main.AKutsu] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.AKutsu]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.AKutsu Main.$fShowAKutsu1 ls s) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowAKutsu_$cshowsPrec ::
    GHC.Types.Int -> Main.AKutsu -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.AKutsu)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.AKutsu ww3 ww4 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
7ba4359350456c0e515d9a8dee1fed46
  $fShowAliohjelma :: GHC.Show.Show Main.Aliohjelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Aliohjelma
                  Main.$fShowAliohjelma_$cshowsPrec
                  Main.$fShowAliohjelma_$cshow
                  Main.$fShowAliohjelma_$cshowList -}
7ba4359350456c0e515d9a8dee1fed46
  $fShowAliohjelma1 :: Main.Aliohjelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(1*U),1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Main.Aliohjelma) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Aliohjelma ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec3 0# ww1 ww2 ww3 ww4 w1 }) -}
7ba4359350456c0e515d9a8dee1fed46
  $fShowAliohjelma_$cshow :: Main.Aliohjelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Aliohjelma) ->
                 Main.$fShowAliohjelma_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7ba4359350456c0e515d9a8dee1fed46
  $fShowAliohjelma_$cshowList :: [Main.Aliohjelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Aliohjelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Aliohjelma
                   Main.$fShowAliohjelma1
                   ls
                   s) -}
7ba4359350456c0e515d9a8dee1fed46
  $fShowAliohjelma_$cshowsPrec ::
    GHC.Types.Int -> Main.Aliohjelma -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U),1*U,1*U,1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Aliohjelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Aliohjelma ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec3 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
555e636b477ee8b508e51feaa17bf41b
  $fShowArvo :: GHC.Show.Show Main.Arvo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Arvo
                  Main.$fShowArvo_$cshowsPrec
                  Main.$fShowArvo_$cshow
                  Main.$fShowArvo_$cshowList -}
555e636b477ee8b508e51feaa17bf41b
  $fShowArvo1 :: Main.Arvo -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Arvo) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec4 0# w w1) -}
9d26ea399c42e63a35a09fcda8ee0a7b
  $fShowArvo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoString "#) -}
b1cceccae7cadc87a8751b112040cced
  $fShowArvo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoBool "#) -}
d94ca9a1a5cd17de84a81e91a87459f7
  $fShowArvo4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoInt "#) -}
fc8db6ca930c0ef10190412e799e829f
  $fShowArvo5 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
555e636b477ee8b508e51feaa17bf41b
  $fShowArvo_$cshow :: Main.Arvo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Arvo) ->
                 case x of wild {
                   Main.ArvoInt b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo4
                        (case b1 of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt
                                11#
                                ww3
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   Main.ArvoBool b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo3
                        (case b1 of wild1 {
                           GHC.Types.False -> GHC.Show.$fShowBool4
                           GHC.Types.True -> GHC.Show.$fShowBool2 })
                   Main.ArvoString b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 Main.$fShowArvo5)) }) -}
555e636b477ee8b508e51feaa17bf41b
  $fShowArvo_$cshowList :: [Main.Arvo] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Arvo]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Arvo Main.$fShowArvo1 ls s) -}
555e636b477ee8b508e51feaa17bf41b
  $fShowArvo_$cshowsPrec ::
    GHC.Types.Int -> Main.Arvo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Arvo)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec4 ww1 w1 w2 }) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowEhtolause :: GHC.Show.Show Main.Ehtolause
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Ehtolause
                  Main.$fShowEhtolause_$cshowsPrec
                  Main.$fShowEhtolause_$cshow
                  Main.$fShowEhtolause_$cshowList -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowEhtolause1 :: Main.Ehtolause -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Ehtolause) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec5 0# w w1) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowEhtolause_$cshow :: Main.Ehtolause -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Ehtolause) ->
                 Main.$fShowEhtolause_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowEhtolause_$cshowList :: [Main.Ehtolause] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Ehtolause]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Ehtolause Main.$fShowEhtolause1 ls s) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowEhtolause_$cshowsPrec ::
    GHC.Types.Int -> Main.Ehtolause -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Ehtolause)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec5 ww1 w1 w2 }) -}
e8a8bf098337ffa9089d6ee605f228cc
  $fShowId :: GHC.Show.Show Main.Id
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Id
                  Main.$fShowId_$cshowsPrec
                  Main.$fShowId_$cshow
                  Main.$fShowId_$cshowList -}
e8a8bf098337ffa9089d6ee605f228cc
  $fShowId1 :: Main.Id -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: Main.Id) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Id ww1 -> Main.$w$cshowsPrec2 0# ww1 w1 }) -}
e8a8bf098337ffa9089d6ee605f228cc
  $fShowId_$cshow :: Main.Id -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Id) ->
                 case w of ww { Main.Id ww1 -> Main.$w$cshow ww1 }) -}
e8a8bf098337ffa9089d6ee605f228cc
  $fShowId_$cshowList :: [Main.Id] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Id]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Id Main.$fShowId1 ls s) -}
e8a8bf098337ffa9089d6ee605f228cc
  $fShowId_$cshowsPrec :: GHC.Types.Int -> Main.Id -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Id) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Id ww3 ->
                 Main.$w$cshowsPrec2 ww1 ww3 w2 } }) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowLauseke :: GHC.Show.Show Main.Lauseke
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Lauseke
                  Main.$fShowLauseke_$cshowsPrec
                  Main.$fShowLauseke_$cshow
                  Main.$fShowLauseke_$cshowList -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowLauseke1 :: Main.Lauseke -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Lauseke) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec6 0# w w1) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowLauseke_$cshow :: Main.Lauseke -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Lauseke) ->
                 Main.$fShowLauseke_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowLauseke_$cshowList :: [Main.Lauseke] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Lauseke]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Lauseke Main.$fShowLauseke1 ls s) -}
73e9e9780be977ac98befcd5cdf84e52
  $fShowLauseke_$cshowsPrec ::
    GHC.Types.Int -> Main.Lauseke -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Lauseke)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec6 ww1 w1 w2 }) -}
12fc2da6187540e7a47cb6172737a6df
  $fShowLuokka :: GHC.Show.Show Main.Luokka
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Luokka
                  Main.$fShowLuokka_$cshowsPrec
                  Main.$fShowLuokka_$cshow
                  Main.$fShowLuokka_$cshowList -}
12fc2da6187540e7a47cb6172737a6df
  $fShowLuokka1 :: Main.Luokka -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.Luokka) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Luokka ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec7 0# ww1 ww2 ww3 w1 }) -}
bdbccdb4eba393fbd198c7556b8be633
  $fShowLuokka10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka11) -}
af7493f344ab80294aaeada62cd83e96
  $fShowLuokka11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTInt"#) -}
9b4da54953b0011146bb5c822dca6474
  $fShowLuokka12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parametri "#) -}
f699b548fc57a993d9db9bb4411fa375
  $fShowLuokka13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MainOhjelma "#) -}
1d727d74936ddbf835865d668b020579
  $fShowLuokka2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka3) -}
b8176d57f81e4820bd8f8beae2958eae
  $fShowLuokka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Luokka "#) -}
8ec51a99c525f1033f98dd1299b7829a
  $fShowLuokka4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka5) -}
2aa32692dccfd7999c5c1ae1c7317fef
  $fShowLuokka5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTVoid"#) -}
00c25eaeac543a27425ff88f9909cd06
  $fShowLuokka6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka7) -}
bec58e897586194cc4bc8453ea091215
  $fShowLuokka7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTString"#) -}
3585a298128fe83e24403695b883b2ac
  $fShowLuokka8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka9) -}
c03c0ba5b0eee281b48299d617fb5041
  $fShowLuokka9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTBool"#) -}
12fc2da6187540e7a47cb6172737a6df
  $fShowLuokka_$cshow :: Main.Luokka -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Luokka) ->
                 Main.$fShowLuokka_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
12fc2da6187540e7a47cb6172737a6df
  $fShowLuokka_$cshowList :: [Main.Luokka] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Luokka]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Luokka Main.$fShowLuokka1 ls s) -}
12fc2da6187540e7a47cb6172737a6df
  $fShowLuokka_$cshowsPrec ::
    GHC.Types.Int -> Main.Luokka -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Luokka)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Luokka ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec7 ww1 ww3 ww4 ww5 w2 } }) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowMaaritelma :: GHC.Show.Show Main.Maaritelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Maaritelma
                  Main.$fShowMaaritelma_$cshowsPrec
                  Main.$fShowMaaritelma_$cshow
                  Main.$fShowMaaritelma_$cshowList -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowMaaritelma1 :: Main.Maaritelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Maaritelma) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec1 0# w w1) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowMaaritelma_$cshow :: Main.Maaritelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Maaritelma) ->
                 Main.$fShowMaaritelma_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowMaaritelma_$cshowList :: [Main.Maaritelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Maaritelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Maaritelma
                   Main.$fShowMaaritelma1
                   ls
                   s) -}
70b434233c0b383083b1b7566c4ca8a9
  $fShowMaaritelma_$cshowsPrec ::
    GHC.Types.Int -> Main.Maaritelma -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Maaritelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec1 ww1 w1 w2 }) -}
4bee8c4a373c3f245e725bd9447f9327
  $fShowMainOhjelma :: GHC.Show.Show Main.MainOhjelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.MainOhjelma
                  Main.$fShowMainOhjelma_$cshowsPrec
                  Main.$fShowMainOhjelma_$cshow
                  Main.$fShowMainOhjelma_$cshowList -}
4bee8c4a373c3f245e725bd9447f9327
  $fShowMainOhjelma1 :: Main.MainOhjelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(1*U,1*U(1*U)),1*U)><L,U>,
     Unfolding: (\ (w :: Main.MainOhjelma) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.MainOhjelma ww1 ww2 ->
                 Main.$w$cshowsPrec8 0# ww1 ww2 w1 }) -}
4bee8c4a373c3f245e725bd9447f9327
  $fShowMainOhjelma_$cshow :: Main.MainOhjelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U,1*U(1*U)),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.MainOhjelma) ->
                 Main.$fShowMainOhjelma_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4bee8c4a373c3f245e725bd9447f9327
  $fShowMainOhjelma_$cshowList ::
    [Main.MainOhjelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.MainOhjelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.MainOhjelma
                   Main.$fShowMainOhjelma1
                   ls
                   s) -}
4bee8c4a373c3f245e725bd9447f9327
  $fShowMainOhjelma_$cshowsPrec ::
    GHC.Types.Int -> Main.MainOhjelma -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U,1*U(1*U)),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.MainOhjelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.MainOhjelma ww3 ww4 ->
                 Main.$w$cshowsPrec8 ww1 ww3 ww4 w2 } }) -}
ad213cd5300a7fb1061946df44d0bb67
  $fShowOp :: GHC.Show.Show Main.Op
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Op
                  Main.$fShowOp_$cshowsPrec
                  Main.$fShowOp_$cshow
                  Main.$fShowOp_$cshowList -}
491992850678eca003ff151f7ae77e26
  $fShowOp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp2) -}
ad8fe5393820c2aaf8bc9409eed79565
  $fShowOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Jako"#) -}
df6bedd6ed1dca45083c429c1879fea1
  $fShowOp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp4) -}
b7dfead01d2985c42c777230ba85c9e7
  $fShowOp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Kerto"#) -}
11b3c8ec72092a1a3c9378151a1e993e
  $fShowOp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp6) -}
641277dcaf2f14623863f92413b69fc9
  $fShowOp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Miinus"#) -}
3e5aac651cbee18d1b96fdc4bc931532
  $fShowOp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp8) -}
8a60e2aa75c23fabb637cfecad37e47d
  $fShowOp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Plus"#) -}
ad213cd5300a7fb1061946df44d0bb67
  $fShowOp_$cshow :: Main.Op -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Op) ->
                 case x of wild {
                   Main.Plus -> Main.$fShowOp7
                   Main.Miinus -> Main.$fShowOp5
                   Main.Kerto -> Main.$fShowOp3
                   Main.Jako -> Main.$fShowOp1 }) -}
ad213cd5300a7fb1061946df44d0bb67
  $fShowOp_$cshowList :: [Main.Op] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Op]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Op Main.$w$cshowsPrec11 ls s) -}
ad213cd5300a7fb1061946df44d0bb67
  $fShowOp_$cshowsPrec :: GHC.Types.Int -> Main.Op -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Op) (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec11 w1 w2) -}
80db12b64919edcb6a2add25e2614739
  $fShowPalautustyyppi :: GHC.Show.Show Main.Palautustyyppi
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Palautustyyppi
                  Main.$fShowPalautustyyppi_$cshowsPrec
                  Main.$fShowPalautustyyppi_$cshow
                  Main.$fShowPalautustyyppi_$cshowList -}
80db12b64919edcb6a2add25e2614739
  $fShowPalautustyyppi1 :: Main.Palautustyyppi -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Main.$fShowPalautustyyppi_$cshowsPrec
                   Main.$fShowAKutsu4) -}
f258d36630d9e405f7be13fa8311cd00
  $fShowPalautustyyppi2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fShowPalautustyyppi3) -}
e94a17efc0449906da4917c2ab72f73b
  $fShowPalautustyyppi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Void"#) -}
bbcf6cc15f9b4817f3c825633ad2f2a6
  $fShowPalautustyyppi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fShowPalautustyyppi5) -}
1f4a4c316791d949798d0fc4aeaa6147
  $fShowPalautustyyppi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Palautustyyppi "#) -}
80db12b64919edcb6a2add25e2614739
  $fShowPalautustyyppi_$cshow ::
    Main.Palautustyyppi -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Palautustyyppi) ->
                 case x of wild {
                   Main.Palautustyyppi b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Main.$fShowPalautustyyppi4
                        (Main.$w$cshowsPrec10 b1 (GHC.Types.[] @ GHC.Types.Char))
                   Main.Void -> Main.$fShowPalautustyyppi2 }) -}
80db12b64919edcb6a2add25e2614739
  $fShowPalautustyyppi_$cshowList ::
    [Main.Palautustyyppi] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Palautustyyppi]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Palautustyyppi
                   Main.$fShowPalautustyyppi1
                   ls
                   s) -}
80db12b64919edcb6a2add25e2614739
  $fShowPalautustyyppi_$cshowsPrec ::
    GHC.Types.Int -> Main.Palautustyyppi -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Main.Palautustyyppi)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Main.Palautustyyppi b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Main.$fShowPalautustyyppi4
                             (Main.$w$cshowsPrec10 b1 eta)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Main.$fShowPalautustyyppi4
                                (Main.$w$cshowsPrec10
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 eta))) } }
                   Main.Void
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Main.$fShowPalautustyyppi2
                        eta }) -}
d0f0d73d75bb14a3641d21719039f952
  $fShowParametri :: GHC.Show.Show Main.Parametri
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Parametri
                  Main.$fShowParametri_$cshowsPrec
                  Main.$fShowParametri_$cshow
                  Main.$fShowParametri_$cshowList -}
d0f0d73d75bb14a3641d21719039f952
  $fShowParametri1 :: Main.Parametri -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U(1*U))><L,U>,
     Unfolding: (\ (w :: Main.Parametri) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Parametri ww1 ww2 ->
                 Main.$w$cshowsPrec9 0# ww1 ww2 w1 }) -}
d0f0d73d75bb14a3641d21719039f952
  $fShowParametri_$cshow :: Main.Parametri -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(1*U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Parametri) ->
                 Main.$fShowParametri_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d0f0d73d75bb14a3641d21719039f952
  $fShowParametri_$cshowList :: [Main.Parametri] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Parametri]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Parametri Main.$fShowParametri1 ls s) -}
d0f0d73d75bb14a3641d21719039f952
  $fShowParametri_$cshowsPrec ::
    GHC.Types.Int -> Main.Parametri -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Parametri)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Parametri ww3 ww4 ->
                 Main.$w$cshowsPrec9 ww1 ww3 ww4 w2 } }) -}
f4ebdef19889a75ee8576c0771e6bcfe
  $fShowSijoitus :: GHC.Show.Show Main.Sijoitus
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Sijoitus
                  Main.$fShowSijoitus_$cshowsPrec
                  Main.$fShowSijoitus_$cshow
                  Main.$fShowSijoitus_$cshowList -}
f4ebdef19889a75ee8576c0771e6bcfe
  $fShowSijoitus1 :: Main.Sijoitus -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Sijoitus) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec12 0# w w1) -}
c1bd49bd882db601b66fc3de264aeac4
  $fShowSijoitus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VanhaSijoitus "#) -}
9ba576cc33cc3f4f465efed9483929e5
  $fShowSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UusiSijoitus "#) -}
f4ebdef19889a75ee8576c0771e6bcfe
  $fShowSijoitus_$cshow :: Main.Sijoitus -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Sijoitus) ->
                 Main.$fShowSijoitus_$cshowsPrec
                   Main.$fShowAKutsu4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f4ebdef19889a75ee8576c0771e6bcfe
  $fShowSijoitus_$cshowList :: [Main.Sijoitus] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Sijoitus]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Sijoitus Main.$fShowSijoitus1 ls s) -}
f4ebdef19889a75ee8576c0771e6bcfe
  $fShowSijoitus_$cshowsPrec ::
    GHC.Types.Int -> Main.Sijoitus -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Sijoitus)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec12 ww1 w1 w2 }) -}
4818381af70be3a5f5206ae0d68c6684
  $fShowTietotyyppi :: GHC.Show.Show Main.Tietotyyppi
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Tietotyyppi
                  Main.$fShowTietotyyppi_$cshowsPrec
                  Main.$fShowTietotyyppi_$cshow
                  Main.$fShowTietotyyppi_$cshowList -}
4818381af70be3a5f5206ae0d68c6684
  $fShowTietotyyppi_$cshow :: Main.Tietotyyppi -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Tietotyyppi) ->
                 case x of wild {
                   Main.TTInt -> Main.$fShowLuokka10
                   Main.TTBool -> Main.$fShowLuokka8
                   Main.TTString -> Main.$fShowLuokka6
                   Main.TTVoid -> Main.$fShowLuokka4 }) -}
4818381af70be3a5f5206ae0d68c6684
  $fShowTietotyyppi_$cshowList ::
    [Main.Tietotyyppi] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Tietotyyppi]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Tietotyyppi
                   Main.$w$cshowsPrec10
                   ls
                   s) -}
4818381af70be3a5f5206ae0d68c6684
  $fShowTietotyyppi_$cshowsPrec ::
    GHC.Types.Int -> Main.Tietotyyppi -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Tietotyyppi)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec10 w1 w2) -}
4670890b4851f9ce5a054b2c4cbed182
  $fShowVOp :: GHC.Show.Show Main.VOp
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.VOp
                  Main.$fShowVOp_$cshowsPrec
                  Main.$fShowVOp_$cshow
                  Main.$fShowVOp_$cshowList -}
aacda2a92ad8fbf4a3218f0ea51bba1f
  $fShowVOp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp2) -}
eeb9dc1752a7d2eff5478e497a247127
  $fShowVOp10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Suurempi"#) -}
513a0bd6e90df65fa987817a023f6cd0
  $fShowVOp11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp12) -}
567a8f319ada73818d8815c10a71c906
  $fShowVOp12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pienempi"#) -}
ffe4b237d1f72c17e5f1dd4b466acb15
  $fShowVOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Erisuuri"#) -}
50b8a3c1ade7cd8b8aab51dec605a9d3
  $fShowVOp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp4) -}
4f5b108e6f94d20f2fce0e72aea67f54
  $fShowVOp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Yhtasuuri"#) -}
a08009b7781a2ffdc29e1293cc7edf3e
  $fShowVOp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp6) -}
41e9752c5571b9e9374a4977cb1412bf
  $fShowVOp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SuurempiYhtasuuri"#) -}
d10357803d895051b693851a852aa984
  $fShowVOp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp8) -}
0537a59f9d1f415ced4b1c18ec75f18c
  $fShowVOp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PienempiYhtasuuri"#) -}
ef1cd7f068338d9fca91f5948198b09c
  $fShowVOp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp10) -}
4670890b4851f9ce5a054b2c4cbed182
  $fShowVOp_$cshow :: Main.VOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.VOp) ->
                 case x of wild {
                   Main.Pienempi -> Main.$fShowVOp11
                   Main.Suurempi -> Main.$fShowVOp9
                   Main.PienempiYhtasuuri -> Main.$fShowVOp7
                   Main.SuurempiYhtasuuri -> Main.$fShowVOp5
                   Main.Yhtasuuri -> Main.$fShowVOp3
                   Main.Erisuuri -> Main.$fShowVOp1 }) -}
4670890b4851f9ce5a054b2c4cbed182
  $fShowVOp_$cshowList :: [Main.VOp] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.VOp]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.VOp Main.$w$cshowsPrec13 ls s) -}
4670890b4851f9ce5a054b2c4cbed182
  $fShowVOp_$cshowsPrec ::
    GHC.Types.Int -> Main.VOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Main.VOp) (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec13 w1 w2) -}
a4e343f0f5085aa1e7f40a8f7017bf2a
  $s$fAlternativeParsecT_$sunion ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
8e76bb33e50d5b34bc1b038e3db009e8
  $s$fAlternativeParsecT_$sunion1 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorItem
            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorItem
            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
a0fdcc7d415a2209bf5768e17a141f79
  $s$fAlternativeParsecT_$swithHints ::
    Text.Megaparsec.Internal.Hints
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> (Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
        -> Text.Megaparsec.State.State [GHC.Types.Char] -> m b)
    -> Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
    -> Text.Megaparsec.State.State [GHC.Types.Char]
    -> m b
  {- Arity: 3, Strictness: <L,U><C(S),1*C1(U)><S,1*U>,
     Inline: (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ @ e
                   @ m :: * -> *
                   @ b
                   (ds :: Text.Megaparsec.Internal.Hints
                            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (c :: Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
                         -> Text.Megaparsec.State.State [GHC.Types.Char] -> m b)
                   (e1 :: Text.Megaparsec.Error.ParseError [GHC.Types.Char] e) ->
                 case e1 of wild {
                   Text.Megaparsec.Error.TrivialError pos us ps
                   -> c (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ e
                           pos
                           us
                           (GHC.Base.foldr
                              @ (Data.Set.Internal.Set
                                   (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                              @ (Data.Set.Internal.Set
                                   (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                                 -> Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                              (\ (ds1 :: Data.Set.Internal.Set
                                           (Text.Megaparsec.Error.ErrorItem
                                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                                 (ds2 :: Data.Set.Internal.Set
                                           (Text.Megaparsec.Error.ErrorItem
                                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                                         -> Data.Set.Internal.Set
                                              (Text.Megaparsec.Error.ErrorItem
                                                 (Text.Megaparsec.Stream.Token
                                                    [GHC.Types.Char])))[OneShot]
                                 (v :: Data.Set.Internal.Set
                                         (Text.Megaparsec.Error.ErrorItem
                                            (Text.Megaparsec.Stream.Token
                                               [GHC.Types.Char])))[OneShot] ->
                               case v of z { DEFAULT ->
                               ds2 (Main.$s$fAlternativeParsecT_$sunion1 z ds1) })
                              (GHC.Base.id
                                 @ (Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))
                              (GHC.Types.:
                                 @ (Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                                 ps
                                 ds
                                   `cast`
                                 (Text.Megaparsec.Internal.N:Hints[0]
                                      <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N))
                              (Data.Set.Internal.Tip
                                 @ (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char])))))
                   Text.Megaparsec.Error.FancyError ipv ipv1 -> c wild }) -}
8569d69451164514cf8c79ea8959ffbf
  $s$fEqErrorFancy ::
    GHC.Classes.Eq (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                  (Text.Megaparsec.Error.$fEqErrorFancy_$c==
                     @ Data.Void.Void
                     Data.Void.$fEqVoid)
                  Main.$s$fEqErrorFancy_$s$fEqErrorFancy_$c/= -}
c9c4f61e21670adf3f16557d06f7fa9a
  $s$fEqErrorFancy_$s$fEqErrorFancy_$c/= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fEqErrorFancy_$c==
                        @ Data.Void.Void
                        Data.Void.$fEqVoid
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
86d49d5035cd732561b46ab038d7bb09
  $s$fEqErrorItem ::
    GHC.Classes.Eq
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorItem
                       (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                  (Text.Megaparsec.Error.$fEqErrorItem_$c==
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fEqChar
                       `cast`
                     (GHC.Classes.Eq (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  Main.$s$fEqErrorItem_$s$fEqErrorItem_$c/= -}
a905f80804ed44e95fc143c27b9a2698
  $s$fEqErrorItem_$s$fEqErrorItem_$c/= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fEqErrorItem_$c==
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fEqChar
                          `cast`
                        (GHC.Classes.Eq (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa48334fc55dcd5b6c255e0c3969bda0
  $s$fOrdErrorFancy ::
    GHC.Classes.Ord (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                  Main.$s$fEqErrorFancy
                  (Text.Megaparsec.Error.$fOrdErrorFancy_$ccompare
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid)
                  (Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid)
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          b
                          a of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid
                     b
                     a)
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          a
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          y
                          x of wild {
                     GHC.Types.False -> y GHC.Types.True -> x })
                  (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          y
                          x of wild {
                     GHC.Types.False -> x GHC.Types.True -> y }) -}
439ce3fe198720ea0b80505e67e3cd0c
  $s$fOrdErrorFancy_$c<= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
494af60328dc78709c0989aed9adb77b
  $s$fOrdErrorFancy_$c>= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
0fa83830dbafdc3bdc73d56034c9ba7c
  $s$fOrdErrorFancy_$cmax ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
23e997e406e0c6f9838d53f2bba6832e
  $s$fOrdErrorFancy_$cmin ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
1a4b76eb537cf7e811946fc8f8e85fde
  $s$fOrdErrorItem ::
    GHC.Classes.Ord
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorItem
                       (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                  Main.$s$fEqErrorItem
                  (Text.Megaparsec.Error.$fOrdErrorItem_$ccompare
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  (Text.Megaparsec.Error.$fOrdErrorItem_$c<
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          b
                          a of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   Text.Megaparsec.Error.$fOrdErrorItem_$c<
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                     b
                     a)
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          a
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (y :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          y
                          x of wild {
                     GHC.Types.False -> y GHC.Types.True -> x })
                  (\ (x :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (y :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          y
                          x of wild {
                     GHC.Types.False -> x GHC.Types.True -> y }) -}
e70a03a206f0a3d02778fc89c0ada090
  $s$fOrdErrorItem_$c<= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (b :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
bd016829e4a42759c3487ef3f20d9bfb
  $s$fOrdErrorItem_$c>= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (b :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9d10a4b2dd056ffad7a13f35096fcbab
  $s$fOrdErrorItem_$cmax ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
06e3625a39c5ae124fe089fda809383e
  $s$fOrdErrorItem_$cmin ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
ad643e299760c1f5eb99d40c6a2d32e1
  $saddPrecLevel ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> [Control.Monad.Combinators.Expr.Operator
          (Text.Megaparsec.Internal.ParsecT
             Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
          a]
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 2, Strictness: <L,C(C1(C1(C1(C1(U)))))><L,1*U> -}
9a21707b8d35ac1f19fa528e75d08f8c
  $sbetween ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity open
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity close
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ @ open
                   @ close
                   @ a
                   (open1 :: Text.Megaparsec.Internal.ParsecT
                               Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity open)
                   (close1 :: Text.Megaparsec.Internal.ParsecT
                                Data.Void.Void
                                GHC.Base.String
                                Data.Functor.Identity.Identity
                                close)
                   (p :: Text.Megaparsec.Internal.ParsecT
                           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ a
                   @ close
                   (Text.Megaparsec.Internal.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ Data.Void.Void
                      @ Data.Functor.Identity.Identity
                      Text.Megaparsec.Stream.$fStream[]
                      @ open
                      @ a
                      open1
                      p)
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <a>_R))
                   close1)
                  `cast`
                (forall (open :: <*>_N) (close :: <*>_N) (a :: <*>_N).
                 <Text.Megaparsec.Internal.ParsecT
                    Data.Void.Void
                    GHC.Base.String
                    Data.Functor.Identity.Identity
                    open>_R
                 ->_R <Text.Megaparsec.Internal.ParsecT
                         Data.Void.Void
                         GHC.Base.String
                         Data.Functor.Identity.Identity
                         close>_R
                 ->_R <Text.Megaparsec.Internal.ParsecT
                         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
ea0c05adbee8327b15bfba19bbd6d6fc
  $sdecimal1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: GHC.Types.Int
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: GHC.Types.Int
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$w$sdecimal @ b ww1 ww2 ww3 w1 w4 }) -}
926f4004c2eb1b9b0894edc6c9436386
  $sdecimal10 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.$sdecimal11) -}
787762eb089d20fb1327cc67a9b69676
  $sdecimal11 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.$sdecimal14
                   Main.$sdecimal12) -}
32760b66541bc502512e35caa5dff4c4
  $sdecimal12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$sdecimal13) -}
c2c517fdb03421f1041f65e22cddeb1e
  $sdecimal13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nteger"#) -}
b518850424e7281090afab4e4f2e10d2
  $sdecimal14 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'i'#) -}
51c59fd77db4b5cc5bbdb57d7ca814a6
  $sdecimal2 ::
    [Data.Set.Internal.Set
       (Text.Megaparsec.Error.ErrorItem
          (Text.Megaparsec.Stream.Token [GHC.Types.Char]))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   Main.$sdecimal3
                   (GHC.Types.[]
                      @ (Data.Set.Internal.Set
                           (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))) -}
bf5570cb521e2ee846153b3f2dde5583
  $sdecimal3 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.$sdecimal4
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
12f3ecb11b6d6ddda355aed5f8c34195
  $sdecimal4 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.$sdecimal5) -}
088cd8a3c38b4e7ebf80d2fcdf6157fa
  $sdecimal5 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.$sdecimal8
                   Main.$sdecimal6) -}
7d58ceba5770ec5378d726de38de02a9
  $sdecimal6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$sdecimal7) -}
b4126a251db0efc70cb7ce3d801032a4
  $sdecimal7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("igit"#) -}
c821bd954dd8ef582c2ba9aa39521bbc
  $sdecimal8 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'd'#) -}
e0292718d247da0f3caa29fd33d16be4
  $sdecimal9 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.$sdecimal10
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
8428b39454e9c5f2e1c5e07d0c50d46f
  $sinsertR_go3 ::
    GHC.Classes.Ord a1 =>
    a1 -> a1 -> Data.Set.Internal.Set a1 -> Data.Set.Internal.Set a1
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,U><S,1*U><S,1*U> -}
4e07fd53c639d6c052a5200e411bb4be
  $sinsert_go3 ::
    GHC.Classes.Ord a1 =>
    a1 -> a1 -> Data.Set.Internal.Set a1 -> Data.Set.Internal.Set a1
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,U><S,1*U><S,1*U> -}
581375ca7c376417ef40991df6a26951
  $spInfixL ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void
      GHC.Base.String
      Data.Functor.Identity.Identity
      (a -> a -> a)
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: [~] -}
a03269c2d7986db7072006fdb181a865
  $spInfixR ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void
      GHC.Base.String
      Data.Functor.Identity.Identity
      (a -> a -> a)
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: [~] -}
2180b7ec5e46cfab375df448355f6a2c
  $tc'AKutsu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6148657327567409288##
                   4595590261782403499##
                   Main.$trModule
                   Main.$tc'AKutsu2
                   0#
                   Main.$tc'AKutsu1) -}
797df28f43a10ef100f175d862a2140a
  $tc'AKutsu1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3b8576851ff78cb52afae16994747c1d
  $tc'AKutsu2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'AKutsu3) -}
2de8d154dbfec2f2c58f1e424c103307
  $tc'AKutsu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AKutsu"#) -}
69135aee176628777a4f795c29da68a7
  $tc'Aliohjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8001802274408989482##
                   6447367613820978404##
                   Main.$trModule
                   Main.$tc'Aliohjelma2
                   0#
                   Main.$tc'Aliohjelma1) -}
5cfcfc04548e45c432045dbe1960f970
  $tc'Aliohjelma1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f1667c7f755950affe43af5c4f9df51d
  $tc'Aliohjelma2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Aliohjelma3) -}
c6dfc7ce6b27ce4b7939232af34c97d9
  $tc'Aliohjelma3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Aliohjelma"#) -}
c2e5c8e7d0e20270126b203a5cd75c43
  $tc'Aritmeettinen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17101064230281127630##
                   17674975807145904712##
                   Main.$trModule
                   Main.$tc'Aritmeettinen2
                   0#
                   Main.$tc'Aritmeettinen1) -}
1efda5deae8c7484bf2628eb1335caaf
  $tc'Aritmeettinen1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bab316dd32b16e31b15e3ba2f1a75b0c
  $tc'Aritmeettinen2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Aritmeettinen3) -}
90a88bf41530715cadb4afc26052327e
  $tc'Aritmeettinen3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Aritmeettinen"#) -}
c46ca0c5e794eb52be55e0d2fd51c05e
  $tc'ArvoBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14002121210451470730##
                   8694696766992514570##
                   Main.$trModule
                   Main.$tc'ArvoBool2
                   0#
                   Main.$tc'ArvoBool1) -}
8fce6a4d3e8ddf79faf6fbdbc27d5b4e
  $tc'ArvoBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
581709c24f91eaef4b29b840c9d51a9a
  $tc'ArvoBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoBool3) -}
c63e2b784c841cee70f316a110dcad82
  $tc'ArvoBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoBool"#) -}
a5e2faf13e426c69eb9771aed50e22c8
  $tc'ArvoInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15914880759453955293##
                   7607306622100378426##
                   Main.$trModule
                   Main.$tc'ArvoInt2
                   0#
                   Main.$tc'ArvoInt1) -}
e92ae8821b4495d651cd3d524e339558
  $tc'ArvoInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b8e2d69ad92a9e932c2dfd78ba5ae525
  $tc'ArvoInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoInt3) -}
6fc1477b4b3e61e31671c5ca3a9e9afd
  $tc'ArvoInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoInt"#) -}
457f08bd791dba9513180f65fe41e58d
  $tc'ArvoString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13422943877696750739##
                   17366286188324008315##
                   Main.$trModule
                   Main.$tc'ArvoString2
                   0#
                   Main.$tc'ArvoString1) -}
aedc991e83fe92f824643814fd34ffdf
  $tc'ArvoString1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1533e575204d56ca95639ff1644a564e
  $tc'ArvoString2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoString3) -}
d9936a71def8372428a2dd3a67ff36fe
  $tc'ArvoString3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoString"#) -}
edb3eee08bfd8cf20a41ad5fa7035236
  $tc'Erisuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5895142615301007063##
                   3197693317535370355##
                   Main.$trModule
                   Main.$tc'Erisuuri2
                   0#
                   Main.$tc'Erisuuri1) -}
7dd68a6fd9ada53a9a7790049d172840
  $tc'Erisuuri1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
bd97141f3a026d0673b7cc9e83d426ac
  $tc'Erisuuri2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Erisuuri3) -}
b0661ba2fde7aa0355484ae159e55b71
  $tc'Erisuuri3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Erisuuri"#) -}
91277cf4c6ecad8eac469ba6a212effe
  $tc'Id :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6661115548681150912##
                   2390779830395085040##
                   Main.$trModule
                   Main.$tc'Id2
                   0#
                   Main.$tc'Id1) -}
6d35fd54b97ba38ddcccd658e4e48e84
  $tc'Id1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d24699d7054aa57629922037a13a5140
  $tc'Id2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Id3) -}
29cd3e18433f03d971b239468b23c21f
  $tc'Id3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Id"#) -}
6fa61f888a36fd68ba013955deac3261
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6132961123506030646##
                   6684648458316850408##
                   Main.$trModule
                   Main.$tc'If2
                   0#
                   Main.$tc'If1) -}
8b1065db9fcf73f2f73be2a2a4ec9bc8
  $tc'If1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
deda67112de693b1b6d98a5a46f3ca3a
  $tc'If2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'If3) -}
1c005ec4d64e1adaf399d4b6d5d523f9
  $tc'If3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'If"#) -}
5a3d64a0e5260e5ef733aaabb702f701
  $tc'IfElse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10716242296366891913##
                   3527870482548045459##
                   Main.$trModule
                   Main.$tc'IfElse2
                   0#
                   Main.$tc'IfElse1) -}
ceb5bfb2adfcaa897a8524503561fc3a
  $tc'IfElse1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1f5f45bf5bf61a1db4ac9a522f5d9ee2
  $tc'IfElse2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'IfElse3) -}
bdeb256e553872bdded71f3a3bba728f
  $tc'IfElse3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IfElse"#) -}
e3ef0551752a0974ae51637a10393bfb
  $tc'Jako :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4994242762110306756##
                   12894901441805598304##
                   Main.$trModule
                   Main.$tc'Jako2
                   0#
                   Main.$tc'Jako1) -}
5465ab53240e0e51c95df26a45d4cd12
  $tc'Jako1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
f9162d4f29f02c21a9a204ae378afeb9
  $tc'Jako2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Jako3) -}
bf187dd44fc294d00a4d74fe887c5955
  $tc'Jako3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Jako"#) -}
6343ad848e50edaf854f7f5cfc3151e7
  $tc'Kerto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12656474128145606944##
                   14039410796370364382##
                   Main.$trModule
                   Main.$tc'Kerto1
                   0#
                   Main.$tc'Jako1) -}
04f43b051cac986daa21e37d86b7681a
  $tc'Kerto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Kerto2) -}
6ec0d500634c9d18b988dad6e55abdc5
  $tc'Kerto2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Kerto"#) -}
56018d9084c929e1d283dbd987239e06
  $tc'LAKutsu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14484326782183838163##
                   8648582530475748979##
                   Main.$trModule
                   Main.$tc'LAKutsu2
                   0#
                   Main.$tc'LAKutsu1) -}
06bb4e39e0aebc20073a038e081c8ce1
  $tc'LAKutsu1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1e486826d74287c727fbc5a59d478eef
  $tc'LAKutsu2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LAKutsu3) -}
c6b0c721411ac5e9d9f6bacc1a85ea4d
  $tc'LAKutsu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LAKutsu"#) -}
6e267af653dfc6c92a251ac32eaea05a
  $tc'LEhto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15056220188369016815##
                   17358479544626899973##
                   Main.$trModule
                   Main.$tc'LEhto2
                   0#
                   Main.$tc'LEhto1) -}
ffa84c952b50520d3391303770b14d97
  $tc'LEhto1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d3ef44865c57f214b96b4ee8dee0468b
  $tc'LEhto2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LEhto3) -}
06740e05c5a0bcee6aac78987fe9ed18
  $tc'LEhto3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LEhto"#) -}
a9306d145ced53ed10a90ff2a57d23de
  $tc'LPalautus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18077896862279206212##
                   15101955476175411170##
                   Main.$trModule
                   Main.$tc'LPalautus2
                   0#
                   Main.$tc'LPalautus1) -}
7cb9fa9c6e2b423bf23f70e910162369
  $tc'LPalautus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6db33312a1564211ff402233a4b19770
  $tc'LPalautus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LPalautus3) -}
2fc4fd53216f1e1154d0bd5719e7d27d
  $tc'LPalautus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LPalautus"#) -}
6e717c9ad9ee88d58341fcfa7838823d
  $tc'LSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10500393949164787957##
                   9747829419435095061##
                   Main.$trModule
                   Main.$tc'LSijoitus2
                   0#
                   Main.$tc'LSijoitus1) -}
4f2aabd02d99373c240d5ea8650b501f
  $tc'LSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c0cf39c7ada068b12d40d56024af487b
  $tc'LSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LSijoitus3) -}
2430fb198f8e4dafaf49cf1b996dcf56
  $tc'LSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LSijoitus"#) -}
6feecd3b8e201d7f49882a77779d6ce7
  $tc'LSilmukka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1761139517769780880##
                   9072162367831536473##
                   Main.$trModule
                   Main.$tc'LSilmukka2
                   0#
                   Main.$tc'LSilmukka1) -}
04450c348abba12d38a8478f88aa26af
  $tc'LSilmukka1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fa30ccb8dd86a11b51a6420aae528216
  $tc'LSilmukka2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LSilmukka3) -}
ed95570afd8f46cf32880d5d855e2265
  $tc'LSilmukka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LSilmukka"#) -}
1d3708e7694c8c9fab051ff3b6b1db7b
  $tc'LTulostus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15087648076301262718##
                   3932854075053917859##
                   Main.$trModule
                   Main.$tc'LTulostus1
                   0#
                   Main.$tc'LPalautus1) -}
6e83dd0e9684feedd1940388c3b5143f
  $tc'LTulostus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LTulostus2) -}
0540dbfdeabec0fe27e4702d24b5b024
  $tc'LTulostus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LTulostus"#) -}
63cdb0db0bc4725c4fbaa8c412ddce3a
  $tc'Luokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18095189686615302436##
                   8201994814945175776##
                   Main.$trModule
                   Main.$tc'Luokka2
                   0#
                   Main.$tc'Luokka1) -}
5b7c3871343e4079223f2866f82ba283
  $tc'Luokka1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f0de039815bcd1754da62dfa1075971a
  $tc'Luokka2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Luokka3) -}
d1afde293502774dd91d1e08b17dd8a9
  $tc'Luokka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Luokka"#) -}
b0390974655d1dcf5ba790712ef96e7c
  $tc'MAKutsu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6166168916505452101##
                   14875962011584367401##
                   Main.$trModule
                   Main.$tc'MAKutsu2
                   0#
                   Main.$tc'MAKutsu1) -}
6f536c424dcfaa7e8c4837601bdc4c95
  $tc'MAKutsu1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b391e6a4eb2ce26a21f35391bb6ab676
  $tc'MAKutsu2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MAKutsu3) -}
e31a0e5a563c41529eadebeec9ed4364
  $tc'MAKutsu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MAKutsu"#) -}
a23ed1b8f99e9cfeb0e5dc8fde55b506
  $tc'MArvo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16290877833611856718##
                   16697237925670610662##
                   Main.$trModule
                   Main.$tc'MArvo2
                   0#
                   Main.$tc'MArvo1) -}
68736143f867e837ae5df499d0032350
  $tc'MArvo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
37d6d00807161f2ccd0aa2cdb81c6d61
  $tc'MArvo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MArvo3) -}
4db7daab63320ce29dec1865d880f276
  $tc'MArvo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MArvo"#) -}
c0a4dad2f07a3e36078de0b77a94b30e
  $tc'MId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10418609164891684108##
                   16816117487322586611##
                   Main.$trModule
                   Main.$tc'MId2
                   0#
                   Main.$tc'MId1) -}
1e3844cb3ae2ce5d341031fd447ab750
  $tc'MId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
82d4df7de49f450db4091ab061cab59f
  $tc'MId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MId3) -}
9f7eea68f916564d25a7be74fbd3bd8c
  $tc'MId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MId"#) -}
57b4fff734e48ae5ac78cf928204b484
  $tc'MainOhjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14233149494168175295##
                   8347624946644061804##
                   Main.$trModule
                   Main.$tc'MainOhjelma2
                   0#
                   Main.$tc'MainOhjelma1) -}
a72960497af76559c8a057b5076e06a2
  $tc'MainOhjelma1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e485cc26c80fe4eda5495f65367a4935
  $tc'MainOhjelma2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MainOhjelma3) -}
4a8554a8eec4b8c9414d147ab58b5985
  $tc'MainOhjelma3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MainOhjelma"#) -}
fbd87b299fe2b7dfb422924324b6f1c8
  $tc'Miinus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6617136556733717570##
                   11181307621559174908##
                   Main.$trModule
                   Main.$tc'Miinus1
                   0#
                   Main.$tc'Jako1) -}
2cbe440d4916b6a43a7e0dd3e844952c
  $tc'Miinus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Miinus2) -}
59ab6d065afb426b07989ddbcc38e663
  $tc'Miinus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Miinus"#) -}
766a4803c0ee370e2f3b5a7f77ea36ae
  $tc'Palautustyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16711401376202205237##
                   4609325661798551430##
                   Main.$trModule
                   Main.$tc'Palautustyyppi2
                   0#
                   Main.$tc'Palautustyyppi1) -}
e777164f5b13d23f789d87929a03ba5b
  $tc'Palautustyyppi1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
15479d27031149e7b6838bfdef1d3ebc
  $tc'Palautustyyppi2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Palautustyyppi3) -}
43d5679ca9053ca08fb5c11cc7293dd4
  $tc'Palautustyyppi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Palautustyyppi"#) -}
824172b9d21ca1b879f1d88fcc3efd17
  $tc'Parametri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3083725551386525162##
                   3154017588176226034##
                   Main.$trModule
                   Main.$tc'Parametri2
                   0#
                   Main.$tc'Parametri1) -}
a825ee8cd1822729827588934ee88720
  $tc'Parametri1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
55b5b1e7b7f927990beb177d5d22be79
  $tc'Parametri2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Parametri3) -}
e655ec35baa7aa24208fec66fc9408ec
  $tc'Parametri3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Parametri"#) -}
d9a857f65d926d46a5f321af1d617eed
  $tc'Pienempi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10099102669142310568##
                   1767607252871466791##
                   Main.$trModule
                   Main.$tc'Pienempi1
                   0#
                   Main.$tc'Erisuuri1) -}
be419fd578a698bf4ea6bffc87efedf9
  $tc'Pienempi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Pienempi2) -}
bacbfd629ce7769dad0bbc214a5f3005
  $tc'Pienempi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pienempi"#) -}
f67ab51224cb7a14542b316d8c5d3655
  $tc'PienempiYhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2949922471695512643##
                   7788238106406568107##
                   Main.$trModule
                   Main.$tc'PienempiYhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
ee414fc1339481f6c10676809ab500cc
  $tc'PienempiYhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'PienempiYhtasuuri2) -}
cd4911bf6d726e8540ae77cb3bc6f889
  $tc'PienempiYhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PienempiYhtasuuri"#) -}
5bca946ec65cc63a14d6bdc30dfc8a98
  $tc'Plus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8170225512942515170##
                   11280510069790138749##
                   Main.$trModule
                   Main.$tc'Plus1
                   0#
                   Main.$tc'Jako1) -}
3429bb676cea8f5dd15049a449df3494
  $tc'Plus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Plus2) -}
fec8e835eada50a6e976e2febd0dc117
  $tc'Plus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Plus"#) -}
05a067a89372cc0ed90bd13a0dc0c86e
  $tc'Suurempi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4850453945634075477##
                   12487924943602007633##
                   Main.$trModule
                   Main.$tc'Suurempi1
                   0#
                   Main.$tc'Erisuuri1) -}
b94844d51bd2d1d4c03c0b13548f1503
  $tc'Suurempi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Suurempi2) -}
5ff1de94bc30f9fd54bc325188c6d57d
  $tc'Suurempi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Suurempi"#) -}
70ee91920c757c0b85d309540952ed90
  $tc'SuurempiYhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11585316968300943360##
                   2648360321319429010##
                   Main.$trModule
                   Main.$tc'SuurempiYhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
e6799f3aae226381aa1495fac2f3b86d
  $tc'SuurempiYhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'SuurempiYhtasuuri2) -}
cd3218e58711c1e977c04f9f5757b97d
  $tc'SuurempiYhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SuurempiYhtasuuri"#) -}
5dcaf65826f794c119b1421f1a7ffe33
  $tc'TTBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15214124812460183821##
                   1131605779699799354##
                   Main.$trModule
                   Main.$tc'TTBool2
                   0#
                   Main.$tc'TTBool1) -}
f84d5d7b4c236b75bfe4c79c0e14553f
  $tc'TTBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
9496bab5fabfce3f67c3a7f06bb42f0c
  $tc'TTBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTBool3) -}
e07f15a1b499697127d11e1ce71af97f
  $tc'TTBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTBool"#) -}
a572fbb46bf479c96f30ab9e8bfb0364
  $tc'TTInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   163140848333076578##
                   8564368219304769662##
                   Main.$trModule
                   Main.$tc'TTInt1
                   0#
                   Main.$tc'TTBool1) -}
fb8f73271bb26422145bf264a4f3886c
  $tc'TTInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTInt2) -}
b1d5f7be90f20527e14078e4a3604117
  $tc'TTInt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTInt"#) -}
7f2819ce7a6dbac0e3f314c30327b1b7
  $tc'TTString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17576615335097087784##
                   17370170758128700116##
                   Main.$trModule
                   Main.$tc'TTString1
                   0#
                   Main.$tc'TTBool1) -}
a08a86fa620ac6326e2c22ec0ae67834
  $tc'TTString1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTString2) -}
edd1d1e032c74960c6bd4dee3c8d9325
  $tc'TTString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTString"#) -}
845a14d8e517b47ba4c9e5bcfe13d2bc
  $tc'TTVoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13994410426611265761##
                   15280704162710775504##
                   Main.$trModule
                   Main.$tc'TTVoid1
                   0#
                   Main.$tc'TTBool1) -}
9a8f3e591af59e8973edf42b13e64d52
  $tc'TTVoid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTVoid2) -}
a10c921a50a78e09a544315fe9e723da
  $tc'TTVoid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTVoid"#) -}
3ebbe2b9d2ef3128b562bbb1bba46b48
  $tc'UusiSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8046529862898521954##
                   3119037549882023950##
                   Main.$trModule
                   Main.$tc'UusiSijoitus2
                   0#
                   Main.$tc'UusiSijoitus1) -}
c6f4773369e2b0cf2c91dcb91fd09c59
  $tc'UusiSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fd2dacbc0d2d2d9c126b4f93b7d79857
  $tc'UusiSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'UusiSijoitus3) -}
6f332aa9348c3b46403b75988e6d9786
  $tc'UusiSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UusiSijoitus"#) -}
c251edf26bd6266fb2a3c9e8084a1841
  $tc'VanhaSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13972460370976919435##
                   8545954513250652187##
                   Main.$trModule
                   Main.$tc'VanhaSijoitus2
                   0#
                   Main.$tc'VanhaSijoitus1) -}
40647631f34fd4f31811cc77c5c9d0cd
  $tc'VanhaSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
432963334663e4e4d64801140761b650
  $tc'VanhaSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'VanhaSijoitus3) -}
62f885f0f67a98bb1346e47198a26c7f
  $tc'VanhaSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VanhaSijoitus"#) -}
03b3f056764cbf6a1fef997528c5bad1
  $tc'Vertailu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6508159651505920416##
                   2058730949561452416##
                   Main.$trModule
                   Main.$tc'Vertailu2
                   0#
                   Main.$tc'Vertailu1) -}
daee01127799b9039e611beac56d64c8
  $tc'Vertailu1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9f03bea690d2be12c8adc2b1d0a498c7
  $tc'Vertailu2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Vertailu3) -}
4c48e0549b8814acb8045e52f7caafbc
  $tc'Vertailu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Vertailu"#) -}
258ba704b8a007de5a11b6c48acf18d0
  $tc'Void :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5157635618976230456##
                   9993593079178362531##
                   Main.$trModule
                   Main.$tc'Void2
                   0#
                   Main.$tc'Void1) -}
a4fb5c8f1c7a402e1b57c41ea8365d03
  $tc'Void1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
0e1b8bdf54945ea6a6d103d59fc6e5c6
  $tc'Void2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Void3) -}
63b3228fc63ef62c49c13b6a36419997
  $tc'Void3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Void"#) -}
b73be6f762a378fe529c0022f0424f91
  $tc'Yhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4760123363911811134##
                   3198719185355581796##
                   Main.$trModule
                   Main.$tc'Yhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
93471daccb00bfd855719ea6e97a58be
  $tc'Yhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Yhtasuuri2) -}
3277cc6366c59c3bcb75d02e062799d7
  $tc'Yhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Yhtasuuri"#) -}
feba9a8b7ad72af4e1f0deb366c7cd43
  $tcAKutsu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3446103887948852146##
                   8026977455857256696##
                   Main.$trModule
                   Main.$tcAKutsu1
                   0#
                   GHC.Types.krep$*) -}
127692b6458909a7be6ed34c90cabf37
  $tcAKutsu1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcAKutsu2) -}
899986a6bd55ab6760db69111d91c32d
  $tcAKutsu2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AKutsu"#) -}
717eb41e1856728861a7717f3696868d
  $tcAliohjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1810419551870051689##
                   13293127293462791418##
                   Main.$trModule
                   Main.$tcAliohjelma1
                   0#
                   GHC.Types.krep$*) -}
55dce0c46972caa612080c0123333a7c
  $tcAliohjelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcAliohjelma2) -}
6ef02f2a697a4d6236ab7a4921cab8ed
  $tcAliohjelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Aliohjelma"#) -}
ccea51282dd95d980fab2ae3d8a8ab21
  $tcArvo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3326573508887049350##
                   6605479587420527467##
                   Main.$trModule
                   Main.$tcArvo1
                   0#
                   GHC.Types.krep$*) -}
98c98c37ed88516fa8d6acdb00dc0ea2
  $tcArvo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcArvo2) -}
13888ef55e9cb08f644e8af9bb8283bb
  $tcArvo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arvo"#) -}
fe953c15d410c67dc700f671d588fcd3
  $tcEhtolause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7441365987239631328##
                   13327124068771298015##
                   Main.$trModule
                   Main.$tcEhtolause1
                   0#
                   GHC.Types.krep$*) -}
25f9ab72edf503a0d42dbd20a45dade6
  $tcEhtolause1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcEhtolause2) -}
65d5cb62b6c5069f78571037fd660e55
  $tcEhtolause2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Ehtolause"#) -}
77222c749cf4380842c7da49bbff75d8
  $tcId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14785258017342714209##
                   13007136961065071287##
                   Main.$trModule
                   Main.$tcId1
                   0#
                   GHC.Types.krep$*) -}
0505cacf733d86daba8b3152e7188aa1
  $tcId1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcId2) -}
45bf98ee9ef0b2a297a3b25061fd134e
  $tcId2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Id"#) -}
28e265a8ece617bdf26218cedb33bc0e
  $tcLauseke :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14745130585350838121##
                   7446357493128569355##
                   Main.$trModule
                   Main.$tcLauseke1
                   0#
                   GHC.Types.krep$*) -}
872a340128a5f477ee3b008575497d7a
  $tcLauseke1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcLauseke2) -}
c2a5bbe7163de79bd065d975cd00b686
  $tcLauseke2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lauseke"#) -}
aa362072e6ea0d6a86790c1976aa681c
  $tcLuokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10679833007829350280##
                   6661038335128979810##
                   Main.$trModule
                   Main.$tcLuokka1
                   0#
                   GHC.Types.krep$*) -}
c0946cdc1be68037b5bffdd69861c4da
  $tcLuokka1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcLuokka2) -}
0cafe4460fa3cf41582bb88f4758ebd7
  $tcLuokka2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Luokka"#) -}
23484d453e5158500ea10b448646caaa
  $tcMaaritelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3684832993326292215##
                   12150521874317670511##
                   Main.$trModule
                   Main.$tcMaaritelma1
                   0#
                   GHC.Types.krep$*) -}
f03e4c171b808fc0e2185601089401e2
  $tcMaaritelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcMaaritelma2) -}
639ad2dbcb93b69bd3d1e61214565f4f
  $tcMaaritelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Maaritelma"#) -}
57c0975fc096608304249b766adba2a0
  $tcMainOhjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15328713886095295855##
                   7534288064830813188##
                   Main.$trModule
                   Main.$tcMainOhjelma1
                   0#
                   GHC.Types.krep$*) -}
86a940ca908d8d4c79336f9e5a8dfa08
  $tcMainOhjelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcMainOhjelma2) -}
7cc8b3b467b55eed95d585d255aa4245
  $tcMainOhjelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MainOhjelma"#) -}
44c718cc595747e694d78f63f0fa80ce
  $tcOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6710467076270626544##
                   8243317404965346010##
                   Main.$trModule
                   Main.$tcOp1
                   0#
                   GHC.Types.krep$*) -}
21a79cb71daf4cfad8647ccb1f1c32d2
  $tcOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcOp2) -}
052b5424e70753ab8ee947cfce99605a
  $tcOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Op"#) -}
968c219a23c34f526e49094edb731fb7
  $tcPalautustyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9313234817569966368##
                   17728429788371397006##
                   Main.$trModule
                   Main.$tcPalautustyyppi1
                   0#
                   GHC.Types.krep$*) -}
5fb8f40eed71c7192819e1e01843e059
  $tcPalautustyyppi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcPalautustyyppi2) -}
e728676562f982dd69ddf11a9d3dee44
  $tcPalautustyyppi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Palautustyyppi"#) -}
f5d66c34472e7ba12d22ff69fcf35ba2
  $tcParametri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2329219927416706185##
                   2470713353278703101##
                   Main.$trModule
                   Main.$tcParametri1
                   0#
                   GHC.Types.krep$*) -}
12f28dbecef1107991094ee3ad54b3db
  $tcParametri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcParametri2) -}
60729091e0b920cfce50e7f6679850a0
  $tcParametri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parametri"#) -}
b00ea2d658a42325a3f047d47ff204e9
  $tcSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11205050677393953272##
                   7074848778810997230##
                   Main.$trModule
                   Main.$tcSijoitus1
                   0#
                   GHC.Types.krep$*) -}
bfeb94fb7828ccd57cf25854073b19ab
  $tcSijoitus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcSijoitus2) -}
8fb44f7e13ed42f76b2065f70936e655
  $tcSijoitus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Sijoitus"#) -}
94b3126c54b619ba8960563cbb21b29a
  $tcTietotyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6890128802254120107##
                   2752455493797044054##
                   Main.$trModule
                   Main.$tcTietotyyppi1
                   0#
                   GHC.Types.krep$*) -}
3733b7f5160b54b1c52ab26968773a70
  $tcTietotyyppi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcTietotyyppi2) -}
21cc97ae7b699c84971d3a654f77ca8f
  $tcTietotyyppi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tietotyyppi"#) -}
fb77b3b0a109c92ac3545646d171a104
  $tcVOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11151184663418058086##
                   10793825110668627817##
                   Main.$trModule
                   Main.$tcVOp1
                   0#
                   GHC.Types.krep$*) -}
4190929d366c1633807626b6c7f8b5bc
  $tcVOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcVOp2) -}
f9064faff746525de671b75f842cc951
  $tcVOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VOp"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
93fd197c0cb500e27ef32c0be170a570
  $w$cshow :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   Main.$fShowAKutsu2
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShow(,)3
                      (GHC.Show.showLitString ww Main.$fShowArvo5))) -}
70b434233c0b383083b1b7566c4ca8a9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Main.Id
    -> [Main.Maaritelma]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(1*U)><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Id)
                   (ww2 :: [Main.Maaritelma])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowAKutsu3
                       (case ww1 of ww3 { Main.Id ww4 ->
                        Main.$w$cshowsPrec2
                          11#
                          ww4
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (case ww2 of wild {
                                [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x
                                : x1 xs
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.showList__3
                                     (Main.$w$cshowsPrec1
                                        0#
                                        x1
                                        (let {
                                           lvl46 :: [GHC.Types.Char]
                                           = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x
                                         } in
                                         letrec {
                                           showl :: [Main.Maaritelma] -> GHC.Base.String
                                             {- Arity: 1, Strictness: <S,1*U> -}
                                           = \ (ds2 :: [Main.Maaritelma]) ->
                                             case ds2 of wild1 {
                                               [] -> lvl46
                                               : y ys
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    GHC.Show.showList__1
                                                    (Main.$w$cshowsPrec1 0# y (showl ys)) }
                                         } in
                                         showl xs)) })) })
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
70b434233c0b383083b1b7566c4ca8a9
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Main.Maaritelma -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
4818381af70be3a5f5206ae0d68c6684
  $w$cshowsPrec10 ::
    Main.Tietotyyppi -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Tietotyyppi) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.TTInt -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka10 w1
                   Main.TTBool -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka8 w1
                   Main.TTString -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka6 w1
                   Main.TTVoid
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka4 w1 }) -}
ad213cd5300a7fb1061946df44d0bb67
  $w$cshowsPrec11 :: Main.Op -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Op) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Plus -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp7 w1
                   Main.Miinus -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp5 w1
                   Main.Kerto -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp3 w1
                   Main.Jako -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp1 w1 }) -}
f4ebdef19889a75ee8576c0771e6bcfe
  $w$cshowsPrec12 ::
    GHC.Prim.Int#
    -> Main.Sijoitus -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Main.Sijoitus)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.UusiSijoitus b1 b2 b3
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String)[OneShot] ->
                          GHC.CString.unpackAppendCString#
                            Main.$fShowSijoitus3
                            (Main.$w$cshowsPrec10
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of ww1 { Main.Id ww2 ->
                                   Main.$w$cshowsPrec2
                                     11#
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showSpace1
                                        (Main.$w$cshowsPrec1 11# b3 x)) })))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p w1
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1)) }
                   Main.VanhaSijoitus b1 b2
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowSijoitus2
                             (case b1 of ww1 { Main.Id ww2 ->
                              Main.$w$cshowsPrec2
                                11#
                                ww2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (Main.$w$cshowsPrec1 11# b2 w1)) })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowSijoitus2
                                (case b1 of ww1 { Main.Id ww2 ->
                                 Main.$w$cshowsPrec2
                                   11#
                                   ww2
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (Main.$w$cshowsPrec1
                                         11#
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w1))) })) } }) -}
4670890b4851f9ce5a054b2c4cbed182
  $w$cshowsPrec13 :: Main.VOp -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.VOp) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Pienempi -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp11 w1
                   Main.Suurempi -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp9 w1
                   Main.PienempiYhtasuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp7 w1
                   Main.SuurempiYhtasuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp5 w1
                   Main.Yhtasuuri -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp3 w1
                   Main.Erisuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp1 w1 }) -}
e5d2100e13f7d16cabc701f99a917697
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowAKutsu2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowAKutsu2
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString
                                 ww1
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))))) }) -}
51bd9043b7508c206413dcf2bea8f4d9
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Main.Id
    -> Main.Palautustyyppi
    -> [Main.Parametri]
    -> [Main.Lauseke]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,1*U(1*U)><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [2] -}
555e636b477ee8b508e51feaa17bf41b
  $w$cshowsPrec4 ::
    GHC.Prim.Int# -> Main.Arvo -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Main.Arvo)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.ArvoInt b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo4
                             (case b1 of ww2 { GHC.Types.I# ww3 ->
                              case GHC.Show.$wshowSignedInt 11# ww3 w1 of ww4 { (#,#) ww5 ww6 ->
                              GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo4
                                (case b1 of ww2 { GHC.Types.I# ww3 ->
                                 case GHC.Show.$wshowSignedInt
                                        11#
                                        ww3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           w1) of ww4 { (#,#) ww5 ww6 ->
                                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) }
                   Main.ArvoBool b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo3
                             (case b1 of wild1 {
                                GHC.Types.False
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool4 w1
                                GHC.Types.True
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool2 w1 })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo3
                                (case b1 of wild1 {
                                   GHC.Types.False
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool4
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1)
                                   GHC.Types.True
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool2
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1) })) }
                   Main.ArvoString b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w1)))
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w1))))) } }) -}
73e9e9780be977ac98befcd5cdf84e52
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> Main.Ehtolause -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
73e9e9780be977ac98befcd5cdf84e52
  $w$cshowsPrec6 ::
    GHC.Prim.Int# -> Main.Lauseke -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
f05858ab1e00a48fad2c339993373dbf
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> Main.Id
    -> Main.MainOhjelma
    -> [Main.Aliohjelma]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U)><L,1*U(1*U(1*U,1*U(1*U)),1*U)><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Id)
                   (ww2 :: Main.MainOhjelma)
                   (ww3 :: [Main.Aliohjelma])
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     case ww1 of ww4 { Main.Id ww5 ->
                     Main.$w$cshowsPrec2
                       11#
                       ww5
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.showSpace1
                          (case ww2 of ww6 { Main.MainOhjelma ww7 ww8 ->
                           Main.$w$cshowsPrec8
                             11#
                             ww7
                             ww8
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.showSpace1
                                (Main.$fShowAliohjelma_$cshowList ww3 x)) })) }
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka2 (g w)
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Main.$fShowLuokka2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))) }) -}
41e81fab967a034a08bc96a955051ea1
  $w$cshowsPrec8 ::
    GHC.Prim.Int#
    -> Main.Parametri
    -> [Main.Lauseke]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(1*U,1*U(1*U))><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Parametri)
                   (ww2 :: [Main.Lauseke])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowLuokka13
                       (case ww1 of ww3 { Main.Parametri ww4 ww5 ->
                        Main.$w$cshowsPrec9
                          11#
                          ww4
                          ww5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (case ww2 of wild {
                                [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x
                                : x1 xs
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.showList__3
                                     (Main.$w$cshowsPrec6
                                        0#
                                        x1
                                        (let {
                                           lvl46 :: [GHC.Types.Char]
                                           = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x
                                         } in
                                         letrec {
                                           showl :: [Main.Lauseke] -> GHC.Base.String
                                             {- Arity: 1, Strictness: <S,1*U> -}
                                           = \ (ds2 :: [Main.Lauseke]) ->
                                             case ds2 of wild1 {
                                               [] -> lvl46
                                               : y ys
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    GHC.Show.showList__1
                                                    (Main.$w$cshowsPrec6 0# y (showl ys)) }
                                         } in
                                         showl xs)) })) })
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
e4c63a424db2cbb14e104fbcc31c5f3d
  $w$cshowsPrec9 ::
    GHC.Prim.Int#
    -> Main.Tietotyyppi
    -> Main.Id
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Tietotyyppi)
                   (ww2 :: Main.Id)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowLuokka12
                        (Main.$w$cshowsPrec10
                           ww1
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (case ww2 of ww3 { Main.Id ww4 ->
                               Main.$w$cshowsPrec2 11# ww4 w })))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowLuokka12
                           (Main.$w$cshowsPrec10
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showSpace1
                                 (case ww2 of ww3 { Main.Id ww4 ->
                                  Main.$w$cshowsPrec2
                                    11#
                                    ww4
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w) })))) }) -}
47e3547f57e15e0b1d867503282137e1
  $w$sdecimal ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: GHC.Types.Int
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case GHC.List.$wspan
                        @ GHC.Types.Char
                        GHC.Unicode.isDigit
                        ww of ww3 { (#,#) ww4 ww5 ->
                 case ww4 of wild {
                   []
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (case ww of wild1 {
                                 []
                                 -> Text.Megaparsec.Error.EndOfInput
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 : t ts
                                 -> Text.Megaparsec.Error.Tokens
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                      (Text.Megaparsec.Internal.nes
                                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                         t `cast`
                                         (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))) }))
                           Main.$sdecimal9)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] ww ww1 ww2)
                   : ds1 ds2
                   -> w (Main.$wgo wild 0#)
                        (case GHC.List.$wlenAcc
                                @ GHC.Types.Char
                                wild
                                0# of ww6 { DEFAULT ->
                         Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           ww5
                           (GHC.Prim.+# ww1 ww6)
                           ww2 })
                        Main.$sdecimal2
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N)) } }) -}
3e9ddbeefbd349f843cb8d8fcd5cb1a1
  $w$sskipLineComment ::
    Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
    -> forall b1.
       [GHC.Types.Char]
       -> GHC.Prim.Int#
       -> Text.Megaparsec.State.PosState [GHC.Types.Char]
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2] -}
37fb9ecc436759ba8b4ccbb953276aa2
  $w$sspace ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> forall b.
       Text.Megaparsec.State.State GHC.Base.String
       -> (()
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token GHC.Base.String)
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Data.Functor.Identity.Identity b)
       -> (()
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token GHC.Base.String)
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 7,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
d6dc56b13e00ac7de59f24e229df77b7
  $wgo :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><S,U>m, Inline: [2] -}
624cd5c98da37967327e15ac8896e914
  $wgo1 ::
    ([Main.Lauseke] -> [Main.Lauseke])
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> ([Main.Lauseke]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> ([Main.Lauseke]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,C(U)><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
fcb2aeccacb2fe3200c7d2da725d76be
  $wgo2 ::
    ([Main.Aliohjelma] -> [Main.Aliohjelma])
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> ([Main.Aliohjelma]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> ([Main.Aliohjelma]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,C(U)><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
03332950add5dad710b8d8b20e62304c
  $widentifier ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Inline: [2] -}
cefe3b410c2355a9b686432f6e029b53
  $wjasennin ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: ()
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case ww of wild {
                   []
                   -> w GHC.Tuple.()
                        (Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           (GHC.Types.[] @ GHC.Types.Char)
                           ww1
                           ww2)
                        (GHC.Types.[]
                           @ (Data.Set.Internal.Set
                                (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N))
                   : t ts
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (Text.Megaparsec.Error.Tokens
                                 @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 (Text.Megaparsec.Internal.nes
                                    @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                    t `cast` (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0]))))))
                           Main.jasennin3)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] wild ww1 ww2) }) -}
84ec6edd3554d83f6fbdc3216cd99920
  $wparametrit ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
992cd243fb1546ef0187c6e79b0e612c
  $wwhitespace ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: ()
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case GHC.List.$wspan
                        @ GHC.Types.Char
                        GHC.Unicode.isSpace
                        ww of ww3 { (#,#) ww4 ww5 ->
                 case ww4 of wild {
                   []
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (case ww of wild1 {
                                 []
                                 -> Text.Megaparsec.Error.EndOfInput
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 : t ts
                                 -> Text.Megaparsec.Error.Tokens
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                      (Text.Megaparsec.Internal.nes
                                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                         t `cast`
                                         (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))) }))
                           Main.akutsu9)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] ww ww1 ww2)
                   : ds1 ds2
                   -> w GHC.Tuple.()
                        (case GHC.List.$wlenAcc
                                @ GHC.Types.Char
                                wild
                                0# of ww6 { DEFAULT ->
                         Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           ww5
                           (GHC.Prim.+# ww1 ww6)
                           ww2 })
                        Main.akutsu8
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N)) } }) -}
70b434233c0b383083b1b7566c4ca8a9
  data AKutsu = AKutsu Main.Id [Main.Maaritelma]
7ba4359350456c0e515d9a8dee1fed46
  data Aliohjelma
    = Aliohjelma Main.Id
                 Main.Palautustyyppi
                 [Main.Parametri]
                 [Main.Lauseke]
555e636b477ee8b508e51feaa17bf41b
  data Arvo
    = ArvoInt GHC.Types.Int
    | ArvoBool GHC.Types.Bool
    | ArvoString GHC.Base.String
73e9e9780be977ac98befcd5cdf84e52
  data Ehtolause
    = If Main.Maaritelma [Main.Lauseke]
    | IfElse Main.Maaritelma [Main.Lauseke] [Main.Lauseke]
e8a8bf098337ffa9089d6ee605f228cc
  data Id = Id GHC.Base.String
73e9e9780be977ac98befcd5cdf84e52
  data Lauseke
    = LTulostus Main.Maaritelma
    | LSijoitus Main.Sijoitus
    | LPalautus Main.Maaritelma
    | LEhto Main.Ehtolause
    | LSilmukka Main.Maaritelma [Main.Lauseke]
    | LAKutsu Main.AKutsu
12fc2da6187540e7a47cb6172737a6df
  data Luokka = Luokka Main.Id Main.MainOhjelma [Main.Aliohjelma]
70b434233c0b383083b1b7566c4ca8a9
  data Maaritelma
    = MId Main.Id
    | MArvo Main.Arvo
    | Aritmeettinen Main.Op Main.Maaritelma Main.Maaritelma
    | Vertailu Main.VOp Main.Maaritelma Main.Maaritelma
    | MAKutsu Main.AKutsu
4bee8c4a373c3f245e725bd9447f9327
  data MainOhjelma = MainOhjelma Main.Parametri [Main.Lauseke]
ad213cd5300a7fb1061946df44d0bb67
  data Op = Plus | Miinus | Kerto | Jako
80db12b64919edcb6a2add25e2614739
  data Palautustyyppi = Palautustyyppi Main.Tietotyyppi | Void
d0f0d73d75bb14a3641d21719039f952
  data Parametri = Parametri Main.Tietotyyppi Main.Id
0a93c8eee1c5d0c55d40020d6da0f5ed
  type Parser =
    Text.Megaparsec.Parsec Data.Void.Void GHC.Base.String :: * -> *
f4ebdef19889a75ee8576c0771e6bcfe
  data Sijoitus
    = UusiSijoitus Main.Tietotyyppi Main.Id Main.Maaritelma
    | VanhaSijoitus Main.Id Main.Maaritelma
4818381af70be3a5f5206ae0d68c6684
  data Tietotyyppi = TTInt | TTBool | TTString | TTVoid
4670890b4851f9ce5a054b2c4cbed182
  data VOp
    = Pienempi
    | Suurempi
    | PienempiYhtasuuri
    | SuurempiYhtasuuri
    | Yhtasuuri
    | Erisuuri
68ab2248b659316e68feb03a954ee5cb
  aTermi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.aTermi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
d5d7979562e74c9dcdb620de85b556ee
  aTermi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
4ff4d83cf68a087e5d563b5d875f070e
  akutsu :: Main.Parser Main.AKutsu
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.akutsu1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.AKutsu>_R)) -}
bcac14478e3adc61fe0740aada3a4d5a
  akutsu1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.AKutsu
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.AKutsu
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.AKutsu
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.AKutsu
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.akutsu2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.AKutsu
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.akutsu2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.AKutsu
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
fd45edfc45d35138dfb13c42d296c491
  akutsu10 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.akutsu11) -}
80186a772a4635ce1b6191b5df403c42
  akutsu11 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.akutsu14
                   Main.akutsu12) -}
880028457dd9bbaa585dfa50aec39288
  akutsu12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.akutsu13) -}
28d3317cb85d78ece9ab29a8647826fd
  akutsu13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hite space"#) -}
178a9afd1c97f2594ffe3aa3213d38da
  akutsu14 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'w'#) -}
46c13391f164988e5d5fccbe4e74a50e
  akutsu15 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,C(C1(C1(U)))><L,A><L,A><L,C(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: Main.Id
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Main.Id
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$widentifier @ b ww1 ww2 ww3 w1 w4 }) -}
87f29da2ff6b1f0f6d3cccee8361600c
  akutsu2 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.AKutsu
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.AKutsu
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
e74aed6f229751e6c78cabada3636dab
  akutsu3 ::
    Text.Megaparsec.State.State GHC.Base.String
    -> (()
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token GHC.Base.String)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token GHC.Base.String)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: (\ @ b
                   (w :: Text.Megaparsec.State.State GHC.Base.String)
                   (w1 :: ()
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token GHC.Base.String)
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            GHC.Base.String Data.Void.Void
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token GHC.Base.String)
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            GHC.Base.String Data.Void.Void
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Data.Functor.Identity.Identity b) ->
                 Main.$w$sspace
                   Main.akutsu7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Main.akutsu4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   (Text.Megaparsec.Internal.pZero
                      @ Data.Void.Void
                      @ [GHC.Types.Char]
                      @ Data.Functor.Identity.Identity
                      @ ())
                   @ b
                   w
                   w1
                   w2
                   w3) -}
c422a5b58416cbaf4651014c21322d17
  akutsu4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Unfolding: (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$w$sskipLineComment
                   Main.akutsu5
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   ww1
                   ww2
                   ww3
                   w1
                   w3
                   w4 }) -}
f5de4ffd5fed1adcf541dcc5ac60b492
  akutsu5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.akutsu6) -}
a9246a2ef50b2ea0e97b77ecb5238b25
  akutsu6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#"#) -}
8d4d5b319af4d269e0282d52093d10bb
  akutsu7 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$wwhitespace @ b1 ww1 ww2 ww3 w1 w4 }) -}
85afdf2ae662707c9b64b51274caad9b
  akutsu8 ::
    [Data.Set.Internal.Set
       (Text.Megaparsec.Error.ErrorItem
          (Text.Megaparsec.Stream.Token [GHC.Types.Char]))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   Main.akutsu9
                   (GHC.Types.[]
                      @ (Data.Set.Internal.Set
                           (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))) -}
90e60b8bab4385c8ab0ef7b52a3cf8c2
  akutsu9 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.akutsu10
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
2f6b911c05ba49fdbbc74949d3f24d0f
  asulut :: Main.Parser a -> Main.Parser a
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Main.$sbetween
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @ a
                   Main.asulut5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))) -}
a3d8b7551b35687d811298bb9a662530
  asulut1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.asulut2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
fab644264ba12e7b0c3497d6399f4e8e
  asulut2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.asulut3) -}
82934314767976fad1f81a3493546cd9
  asulut3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
ba644ccd7a392f98f4df0898e2ef318f
  asulut4 ::
    Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
0c1a58e0d52ec15fa273722d97b76ece
  asulut5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.asulut6
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
ec3b51a280b2f7ecd2bf457e999845f7
  asulut6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.asulut7) -}
3ee002cf61e80c59195685d40cc0c741
  asulut7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
5103419100f1d61c86f75f545d2cd8c5
  boolEtosi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolEtosi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
135e3685b21d56db4e835dde77c1ad69
  boolEtosi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.boolEtosi3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.boolEtosi_x s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.boolEtosi_x s' hs)
                   eerr) -}
5dd3bc81f1ea2eaabd5ddeff790221fd
  boolEtosi2 :: Main.Arvo
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.ArvoBool GHC.Types.False) -}
f20df8d70f43a768a02e813d3daf2065
  boolEtosi3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.boolEtosi4) -}
abe7cfe974c33b0a1004d8ca1f4119c8
  boolEtosi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.boolEtosi5) -}
0e6542dbe86f7b690b27633b289d044b
  boolEtosi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
23931bd8f80d950e16fc67938e2643ad
  boolEtosi6 ::
    GHC.Base.String
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 1, Strictness: <L,U> -}
6aa1cb1b19bab1e43de3b58484586505
  boolEtosi_x :: Main.Maaritelma
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.MArvo Main.boolEtosi2) -}
1a2dfec5a999b5efdbc98eb619d90626
  boolTosi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolTosi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
e9596a03e84023d8e83b5ec77ea7a41f
  boolTosi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.boolTosi3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.boolTosi_x s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.boolTosi_x s' hs)
                   eerr) -}
e3b621c93ef0fbae604eb0c9f47e3755
  boolTosi2 :: Main.Arvo
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.ArvoBool GHC.Types.True) -}
ef346ad34865c5a8a60518d0994b839b
  boolTosi3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.boolTosi4) -}
7c94c3198cf5a3e234e53e9ebffb89d7
  boolTosi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.boolTosi5) -}
d7d225c147f230f0469b0a59fdbdc616
  boolTosi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
4ad463305a059491174d8d12a08b3016
  boolTosi_x :: Main.Maaritelma
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.MArvo Main.boolTosi2) -}
df16be437956d29daf39e6b5f46f1918
  booli :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.booli1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
ec51078e9a6d99cff20cfb3669c8ad12
  booli1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.booli2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTBool s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTBool s' hs)
                   eerr) -}
0c1ab5a38d7fc2c662714b732d735c2b
  booli2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.booli3) -}
aee81e0909fda39e59fb5f20ebd6fdf0
  booli3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.booli4) -}
ba65620188c347745f79838f0104f63f
  booli4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bool"#) -}
17475ad7772dd864d85bd1060ae0e723
  ehtolause :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.ehtolause1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
3e7af87058f5f61a5f1f8a61dad9ae8f
  ehtolause1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
a2af8d86db5a3262e6a43a3aa4ad7485
  elsellinen :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.elsellinen1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
8f116d03289c5741d2cd336282822f05
  elsellinen1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elsellinen2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elsellinen2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
898c2b15e51348fd03ecc2b886dc481e
  elsellinen10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen11) -}
89d19c46c2dfa6484bdd5b36f55119df
  elsellinen11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
92e14bc24d23a50c37322bb18c2a4f5c
  elsellinen12 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.elsellinen13) -}
5ddd27828def5df2e1c7c98f0cd28e33
  elsellinen13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen14) -}
909bfab7d8802c9d2272075f9890ee50
  elsellinen14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("if"#) -}
43afda44dd5367cfc21756f69fa46466
  elsellinen2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elsellinen3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elsellinen3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
c46916a0f944e470c855d39f66e96911
  elsellinen3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
b737455757f214f4e40553b5036f3028
  elsellinen4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.elsellinen5
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
0360d45011c071db2fee2c4c56d7be86
  elsellinen5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen6) -}
edac85124fd3dc9db570e2e6180dee5a
  elsellinen6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
2775d8117b197f2e8cecec1e6f757400
  elsellinen7 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Base.String
                   @ Main.Maaritelma
                   Main.elsellinen9
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elsellinen8
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))) -}
7a6c095edc83368f8a5788caaf99faab
  elsellinen8 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(U))> -}
d7275f53e4325f12e9915c0aff47878e
  elsellinen9 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.elsellinen10
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
d918ed83c842b63996e983b6e0295fe9
  elseton :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.elseton1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
467bae113d74ca10c3b7dffd5b90d387
  elseton1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elseton2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elseton2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
033d5be3121ae7226314d70d7ce87d1a
  elseton2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elseton3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elseton3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
f880baa2f7706192e10f0859453139c4
  elseton3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (ehto :: Main.Maaritelma)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ [Main.Lauseke]
                   @ GHC.Base.String
                   Main.elseton4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b
                   eta
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.LEhto (Main.If ehto x)) s' hs)
                   eta2
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.LEhto (Main.If ehto x)) s' hs)
                   eta4) -}
331ad15187ffc43697661122dd7728dc
  elseton4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Base.String
                   @ [Main.Lauseke]
                   Main.asulut5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elseton5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))) -}
8a7998d41408a4197f27b872892f76a7
  elseton5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Lauseke]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: [Main.Lauseke]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 Main.$wgo1 (GHC.Base.id @ [Main.Lauseke]) @ b w w1 w2 w3) -}
452df261476702a745dd757184068a72
  identifier :: Main.Parser Main.Id
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.identifier1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Id>_R)) -}
e4d139bd9d77927d41df6e21b119505c
  identifier1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
b0a30f502efa5cf5e4e1d6946e651ec5
  integer :: Main.Parser GHC.Types.Int
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.integer1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
ebcb1039dc131b044c145a2f47caf400
  integer1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Types.Int
                   @ ()
                   Main.$sdecimal1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
612d69451f9193cdf6e0a7533641f7f7
  intti :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.intti1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
0fc7eb7202dc6f77dee114a129287514
  intti1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.intti2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTInt s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTInt s' hs)
                   eerr) -}
fdab6e48bcb8b45e5df97fbc3a5c4d97
  intti2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.intti3) -}
d2b4c070623ebcc9a330c8b832a06711
  intti3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.intti4) -}
78541f85d892f62af6bd9714861ad421
  intti4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("int"#) -}
2b1d7ced48d18ee846b9d1c692638215
  jAliohjelma :: Main.Parser [Main.Aliohjelma]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Aliohjelma]>_R)) -}
7c2075c57a665e66642d94826abf1510
  jAliohjelma' :: Main.Parser Main.Aliohjelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma'1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Aliohjelma>_R)) -}
88d39e84561908e9d25987ef21f13852
  jAliohjelma'1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Aliohjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Aliohjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Aliohjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Aliohjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jAliohjelma'3
                   @ b1
                   s1
                   (\ (x :: Main.Palautustyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jAliohjelma'2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Aliohjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Palautustyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jAliohjelma'2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Aliohjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
51cdfde02bc53151e777909bfcaebce3
  jAliohjelma'2 ::
    Main.Palautustyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Aliohjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Aliohjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
3afbab26e717e710f8cd1cf9e2c278b3
  jAliohjelma'3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
bbccd1078168ed3156b6e1e476ea1217
  jAliohjelma1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Aliohjelma]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: [Main.Aliohjelma]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 Main.$wgo2 (GHC.Base.id @ [Main.Aliohjelma]) @ b w w1 w2 w3) -}
a6ae524c9648fa16d10c4d609f441a04
  jMain :: Main.Parser Main.MainOhjelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.jMain1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.MainOhjelma>_R)) -}
d0e57cc8b21cdef5ef593b37bdef92f0
  jMain1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
52c169cfec7cd0a0434bacb513b7ea75
  jMain10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jMain11) -}
f6bde5dd33903f5f45aeed426b03f9eb
  jMain11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("string"#) -}
afd84509f73a9c33a66036fa5fe17d4f
  jMain12 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jMain13) -}
51e2d0d2950e21bdde84242488618ee8
  jMain13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
34600a601cee0cd033dcf47b523b9a41
  jMain2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.asulut4
                   Main.elsellinen10
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain3
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain3
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
d0538a0e97f330975a0d8cc3af29c5d6
  jMain3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain9
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain4
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain4
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
37174c8f909256a17c2759ef01f7361c
  jMain4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.asulut4
                   Main.jMain7
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain5
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain5
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
826d86b4dfebdad129024cdea2750747
  jMain5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain6
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain6
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
0a8a865538b5972d5e9da922176c40d7
  jMain6 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.MainOhjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.MainOhjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
12b593d242d6f93a651184ebfb2d05d2
  jMain7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jMain8) -}
3201558ff5b9e21573eb07c94e663f14
  jMain8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[]"#) -}
071a5b78517161a315a5daf28244310e
  jMain9 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jMain10) -}
2449e63a9e63761961ba29fd27956055
  jasennin :: Main.Parser Main.Luokka
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.jasennin1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Luokka>_R)) -}
eae6658314e6099dc7e3e5040d22169b
  jasennin1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Luokka
                   @ ()
                   Main.jasennin4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Luokka>_R))
                   Main.jasennin2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
bcd125fa75f902c67a13b72f507a92dc
  jasennin10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("class"#) -}
cac71bf726796bceccfa9e5073f5ad7c
  jasennin2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(SSL),1*U(1*U,U,U)><L,A><L,A><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$wjasennin @ b ww1 ww2 ww3 w3 w4 }) -}
ee501e7dcbfacd47369270a1d1a7e9cc
  jasennin3 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   (Text.Megaparsec.Error.EndOfInput
                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
c156da19d2edce4a5389c9e405ae9434
  jasennin4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ ()
                   @ Main.Luokka
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Main.jasennin5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Luokka>_R))) -}
95bb0ef3c3424d21cd5bc9c3c4c94e38
  jasennin5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jasennin8
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jasennin6
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jasennin6
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
d57edf611a51e93146518e2bfe5543c3
  jasennin6 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jasennin7
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jasennin7
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
d0fa50d979af8d6ca5fd74b8db4b5035
  jasennin7 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Luokka
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Luokka
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
4f8f2e8e324f8db1aed63a22af5fe498
  jasennin8 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jasennin9) -}
11c86c326d4d61cfdfc558c0392928ac
  jasennin9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jasennin10) -}
5cf3154c02524bd8fd37d5d6cbea3e87
  km :: Main.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.km1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
dc59a9043325660f641a63390451a911
  km1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.km2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
715f2ef480cda8f2caa056edfdcc02c2
  km2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.km3) -}
e04d3e863e4238e6c3451a52b1dd80a5
  km3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("?"#) -}
7675f5cea547ad25d61f25898355722d
  lakutsu :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.lakutsu1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
5c818aa20bf33e9b3366878058b0d49c
  lakutsu1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.akutsu1
                   @ b1
                   s1
                   (\ (x :: Main.AKutsu)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.LAKutsu x) s' hs)
                   cerr
                   (\ (x :: Main.AKutsu)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.LAKutsu x) s' hs)
                   eerr) -}
01ae874eb1f1ad1ed9e6ec82c547fe73
  lauseke :: Main.Parser [Main.Lauseke]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.elseton5
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Lauseke]>_R)) -}
6059262825c93126762c1a05597e777e
  lauseke' :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.lauseke'1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
76189a58e62a95249d0744525f2c4781
  lauseke'1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
8b17bf4097d95916d316189ce25935d4
  lekseemi :: Main.Parser a -> Main.Parser a
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                Main.lekseemi1
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Megaparsec.Internal.ParsecT
                    Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
4c796eb35be165089adfe1a6063e514a
  lekseemi1 ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (a
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (p :: Text.Megaparsec.Internal.ParsecT
                           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ a
                   @ ()
                   p
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
6631800408055641220768cd813c9b3b
  luku :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.luku1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
860ace2008d5ba07fafcfe114266fc93
  luku1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Types.Int
                   @ ()
                   Main.$sdecimal1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: GHC.Types.Int)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MArvo (Main.ArvoInt x)) s' hs)
                   cerr
                   (\ (x :: GHC.Types.Int)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MArvo (Main.ArvoInt x)) s' hs)
                   eerr) -}
9994e15da09bb84c49232f7582f9d63d
  luokka :: Main.Parser Main.Luokka
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.jasennin5
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Luokka>_R)) -}
0838261cdb8fd672dd78740b33ce5ded
  maaritelma :: Main.Parser Main.Maaritelma
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.elsellinen8
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
15f4be0f35bd0f9470d77501734061c9
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
5271dc88db32f008f5fa1f5bdf4582f1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.main2
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (Text.Megaparsec.parseTest
                    @ Data.Void.Void
                    @ Main.Luokka
                    @ GHC.Base.String
                    Text.Megaparsec.Error.$fShowErrorComponentVoid
                    Main.$fShowLuokka
                    Text.Megaparsec.Stream.$fStream[]
                    Main.jasennin1
                      `cast`
                    (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                              <Data.Void.Void>_N
                              <[GHC.Types.Char]>_N
                              <Data.Functor.Identity.Identity>_R
                              <Main.Luokka>_R))
                    ipv3)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv2 } }) -}
fd975c57b617dc0d1be7528f63d02332
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
4616fe6a5f0847fdd63ffd0964fc7682
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test.mess"#) -}
774288b509338715e2156d4e2441c2c2
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
91554043c14de6b9b9236933c16c52fc
  makutsu :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.makutsu1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
3ef7f72af285cce7a8654d0c9fb92448
  makutsu1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.akutsu1
                   @ b1
                   s1
                   (\ (x :: Main.AKutsu)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MAKutsu x) s' hs)
                   cerr
                   (\ (x :: Main.AKutsu)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MAKutsu x) s' hs)
                   eerr) -}
99470a3a9d3446f516620d6a0ba5760d
  mid :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.mid1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
08da4716fcb6fcf6314cf7945dbadd44
  mid1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MId x) s' hs)
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MId x) s' hs)
                   eerr) -}
98f851a39bcda15b34750e201785962c
  mjono :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.mjono1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
b924ee3c10eb47b84cad0165532192ae
  mjono1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.asulut4
                   Main.mjono4
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.mjono2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Maaritelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.mjono2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Maaritelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
cbedf5a1047b339c43bb37aa5cd4e9aa
  mjono2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.mjono3
                   (GHC.Base.id @ [GHC.Types.Char])
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MArvo (Main.ArvoString x)) s' hs)
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MArvo (Main.ArvoString x)) s' hs)
                   eerr) -}
54565233e4c0326a7d575d04728760d5
  mjono3 ::
    ([GHC.Types.Char] -> [GHC.Types.Char])
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> ([GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> ([GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,C(U)><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
690fec17d56f641806dc11ffbaa0e298
  mjono4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.mjono5) -}
461701f0df7380fe4561aadeb1c1c812
  mjono5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\""#) -}
3555597a2c0f9ae648a73a429f0a940e
  oMaaritelma :: Main.Parser Main.Maaritelma
  {- Unfolding: (Main.oMaaritelma_go
                   Main.operaattorit
                   Main.aTermi1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))) -}
6e035ebc2fa66865ba5a94c9e1bb6d1f
  oMaaritelma_go ::
    [[Control.Monad.Combinators.Expr.Operator
        (Text.Megaparsec.Internal.ParsecT
           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
        Main.Maaritelma]]
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void
         GHC.Base.String
         Data.Functor.Identity.Identity
         Main.Maaritelma
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void
         GHC.Base.String
         Data.Functor.Identity.Identity
         Main.Maaritelma
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
3a6ad3f51607cb8a45f26f6c9759f8bb
  operaattorit ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.operaattorit43
                   Main.operaattorit1) -}
e939c7377f7bec7b537e37ee502ee22a
  operaattorit1 ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.operaattorit33
                   Main.operaattorit2) -}
4251dd3f6e9b033549542396a38c9f8f
  operaattorit10 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x
                 } in
                 Main.asulut4
                   Main.operaattorit11
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
b134f76bbf740bf1f4891b7f8102e313
  operaattorit11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit12) -}
6a2c565936b68d99824b6a956f5ca56a
  operaattorit12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!="#) -}
c3ab7e4de10aa28d47c877d50cbec8af
  operaattorit13 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
7764793e290846ce6c6d5fae16e3092d
  operaattorit14 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x1
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x1
                 } in
                 Main.asulut4
                   Main.operaattorit15
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
225ea94963c211dd174ebd1ad69b7461
  operaattorit15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit16) -}
a518bf68359958f4ada143fc4e970676
  operaattorit16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=="#) -}
ab616705dd76bbbc533c535c0cde0767
  operaattorit17 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit18
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
ee185feb4e9d5b85bbd5536855cc08d2
  operaattorit18 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x2
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x2
                 } in
                 Main.asulut4
                   Main.operaattorit19
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
d442bb1915c6eb73e1c63799854e0f2a
  operaattorit19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit20) -}
7d84ecd4e1e3e2254ce6b2c01060a60e
  operaattorit2 ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.operaattorit3
                   (GHC.Types.[]
                      @ [Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma])) -}
c1ec83511707942d7d40704201a7ef0b
  operaattorit20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">="#) -}
9925fe089913cca758e4c5481e6d1843
  operaattorit21 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit22
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
b5b74b2bea1ab53c9016613e2e1b4343
  operaattorit22 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x3
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x3
                 } in
                 Main.asulut4
                   Main.operaattorit23
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
68d8c564aca34e44ac0fcd2c38b74917
  operaattorit23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit24) -}
c429442d38d7d8472b0e12206534a580
  operaattorit24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<="#) -}
7c094a89e173253bec160f0355513fc5
  operaattorit25 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit26
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
719d5c70be82a812bb56e79c830a5847
  operaattorit26 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x4
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x4
                 } in
                 Main.asulut4
                   Main.operaattorit27
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
50a1ce526516c957c23dec07f21fa251
  operaattorit27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit28) -}
84001edb9e196e35f130762dc6540198
  operaattorit28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
f28c4ecc626f56ba899a50062e0172ee
  operaattorit29 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit30
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
4cf22e435ba41df1f69e4432d9231a49
  operaattorit3 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit29
                   Main.operaattorit4) -}
8a9c1ea67c10adfc08ded3701364625c
  operaattorit30 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x5
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x5
                 } in
                 Main.asulut4
                   Main.operaattorit31
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
373950784e862bc5aa86e2c42fced041
  operaattorit31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit32) -}
5684040914b80de0d263171734e0ae2a
  operaattorit32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
8a5227703c79a5149bd827be27aa9e50
  operaattorit33 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit39
                   Main.operaattorit34) -}
cea787c59f4a794d674fd8dd52c1b568
  operaattorit34 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit35
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
8be4814736dd99266a13942980c01e06
  operaattorit35 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit36
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
d533d61b8102aaa1565953172b72c4cd
  operaattorit36 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x6
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x6
                 } in
                 Main.asulut4
                   Main.operaattorit37
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
e6a5ba0a73c630a092c0d5501fb9bf91
  operaattorit37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit38) -}
052f38769285a71ae6017d6fe50d6200
  operaattorit38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
307256b301fa8384573c7af261924b42
  operaattorit39 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit40
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
fd9a7123191b467b5a1d90b1df2665db
  operaattorit4 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit25
                   Main.operaattorit5) -}
c7bc7861770f1f8987d50c288d40191c
  operaattorit40 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x7
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x7
                 } in
                 Main.asulut4
                   Main.operaattorit41
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
e00f0cb1978cacb7210f0ca7bb655e68
  operaattorit41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit42) -}
03a130d344faadac011e99230e95bbb9
  operaattorit42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+"#) -}
bb1f46a16d1bd79e33f0be7abd713e6b
  operaattorit43 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit49
                   Main.operaattorit44) -}
bca1bb0f76bf1e074ebe19206213f1b5
  operaattorit44 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit45
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
3a5e87d7c97f2e3035da75fe627efbd0
  operaattorit45 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit46
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
3b453fb92b40a43a3bf9835e7c1e0fd6
  operaattorit46 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x8
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x8
                 } in
                 Main.asulut4
                   Main.operaattorit47
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
268c5b9fd5a12407874cf4d28aa40085
  operaattorit47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit48) -}
ba106b844ab0d22c0124c536bad05f7f
  operaattorit48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
109107b57c8bb36966171c24e676d6bc
  operaattorit49 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit50
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
ca2cf17cfc4293b100c8b8270971bb69
  operaattorit5 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit21
                   Main.operaattorit6) -}
f6a20017863a06f5c74f209d35444ef8
  operaattorit50 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.operaattorit_x9
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.operaattorit_x9
                 } in
                 Main.asulut4
                   Main.operaattorit51
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
66e4345d64d87b32b6880b205d5091d4
  operaattorit51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.operaattorit52) -}
3662b18459f17fb4c9197681e9685a51
  operaattorit52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
3142c44d1437d8181de5aa3d4a7ce5f6
  operaattorit6 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit17
                   Main.operaattorit7) -}
965bbd24bb2c5f71afff2aefc670515c
  operaattorit7 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit13
                   Main.operaattorit8) -}
e3c462a3f5c0977d93cf17b9a8ee2f8b
  operaattorit8 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.operaattorit9
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
d597851ce6b85ba8f4b766db5301eb6a
  operaattorit9 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.operaattorit10
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
11f0ecc834b45138841d3080d41c9d99
  operaattorit_x ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Erisuuri) -}
90803fefe9aed78dc7685fac045ba862
  operaattorit_x1 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Yhtasuuri) -}
6b4b7976d8073a194b1e3b174645ef25
  operaattorit_x2 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.SuurempiYhtasuuri) -}
340c1f35392fa819da75e7dd8017df7d
  operaattorit_x3 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.PienempiYhtasuuri) -}
03a4c212afc5a9dff8e22651e4203819
  operaattorit_x4 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Suurempi) -}
7376076a195e80643d7e4c112ebe8fd1
  operaattorit_x5 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Pienempi) -}
58f4151876b44d5aa2537effeb4f8723
  operaattorit_x6 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Miinus) -}
35ef88a51aae9ac40488bd3a37b87053
  operaattorit_x7 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Plus) -}
322701d6f5ee5adc26632df820750659
  operaattorit_x8 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Jako) -}
8898b33439d71e48a72d26048c9c8167
  operaattorit_x9 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Kerto) -}
e54340fd2109ff452a5b0f522c9bd268
  palautus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.palautus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
f220c8ca46f43bd9f5db658bd8a239c5
  palautus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautus3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.palautus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.palautus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
18e25b7ccfb6c23dcc67e5c763164aeb
  palautus2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen8
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok (Main.LPalautus x) s' hs)
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok (Main.LPalautus x) s' hs)
                   eerr) -}
ead98a11fa46c74c8e84d48600d38416
  palautus3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.palautus4) -}
328c5ec1895a8e8562db4a71beaf7dfb
  palautus4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.palautus5) -}
529aab2156df8bd513c7730497b2a2f9
  palautus5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("return"#) -}
bd8d295fed3965b0858f93642602cefb
  palautustietotyyppi :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.palautustietotyyppi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
11a805c6ee9953a78935ee0505952856
  palautustietotyyppi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.Palautustyyppi x) s' hs)
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.Palautustyyppi x) s' hs)
                   eerr) -}
fce7c2ce4a8e3f148d61280eab9698d9
  palautustietotyyppi2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
877eb0f165a33bce87fd86d756721d4d
  palautustyyppi :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma'3
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
f70ddf430816f10eae7d3abb111d069f
  palautusvoid :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.palautusvoid1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
b1b7e2c5b507c138153ff0d9ffd02a7e
  palautusvoid1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautusvoid2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.Void s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.Void s' hs)
                   eerr) -}
6067f489e4148d0ae6f649669a1bb0f0
  palautusvoid2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.palautusvoid3) -}
04a6a3c3ddd26d44fedc2cf30d85c9ba
  palautusvoid3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.palautusvoid4) -}
0954da1273ac72ab52d2e0addbcc9182
  palautusvoid4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("void"#) -}
d0d2273f1bd55b7769dbdbd1dadb0e6f
  parametri :: Main.Parser Main.Parametri
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.parametri1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Parametri>_R)) -}
5e224a0764bc02dc0a10d44e9a796897
  parametri1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Parametri
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Parametri
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Parametri
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Parametri
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.parametri2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Parametri
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.parametri2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Parametri
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
75099fb478aaf337ff946d0f82a1873b
  parametri2 ::
    Main.Tietotyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Parametri
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Parametri
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (tyyppi :: Main.Tietotyyppi)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Parametri
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Parametri
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b
                   eta
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.Parametri tyyppi x) s' hs)
                   eta2
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.Parametri tyyppi x) s' hs)
                   eta4) -}
5c4bd8d95e379de402ccdbcbee6ab457
  parametrit :: Main.Parser [Main.Parametri]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.parametrit1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Parametri]>_R)) -}
9c3fa6897496504c49fb7199614ec1fd
  parametrit1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [2],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Parametri]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [Main.Parametri]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 Main.$wparametrit @ b1 w w1 w2 w3) -}
d0932e42df90f5dcef28c1a1c8889de3
  semi :: Main.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.semi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
40da4c845db2f64d4f5abd2e83ad90c1
  semi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.asulut4
                   Main.semi2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
e40c5de041b54183837ba40ecd07b012
  semi2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.semi3) -}
12ac260ebb6b538f5c21008fb5e73821
  semi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (";"#) -}
cedd14472131cff394f2c8ea5479fd2a
  sijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.sijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
94fc2cf4da6484383e743522eb4e3d66
  sijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
203adcde735ffd0c81282513f8e162af
  silmukka :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.silmukka1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
3a250f4b4cc81faab65d85c965401150
  silmukka1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.silmukka4
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.silmukka2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.silmukka2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
9722288193daa62230ca8770a1a7838c
  silmukka2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.silmukka3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.silmukka3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
720e075de9a2d35ad17e0b4836137e4d
  silmukka3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (ehto :: Main.Maaritelma)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ [Main.Lauseke]
                   @ GHC.Base.String
                   Main.elseton4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b
                   eta
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.LSilmukka ehto x) s' hs)
                   eta2
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.LSilmukka ehto x) s' hs)
                   eta4) -}
02ca729d9217804ec904a8aa0b0af649
  silmukka4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.silmukka5) -}
8f59adf909bf2aee35cf3a3a73b67379
  silmukka5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.silmukka6) -}
40d2acf12d78020585716d06f6e2264d
  silmukka6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("while"#) -}
0107846854234075a06ca5eb1ca43a7b
  stringi :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.stringi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
c7b414bc751599d61cfd58ec58801b40
  stringi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain9
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTString s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTString s' hs)
                   eerr) -}
74e20d8a19c0b230aec75a6262892238
  sulut :: Main.Parser a -> Main.Parser a
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Main.$sbetween
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @ a
                   Main.elsellinen9
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))) -}
e764398bbd391559c78b4a762c3f5ec9
  symboli :: GHC.Base.String -> Main.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.asulut4
                  `cast`
                (Sub (Text.Megaparsec.Stream.D:R:Tokens[][0])
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
6aec5c155466ce12c9cdc7e5a7562173
  tietotyyppi :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.palautustietotyyppi2
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
89ec5f0b10dd5b66e80e6cc3b9820304
  tulostus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tulostus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
bc470239013c4033cfad6f3748e63029
  tulostus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.tulostus3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.tulostus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.tulostus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
bf5eb6de4ded18a42aa8a0ddcb22240e
  tulostus2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen8
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok (Main.LTulostus x) s' hs)
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok (Main.LTulostus x) s' hs)
                   eerr) -}
d4600fc9db712ef8014d74cbc2ed1969
  tulostus3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.tulostus4) -}
01b594b86b49e0903d1b95fb841aaf64
  tulostus4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.tulostus5) -}
7be8e1bd74f3d91286052f4893ca8793
  tulostus5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("print"#) -}
6abb16fe3af28b9aaf47661f39f91736
  uusisijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.uusisijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
f366a953e126a44d8c6cd6b23c47de57
  uusisijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.uusisijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.uusisijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
b3c29231a73139734f28b72cd502ed4e
  uusisijoitus2 ::
    Main.Tietotyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
b52058b2957eb3f77f2e1b4d1cf34bad
  vanhasijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.vanhasijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
7a089f0acf7012badac3d8bb46acf788
  vanhasijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.akutsu15
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.akutsu3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.vanhasijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.vanhasijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
7a4215fae10283d5699eb1085721c568
  vanhasijoitus2 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (id :: Main.Id)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   k :: forall b1.
                        Text.Megaparsec.State.State [GHC.Types.Char]
                        -> (Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                        -> (Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                        -> (Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                        -> (Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                        -> Data.Functor.Identity.Identity b1
                     {- Arity: 5,
                        Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
                   = \ @ b1
                       (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                       (cok :: Main.Lauseke
                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                               -> Text.Megaparsec.Internal.Hints
                                    (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                               -> Data.Functor.Identity.Identity b1)[OneShot]
                       (cerr :: Text.Megaparsec.Error.ParseError
                                  [GHC.Types.Char] Data.Void.Void
                                -> Text.Megaparsec.State.State [GHC.Types.Char]
                                -> Data.Functor.Identity.Identity b1)[OneShot]
                       (eok :: Main.Lauseke
                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                               -> Text.Megaparsec.Internal.Hints
                                    (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                               -> Data.Functor.Identity.Identity b1)[OneShot]
                       (eerr :: Text.Megaparsec.Error.ParseError
                                  [GHC.Types.Char] Data.Void.Void
                                -> Text.Megaparsec.State.State [GHC.Types.Char]
                                -> Data.Functor.Identity.Identity b1)[OneShot] ->
                     Main.elsellinen8
                       @ b1
                       s1
                       (\ (x :: Main.Maaritelma)
                          (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                          (hs :: Text.Megaparsec.Internal.Hints
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                        cok (Main.LSijoitus (Main.VanhaSijoitus id x)) s' hs)
                       cerr
                       (\ (x :: Main.Maaritelma)
                          (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                          (hs :: Text.Megaparsec.Internal.Hints
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                        eok (Main.LSijoitus (Main.VanhaSijoitus id x)) s' hs)
                       eerr
                 } in
                 Main.asulut4
                   Main.vanhasijoitus3
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b
                   eta
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    k @ b
                      s'
                      eta1
                      eta2
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta1)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta2))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b)
                                    -> Data.Functor.Identity.Identity b>_R)))
                   eta2
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    k @ b
                      s'
                      eta1
                      eta2
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta3)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta4))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b)
                                              -> Data.Functor.Identity.Identity b>_R)))))
                   eta4) -}
6bd193ee416f57b3c004e1376c0bbbfc
  vanhasijoitus3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.vanhasijoitus4) -}
92fe9528f7586c215e40b7e1b8367c28
  vanhasijoitus4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("="#) -}
c65db3e9f2a3150704ef7ea63e9e80e8
  vsana :: GHC.Base.String -> Main.Parser ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolEtosi6
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <()>_R)) -}
335d138cb8325aadfc5d34c9622cdf7f
  vsl :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.elsellinen13
                   Main.vsl1) -}
e2b2c5535b8cc5744f98da33cd3483a2
  vsl1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.vsl13 Main.vsl2) -}
198d5d35784eec7a5148c77a925eac17
  vsl10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tulostus4
                   Main.vsl11) -}
69c9903caa37ed3ee711ca915d7f4dba
  vsl11 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.palautus4
                   Main.vsl12) -}
723dd234be234656b5fbffdbbac72e27
  vsl12 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jMain13
                   (GHC.Types.[] @ GHC.Base.String)) -}
a37b886f7c15265756b43647939a9497
  vsl13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.vsl14) -}
2b75d5548dcd03188bb7fe23330d058f
  vsl14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
4704b9f880fb6371ae0da6b35a570e6f
  vsl2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.silmukka5
                   Main.vsl3) -}
a77b896ad917bc022d95cfc3837287da
  vsl3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jasennin9
                   Main.vsl4) -}
5234ae056ac813aff532e6262a1a70c4
  vsl4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.palautusvoid3
                   Main.vsl5) -}
56649aeb17062492918e2ddd2d579ff9
  vsl5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.intti3 Main.vsl6) -}
ebd694108aa967c1b1f64ac0e4bb940d
  vsl6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jMain10
                   Main.vsl7) -}
053fb29e957860c2835397cd2af014ef
  vsl7 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.booli3 Main.vsl8) -}
97110e67eb0c7b4359f5188c26d7708c
  vsl8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.boolTosi4
                   Main.vsl9) -}
f2f6b6f6b3eaf7efd5afc242a6a77759
  vsl9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.boolEtosi4
                   Main.vsl10) -}
413c61bf02b0da8805ee88c948efc271
  whitespace :: Main.Parser ()
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.akutsu3
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <GHC.Base.String>_N
                          <Data.Functor.Identity.Identity>_R
                          <()>_R)) -}
instance GHC.Show.Show [Main.AKutsu] = Main.$fShowAKutsu
instance GHC.Show.Show [Main.Aliohjelma] = Main.$fShowAliohjelma
instance GHC.Show.Show [Main.Arvo] = Main.$fShowArvo
instance GHC.Show.Show [Main.Ehtolause] = Main.$fShowEhtolause
instance GHC.Show.Show [Main.Id] = Main.$fShowId
instance GHC.Show.Show [Main.Lauseke] = Main.$fShowLauseke
instance GHC.Show.Show [Main.Luokka] = Main.$fShowLuokka
instance GHC.Show.Show [Main.Maaritelma] = Main.$fShowMaaritelma
instance GHC.Show.Show [Main.MainOhjelma] = Main.$fShowMainOhjelma
instance GHC.Show.Show [Main.Op] = Main.$fShowOp
instance GHC.Show.Show [Main.Palautustyyppi]
  = Main.$fShowPalautustyyppi
instance GHC.Show.Show [Main.Parametri] = Main.$fShowParametri
instance GHC.Show.Show [Main.Sijoitus] = Main.$fShowSijoitus
instance GHC.Show.Show [Main.Tietotyyppi] = Main.$fShowTietotyyppi
instance GHC.Show.Show [Main.VOp] = Main.$fShowVOp
"SPEC/Main $fEqErrorFancy @ Void" [orphan] forall (v :: GHC.Classes.Eq
                                                          Data.Void.Void)
  Text.Megaparsec.Error.$fEqErrorFancy @ Data.Void.Void v
  = Main.$s$fEqErrorFancy
"SPEC/Main $fEqErrorFancy_$c/= @ Void" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                  Data.Void.Void)
  Text.Megaparsec.Error.$fEqErrorFancy_$c/= @ Data.Void.Void $dEq
  = Main.$s$fEqErrorFancy_$s$fEqErrorFancy_$c/=
"SPEC/Main $fEqErrorItem @ (Token [Char])" [orphan] forall (v :: GHC.Classes.Eq
                                                                   (Text.Megaparsec.Stream.Token
                                                                      [GHC.Types.Char]))
  Text.Megaparsec.Error.$fEqErrorItem @ (Text.Megaparsec.Stream.Token
                                           [GHC.Types.Char])
                                      v
  = Main.$s$fEqErrorItem
"SPEC/Main $fEqErrorItem_$c/= @ (Token [Char])" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                           (Text.Megaparsec.Stream.Token
                                                                              [GHC.Types.Char]))
  Text.Megaparsec.Error.$fEqErrorItem_$c/= @ (Text.Megaparsec.Stream.Token
                                                [GHC.Types.Char])
                                           $dEq
  = Main.$s$fEqErrorItem_$s$fEqErrorItem_$c/=
"SPEC/Main $fOrdErrorFancy @ Void" [orphan] forall (v :: GHC.Classes.Ord
                                                           Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy @ Data.Void.Void v
  = Main.$s$fOrdErrorFancy
"SPEC/Main $fOrdErrorFancy_$c<= @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                    Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$c<= @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$c<=
"SPEC/Main $fOrdErrorFancy_$c>= @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                    Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$c>= @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$c>=
"SPEC/Main $fOrdErrorFancy_$cmax @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                     Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$cmax @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$cmax
"SPEC/Main $fOrdErrorFancy_$cmin @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                     Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$cmin @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$cmin
"SPEC/Main $fOrdErrorItem @ (Token [Char])" [orphan] forall (v :: GHC.Classes.Ord
                                                                    (Text.Megaparsec.Stream.Token
                                                                       [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem @ (Text.Megaparsec.Stream.Token
                                            [GHC.Types.Char])
                                       v
  = Main.$s$fOrdErrorItem
"SPEC/Main $fOrdErrorItem_$c<= @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                             (Text.Megaparsec.Stream.Token
                                                                                [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$c<= @ (Text.Megaparsec.Stream.Token
                                                 [GHC.Types.Char])
                                            $dOrd
  = Main.$s$fOrdErrorItem_$c<=
"SPEC/Main $fOrdErrorItem_$c>= @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                             (Text.Megaparsec.Stream.Token
                                                                                [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$c>= @ (Text.Megaparsec.Stream.Token
                                                 [GHC.Types.Char])
                                            $dOrd
  = Main.$s$fOrdErrorItem_$c>=
"SPEC/Main $fOrdErrorItem_$cmax @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$cmax @ (Text.Megaparsec.Stream.Token
                                                  [GHC.Types.Char])
                                             $dOrd
  = Main.$s$fOrdErrorItem_$cmax
"SPEC/Main $fOrdErrorItem_$cmin @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$cmin @ (Text.Megaparsec.Stream.Token
                                                  [GHC.Types.Char])
                                             $dOrd
  = Main.$s$fOrdErrorItem_$cmin
"SPEC/Main addPrecLevel @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                            ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                              (Text.Megaparsec.Internal.ParsecT
                                                                                                 Data.Void.Void
                                                                                                 GHC.Base.String
                                                                                                 Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.addPrecLevel @ (Text.Megaparsec.Internal.ParsecT
                                                   Data.Void.Void
                                                   GHC.Base.String
                                                   Data.Functor.Identity.Identity)
                                              @ a
                                              $dMonadPlus
  = Main.$saddPrecLevel @ a
"SPEC/Main between @ (ParsecT Void String Identity) _ _ _" [orphan] forall @ open
                                                                           @ close
                                                                           @ a
                                                                           ($dApplicative :: GHC.Base.Applicative
                                                                                               (Text.Megaparsec.Internal.ParsecT
                                                                                                  Data.Void.Void
                                                                                                  GHC.Base.String
                                                                                                  Data.Functor.Identity.Identity))
  Control.Applicative.Combinators.between @ (Text.Megaparsec.Internal.ParsecT
                                               Data.Void.Void
                                               GHC.Base.String
                                               Data.Functor.Identity.Identity)
                                          @ open
                                          @ close
                                          @ a
                                          $dApplicative
  = Main.$sbetween @ open @ close @ a
"SPEC/Main pInfixL @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                       ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                         (Text.Megaparsec.Internal.ParsecT
                                                                                            Data.Void.Void
                                                                                            GHC.Base.String
                                                                                            Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.pInfixL @ (Text.Megaparsec.Internal.ParsecT
                                              Data.Void.Void
                                              GHC.Base.String
                                              Data.Functor.Identity.Identity)
                                         @ a
                                         $dMonadPlus
  = Main.$spInfixL @ a
"SPEC/Main pInfixR @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                       ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                         (Text.Megaparsec.Internal.ParsecT
                                                                                            Data.Void.Void
                                                                                            GHC.Base.String
                                                                                            Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.pInfixR @ (Text.Megaparsec.Internal.ParsecT
                                              Data.Void.Void
                                              GHC.Base.String
                                              Data.Functor.Identity.Identity)
                                         @ a
                                         $dMonadPlus
  = Main.$spInfixR @ a
"SPEC/Main union @ (ErrorFancy Void)" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                  (Text.Megaparsec.Error.ErrorFancy
                                                                     Data.Void.Void))
  Data.Set.Internal.union @ (Text.Megaparsec.Error.ErrorFancy
                               Data.Void.Void)
                          $dOrd
  = Main.$s$fAlternativeParsecT_$sunion
"SPEC/Main union @ (ErrorItem (Token [Char]))" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                           (Text.Megaparsec.Error.ErrorItem
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char])))
  Data.Set.Internal.union @ (Text.Megaparsec.Error.ErrorItem
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                          $dOrd
  = Main.$s$fAlternativeParsecT_$sunion1
"SPEC/Main withHints @ [Char] _ _ _" [orphan] forall @ e
                                                     @ m :: * -> *
                                                     @ b
                                                     ($dStream :: Text.Megaparsec.Stream.Stream
                                                                    [GHC.Types.Char])
  Text.Megaparsec.Internal.withHints @ [GHC.Types.Char]
                                     @ e
                                     @ m
                                     @ b
                                     $dStream
  = Main.$s$fAlternativeParsecT_$swithHints @ e @ m @ b
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

