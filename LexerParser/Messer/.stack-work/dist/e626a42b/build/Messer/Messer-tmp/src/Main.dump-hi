
==================== FINAL INTERFACE ====================
2019-01-24 21:35:42.3350371 UTC

interface main:Main 8063
  interface hash: ada334ffb6e4cd2b659fb6148ec57d34
  ABI hash: 46c0b44809d3423a846100a397425223
  export-list hash: 7f6e28808557a0b2fe6735c83d9c6d05
  orphan hash: 7e9a0a9fcf7722b2fd60d246ae15b56f
  flag hash: 1eef89f9c576a55168c029d83bb12d88
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.aMaaritelma
  Main.aOperaattorit
  Main.aTermi
  Main.asulut
  Main.bMaaritelma
  Main.bOperaattorit
  Main.bTermi
  Main.boolEtosi
  Main.boolTosi
  Main.booli
  Main.ehtolause
  Main.elsellinen
  Main.elseton
  Main.identifier
  Main.integer
  Main.intti
  Main.jAliohjelma
  Main.jAliohjelma'
  Main.jMain
  Main.jasennin
  Main.km
  Main.lauseke
  Main.lauseke'
  Main.lekseemi
  Main.luku
  Main.luokka
  Main.maaritelma
  Main.main
  Main.mid
  Main.mjono
  Main.palautus
  Main.palautustietotyyppi
  Main.palautustyyppi
  Main.palautusvoid
  Main.parametri
  Main.parametrit
  Main.semi
  Main.sijoitus
  Main.silmukka
  Main.stringi
  Main.sulut
  Main.symboli
  Main.tietotyyppi
  Main.tulostus
  Main.uusisijoitus
  Main.vanhasijoitus
  Main.vsana
  Main.vsl
  Main.whitespace
  Main.Aliohjelma{Main.Aliohjelma}
  Main.Arvo{Main.ArvoBool Main.ArvoInt Main.ArvoString}
  Main.Ehtolause{Main.If Main.IfElse}
  Main.Id{Main.Id}
  Main.Lauseke{Main.LEhto Main.LPalautus Main.LSijoitus Main.LSilmukka Main.LTulostus}
  Main.Luokka{Main.Luokka}
  Main.Maaritelma{Main.Aritmeettinen Main.MArvo Main.MId Main.Vertailu}
  Main.MainOhjelma{Main.MainOhjelma}
  Main.Op{Main.Jako Main.Kerto Main.Miinus Main.Plus}
  Main.Palautustyyppi{Main.Palautustyyppi Main.Void}
  Main.Parametri{Main.Parametri}
  Main.Parser
  Main.Sijoitus{Main.UusiSijoitus Main.VanhaSijoitus}
  Main.Tietotyyppi{Main.TTBool Main.TTInt Main.TTString Main.TTVoid}
  Main.VOp{Main.Erisuuri Main.Pienempi Main.PienempiYhtasuuri Main.Suurempi Main.SuurempiYhtasuuri Main.Yhtasuuri}
module dependencies:
package dependencies: array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 containers-0.6.0.1
                      deepseq-1.4.4.0 ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 megaparsec-7.0.4 mtl-2.2.2
                      parser-combinators-1.0.1 primitive-0.6.4.0 scientific-0.3.6.2
                      text-1.2.3.1 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array text-1.2.3.1:Data.Text
                         text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.12.0.0:Control.Applicative 123b0192fa051c5703dd008e6b21f32d
import  -/  base-4.12.0.0:Control.Monad 80b89bcb2e69935b319a1dd37eaf3802
import  -/  base-4.12.0.0:Data.Foldable 0d844d41f2c5ae5ccafb3f5378ff6867
import  -/  base-4.12.0.0:Data.Functor d76c001d92d0a1adf6f6220faa8ca3e5
import  -/  base-4.12.0.0:Data.Void 8275bdb9ce14f1255dfe4ed62fee1492
import  -/  base-4.12.0.0:GHC.Base b0f6eed6c4b57b0a2f7c7570f245848b
import  -/  base-4.12.0.0:GHC.Show 5c4c5ac15ef4d7749e0e6f06242c812a
import  -/  base-4.12.0.0:Prelude b1ccc486556b171042710ef6f2d1a539
import  -/  base-4.12.0.0:System.IO c4f9b4edbf0d6a7a9a49fe16b71318d4
import  -/  ghc-prim-0.5.3:GHC.Classes 555218a5f891dab16ebc6e6e04763e77
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  megaparsec-7.0.4:Text.Megaparsec 7df8dafd569bbec3b9e4461882f5d1f8
import  -/  megaparsec-7.0.4:Text.Megaparsec.Char cf99495c2b9d970340d924c58fdc23b5
import  -/  megaparsec-7.0.4:Text.Megaparsec.Char.Lexer 7491e70f16b8f2481f147918ded7fb2b
import  -/  megaparsec-7.0.4:Text.Megaparsec.Class 69e3fcf22b7fea6247ba39e1e5f983a6
import  -/  megaparsec-7.0.4:Text.Megaparsec.Common 8aae37b98788a01a2a8755bd42f942d8
import  -/  megaparsec-7.0.4:Text.Megaparsec.Lexer 83dbd661cbe9657eaf7f67f0d3a31c0d
import  -/  parser-combinators-1.0.1:Control.Applicative.Combinators 79d226f48196dca675b00a2047bb8e23
import  -/  parser-combinators-1.0.1:Control.Monad.Combinators a896246bc439928f68ca3d3bc3e18ce9
import  -/  parser-combinators-1.0.1:Control.Monad.Combinators.Expr cc1a4ce057c2488c66b7a422ae48f5f4
b8bcc5962a70ad40734c97bf221004cb
  $fShowAliohjelma :: GHC.Show.Show Main.Aliohjelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Aliohjelma
                  Main.$fShowAliohjelma_$cshowsPrec
                  Main.$fShowAliohjelma_$cshow
                  Main.$fShowAliohjelma_$cshowList -}
b8bcc5962a70ad40734c97bf221004cb
  $fShowAliohjelma1 :: Main.Aliohjelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(1*U),1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Main.Aliohjelma) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Aliohjelma ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 w1 }) -}
10067ca02bdea21ffae3dc6160a9a8e5
  $fShowAliohjelma2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b8bcc5962a70ad40734c97bf221004cb
  $fShowAliohjelma_$cshow :: Main.Aliohjelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Aliohjelma) ->
                 Main.$fShowAliohjelma_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b8bcc5962a70ad40734c97bf221004cb
  $fShowAliohjelma_$cshowList :: [Main.Aliohjelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Aliohjelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Aliohjelma
                   Main.$fShowAliohjelma1
                   ls
                   s) -}
b8bcc5962a70ad40734c97bf221004cb
  $fShowAliohjelma_$cshowsPrec ::
    GHC.Types.Int -> Main.Aliohjelma -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U),1*U,1*U,1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Aliohjelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Aliohjelma ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 w2 } }) -}
c5e47c0afbe65da220df28acb48413d2
  $fShowArvo :: GHC.Show.Show Main.Arvo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Arvo
                  Main.$fShowArvo_$cshowsPrec
                  Main.$fShowArvo_$cshow
                  Main.$fShowArvo_$cshowList -}
c5e47c0afbe65da220df28acb48413d2
  $fShowArvo1 :: Main.Arvo -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Arvo) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec1 0# w w1) -}
9d26ea399c42e63a35a09fcda8ee0a7b
  $fShowArvo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoString "#) -}
b1cceccae7cadc87a8751b112040cced
  $fShowArvo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoBool "#) -}
d94ca9a1a5cd17de84a81e91a87459f7
  $fShowArvo4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArvoInt "#) -}
fc8db6ca930c0ef10190412e799e829f
  $fShowArvo5 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c5e47c0afbe65da220df28acb48413d2
  $fShowArvo_$cshow :: Main.Arvo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Arvo) ->
                 case x of wild {
                   Main.ArvoInt b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo4
                        (case b1 of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt
                                11#
                                ww3
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   Main.ArvoBool b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo3
                        (case b1 of wild1 {
                           GHC.Types.False -> GHC.Show.$fShowBool4
                           GHC.Types.True -> GHC.Show.$fShowBool2 })
                   Main.ArvoString b1
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowArvo2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 Main.$fShowArvo5)) }) -}
c5e47c0afbe65da220df28acb48413d2
  $fShowArvo_$cshowList :: [Main.Arvo] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Arvo]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Arvo Main.$fShowArvo1 ls s) -}
c5e47c0afbe65da220df28acb48413d2
  $fShowArvo_$cshowsPrec ::
    GHC.Types.Int -> Main.Arvo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Arvo)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec1 ww1 w1 w2 }) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowEhtolause :: GHC.Show.Show Main.Ehtolause
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Ehtolause
                  Main.$fShowEhtolause_$cshowsPrec
                  Main.$fShowEhtolause_$cshow
                  Main.$fShowEhtolause_$cshowList -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowEhtolause1 :: Main.Ehtolause -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Ehtolause) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec2 0# w w1) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowEhtolause_$cshow :: Main.Ehtolause -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Ehtolause) ->
                 Main.$fShowEhtolause_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowEhtolause_$cshowList :: [Main.Ehtolause] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Ehtolause]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Ehtolause Main.$fShowEhtolause1 ls s) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowEhtolause_$cshowsPrec ::
    GHC.Types.Int -> Main.Ehtolause -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Ehtolause)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec2 ww1 w1 w2 }) -}
7b519e84f17348030685aea75eefd654
  $fShowId :: GHC.Show.Show Main.Id
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Id
                  Main.$fShowId_$cshowsPrec
                  Main.$fShowId_$cshow
                  Main.$fShowId_$cshowList -}
7b519e84f17348030685aea75eefd654
  $fShowId1 :: Main.Id -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: Main.Id) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Id ww1 -> Main.$w$cshowsPrec3 0# ww1 w1 }) -}
2bc9a1cec5c79107a5c9f57cf6b0c770
  $fShowId2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Id "#) -}
7b519e84f17348030685aea75eefd654
  $fShowId_$cshow :: Main.Id -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Id) ->
                 case w of ww { Main.Id ww1 -> Main.$w$cshow ww1 }) -}
7b519e84f17348030685aea75eefd654
  $fShowId_$cshowList :: [Main.Id] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Id]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Id Main.$fShowId1 ls s) -}
7b519e84f17348030685aea75eefd654
  $fShowId_$cshowsPrec :: GHC.Types.Int -> Main.Id -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Id) (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Id ww3 ->
                 Main.$w$cshowsPrec3 ww1 ww3 w2 } }) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowLauseke :: GHC.Show.Show Main.Lauseke
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Lauseke
                  Main.$fShowLauseke_$cshowsPrec
                  Main.$fShowLauseke_$cshow
                  Main.$fShowLauseke_$cshowList -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowLauseke1 :: Main.Lauseke -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Lauseke) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec4 0# w w1) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowLauseke_$cshow :: Main.Lauseke -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Lauseke) ->
                 Main.$fShowLauseke_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowLauseke_$cshowList :: [Main.Lauseke] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Lauseke]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Lauseke Main.$fShowLauseke1 ls s) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $fShowLauseke_$cshowsPrec ::
    GHC.Types.Int -> Main.Lauseke -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Lauseke)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec4 ww1 w1 w2 }) -}
84c565bf33ef0ddfd6decb0e1c477074
  $fShowLuokka :: GHC.Show.Show Main.Luokka
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Luokka
                  Main.$fShowLuokka_$cshowsPrec
                  Main.$fShowLuokka_$cshow
                  Main.$fShowLuokka_$cshowList -}
84c565bf33ef0ddfd6decb0e1c477074
  $fShowLuokka1 :: Main.Luokka -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)><L,U>,
     Unfolding: (\ (w :: Main.Luokka) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Luokka ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec5 0# ww1 ww2 ww3 w1 }) -}
bdbccdb4eba393fbd198c7556b8be633
  $fShowLuokka10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka11) -}
af7493f344ab80294aaeada62cd83e96
  $fShowLuokka11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTInt"#) -}
9b4da54953b0011146bb5c822dca6474
  $fShowLuokka12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parametri "#) -}
f699b548fc57a993d9db9bb4411fa375
  $fShowLuokka13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MainOhjelma "#) -}
1d727d74936ddbf835865d668b020579
  $fShowLuokka2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka3) -}
b8176d57f81e4820bd8f8beae2958eae
  $fShowLuokka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Luokka "#) -}
8ec51a99c525f1033f98dd1299b7829a
  $fShowLuokka4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka5) -}
2aa32692dccfd7999c5c1ae1c7317fef
  $fShowLuokka5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTVoid"#) -}
00c25eaeac543a27425ff88f9909cd06
  $fShowLuokka6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka7) -}
bec58e897586194cc4bc8453ea091215
  $fShowLuokka7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTString"#) -}
3585a298128fe83e24403695b883b2ac
  $fShowLuokka8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowLuokka9) -}
c03c0ba5b0eee281b48299d617fb5041
  $fShowLuokka9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TTBool"#) -}
84c565bf33ef0ddfd6decb0e1c477074
  $fShowLuokka_$cshow :: Main.Luokka -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Luokka) ->
                 Main.$fShowLuokka_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
84c565bf33ef0ddfd6decb0e1c477074
  $fShowLuokka_$cshowList :: [Main.Luokka] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Luokka]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Luokka Main.$fShowLuokka1 ls s) -}
84c565bf33ef0ddfd6decb0e1c477074
  $fShowLuokka_$cshowsPrec ::
    GHC.Types.Int -> Main.Luokka -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U),1*U(1*U(1*U,1*U(1*U)),1*U),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Luokka)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Luokka ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec5 ww1 ww3 ww4 ww5 w2 } }) -}
df1dfc94ea1a8b10e7570587c2996f65
  $fShowMaaritelma :: GHC.Show.Show Main.Maaritelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Maaritelma
                  Main.$fShowMaaritelma_$cshowsPrec
                  Main.$fShowMaaritelma_$cshow
                  Main.$fShowMaaritelma_$cshowList -}
df1dfc94ea1a8b10e7570587c2996f65
  $fShowMaaritelma1 :: Main.Maaritelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Maaritelma) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec9 0# w w1) -}
df1dfc94ea1a8b10e7570587c2996f65
  $fShowMaaritelma_$cshow :: Main.Maaritelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Maaritelma) ->
                 Main.$fShowMaaritelma_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
df1dfc94ea1a8b10e7570587c2996f65
  $fShowMaaritelma_$cshowList :: [Main.Maaritelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Maaritelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Maaritelma
                   Main.$fShowMaaritelma1
                   ls
                   s) -}
df1dfc94ea1a8b10e7570587c2996f65
  $fShowMaaritelma_$cshowsPrec ::
    GHC.Types.Int -> Main.Maaritelma -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Maaritelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec9 ww1 w1 w2 }) -}
9dec73c6b0f0a043e21f682ae6550d73
  $fShowMainOhjelma :: GHC.Show.Show Main.MainOhjelma
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.MainOhjelma
                  Main.$fShowMainOhjelma_$cshowsPrec
                  Main.$fShowMainOhjelma_$cshow
                  Main.$fShowMainOhjelma_$cshowList -}
9dec73c6b0f0a043e21f682ae6550d73
  $fShowMainOhjelma1 :: Main.MainOhjelma -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(1*U,1*U(1*U)),1*U)><L,U>,
     Unfolding: (\ (w :: Main.MainOhjelma) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.MainOhjelma ww1 ww2 ->
                 Main.$w$cshowsPrec6 0# ww1 ww2 w1 }) -}
9dec73c6b0f0a043e21f682ae6550d73
  $fShowMainOhjelma_$cshow :: Main.MainOhjelma -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(1*U,1*U(1*U)),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.MainOhjelma) ->
                 Main.$fShowMainOhjelma_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9dec73c6b0f0a043e21f682ae6550d73
  $fShowMainOhjelma_$cshowList ::
    [Main.MainOhjelma] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.MainOhjelma]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.MainOhjelma
                   Main.$fShowMainOhjelma1
                   ls
                   s) -}
9dec73c6b0f0a043e21f682ae6550d73
  $fShowMainOhjelma_$cshowsPrec ::
    GHC.Types.Int -> Main.MainOhjelma -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(1*U,1*U(1*U)),1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.MainOhjelma)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.MainOhjelma ww3 ww4 ->
                 Main.$w$cshowsPrec6 ww1 ww3 ww4 w2 } }) -}
e484cf3ee9b5df3cae7c197e1bd41468
  $fShowOp :: GHC.Show.Show Main.Op
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Op
                  Main.$fShowOp_$cshowsPrec
                  Main.$fShowOp_$cshow
                  Main.$fShowOp_$cshowList -}
491992850678eca003ff151f7ae77e26
  $fShowOp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp2) -}
ad8fe5393820c2aaf8bc9409eed79565
  $fShowOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Jako"#) -}
df6bedd6ed1dca45083c429c1879fea1
  $fShowOp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp4) -}
b7dfead01d2985c42c777230ba85c9e7
  $fShowOp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Kerto"#) -}
11b3c8ec72092a1a3c9378151a1e993e
  $fShowOp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp6) -}
641277dcaf2f14623863f92413b69fc9
  $fShowOp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Miinus"#) -}
3e5aac651cbee18d1b96fdc4bc931532
  $fShowOp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowOp8) -}
8a60e2aa75c23fabb637cfecad37e47d
  $fShowOp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Plus"#) -}
e484cf3ee9b5df3cae7c197e1bd41468
  $fShowOp_$cshow :: Main.Op -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Op) ->
                 case x of wild {
                   Main.Plus -> Main.$fShowOp7
                   Main.Miinus -> Main.$fShowOp5
                   Main.Kerto -> Main.$fShowOp3
                   Main.Jako -> Main.$fShowOp1 }) -}
e484cf3ee9b5df3cae7c197e1bd41468
  $fShowOp_$cshowList :: [Main.Op] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Op]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Op Main.$w$cshowsPrec10 ls s) -}
e484cf3ee9b5df3cae7c197e1bd41468
  $fShowOp_$cshowsPrec :: GHC.Types.Int -> Main.Op -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Main.Op) (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec10 w1 w2) -}
5464c07b0a29099be58180211fe98396
  $fShowPalautustyyppi :: GHC.Show.Show Main.Palautustyyppi
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Palautustyyppi
                  Main.$fShowPalautustyyppi_$cshowsPrec
                  Main.$fShowPalautustyyppi_$cshow
                  Main.$fShowPalautustyyppi_$cshowList -}
5464c07b0a29099be58180211fe98396
  $fShowPalautustyyppi1 :: Main.Palautustyyppi -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Main.$fShowPalautustyyppi_$cshowsPrec
                   Main.$fShowAliohjelma2) -}
f258d36630d9e405f7be13fa8311cd00
  $fShowPalautustyyppi2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fShowPalautustyyppi3) -}
e94a17efc0449906da4917c2ab72f73b
  $fShowPalautustyyppi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Void"#) -}
bbcf6cc15f9b4817f3c825633ad2f2a6
  $fShowPalautustyyppi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fShowPalautustyyppi5) -}
1f4a4c316791d949798d0fc4aeaa6147
  $fShowPalautustyyppi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Palautustyyppi "#) -}
5464c07b0a29099be58180211fe98396
  $fShowPalautustyyppi_$cshow ::
    Main.Palautustyyppi -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Main.Palautustyyppi) ->
                 case x of wild {
                   Main.Palautustyyppi b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Main.$fShowPalautustyyppi4
                        (Main.$w$cshowsPrec8 b1 (GHC.Types.[] @ GHC.Types.Char))
                   Main.Void -> Main.$fShowPalautustyyppi2 }) -}
5464c07b0a29099be58180211fe98396
  $fShowPalautustyyppi_$cshowList ::
    [Main.Palautustyyppi] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Palautustyyppi]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.Palautustyyppi
                   Main.$fShowPalautustyyppi1
                   ls
                   s) -}
5464c07b0a29099be58180211fe98396
  $fShowPalautustyyppi_$cshowsPrec ::
    GHC.Types.Int -> Main.Palautustyyppi -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Main.Palautustyyppi)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Main.Palautustyyppi b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Main.$fShowPalautustyyppi4
                             (Main.$w$cshowsPrec8 b1 eta)
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Main.$fShowPalautustyyppi4
                                (Main.$w$cshowsPrec8
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 eta))) } }
                   Main.Void
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Main.$fShowPalautustyyppi2
                        eta }) -}
c38695806baf28cfa4e819532fd43157
  $fShowParametri :: GHC.Show.Show Main.Parametri
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Parametri
                  Main.$fShowParametri_$cshowsPrec
                  Main.$fShowParametri_$cshow
                  Main.$fShowParametri_$cshowList -}
c38695806baf28cfa4e819532fd43157
  $fShowParametri1 :: Main.Parametri -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U(1*U))><L,U>,
     Unfolding: (\ (w :: Main.Parametri) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.Parametri ww1 ww2 ->
                 Main.$w$cshowsPrec7 0# ww1 ww2 w1 }) -}
c38695806baf28cfa4e819532fd43157
  $fShowParametri_$cshow :: Main.Parametri -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(1*U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Parametri) ->
                 Main.$fShowParametri_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c38695806baf28cfa4e819532fd43157
  $fShowParametri_$cshowList :: [Main.Parametri] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Parametri]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Parametri Main.$fShowParametri1 ls s) -}
c38695806baf28cfa4e819532fd43157
  $fShowParametri_$cshowsPrec ::
    GHC.Types.Int -> Main.Parametri -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(1*U))><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Parametri)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Parametri ww3 ww4 ->
                 Main.$w$cshowsPrec7 ww1 ww3 ww4 w2 } }) -}
013e4ab9d63c679aa78dd6e8179b094f
  $fShowSijoitus :: GHC.Show.Show Main.Sijoitus
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Sijoitus
                  Main.$fShowSijoitus_$cshowsPrec
                  Main.$fShowSijoitus_$cshow
                  Main.$fShowSijoitus_$cshowList -}
013e4ab9d63c679aa78dd6e8179b094f
  $fShowSijoitus1 :: Main.Sijoitus -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: Main.Sijoitus) (w1 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec11 0# w w1) -}
c1bd49bd882db601b66fc3de264aeac4
  $fShowSijoitus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VanhaSijoitus "#) -}
9ba576cc33cc3f4f465efed9483929e5
  $fShowSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UusiSijoitus "#) -}
013e4ab9d63c679aa78dd6e8179b094f
  $fShowSijoitus_$cshow :: Main.Sijoitus -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Sijoitus) ->
                 Main.$fShowSijoitus_$cshowsPrec
                   Main.$fShowAliohjelma2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
013e4ab9d63c679aa78dd6e8179b094f
  $fShowSijoitus_$cshowList :: [Main.Sijoitus] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Sijoitus]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Sijoitus Main.$fShowSijoitus1 ls s) -}
013e4ab9d63c679aa78dd6e8179b094f
  $fShowSijoitus_$cshowsPrec ::
    GHC.Types.Int -> Main.Sijoitus -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Sijoitus)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$w$cshowsPrec11 ww1 w1 w2 }) -}
2420ec2f5e78643ac9ea82e37dfd2164
  $fShowTietotyyppi :: GHC.Show.Show Main.Tietotyyppi
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Tietotyyppi
                  Main.$fShowTietotyyppi_$cshowsPrec
                  Main.$fShowTietotyyppi_$cshow
                  Main.$fShowTietotyyppi_$cshowList -}
2420ec2f5e78643ac9ea82e37dfd2164
  $fShowTietotyyppi_$cshow :: Main.Tietotyyppi -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Tietotyyppi) ->
                 case x of wild {
                   Main.TTInt -> Main.$fShowLuokka10
                   Main.TTBool -> Main.$fShowLuokka8
                   Main.TTString -> Main.$fShowLuokka6
                   Main.TTVoid -> Main.$fShowLuokka4 }) -}
2420ec2f5e78643ac9ea82e37dfd2164
  $fShowTietotyyppi_$cshowList ::
    [Main.Tietotyyppi] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Tietotyyppi]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Tietotyyppi Main.$w$cshowsPrec8 ls s) -}
2420ec2f5e78643ac9ea82e37dfd2164
  $fShowTietotyyppi_$cshowsPrec ::
    GHC.Types.Int -> Main.Tietotyyppi -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Tietotyyppi)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec8 w1 w2) -}
98a8c14477bc41632a07bd560ff431ea
  $fShowVOp :: GHC.Show.Show Main.VOp
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.VOp
                  Main.$fShowVOp_$cshowsPrec
                  Main.$fShowVOp_$cshow
                  Main.$fShowVOp_$cshowList -}
aacda2a92ad8fbf4a3218f0ea51bba1f
  $fShowVOp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp2) -}
eeb9dc1752a7d2eff5478e497a247127
  $fShowVOp10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Suurempi"#) -}
513a0bd6e90df65fa987817a023f6cd0
  $fShowVOp11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp12) -}
567a8f319ada73818d8815c10a71c906
  $fShowVOp12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pienempi"#) -}
ffe4b237d1f72c17e5f1dd4b466acb15
  $fShowVOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Erisuuri"#) -}
50b8a3c1ade7cd8b8aab51dec605a9d3
  $fShowVOp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp4) -}
4f5b108e6f94d20f2fce0e72aea67f54
  $fShowVOp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Yhtasuuri"#) -}
a08009b7781a2ffdc29e1293cc7edf3e
  $fShowVOp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp6) -}
41e9752c5571b9e9374a4977cb1412bf
  $fShowVOp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SuurempiYhtasuuri"#) -}
d10357803d895051b693851a852aa984
  $fShowVOp7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp8) -}
0537a59f9d1f415ced4b1c18ec75f18c
  $fShowVOp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PienempiYhtasuuri"#) -}
ef1cd7f068338d9fca91f5948198b09c
  $fShowVOp9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fShowVOp10) -}
98a8c14477bc41632a07bd560ff431ea
  $fShowVOp_$cshow :: Main.VOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.VOp) ->
                 case x of wild {
                   Main.Pienempi -> Main.$fShowVOp11
                   Main.Suurempi -> Main.$fShowVOp9
                   Main.PienempiYhtasuuri -> Main.$fShowVOp7
                   Main.SuurempiYhtasuuri -> Main.$fShowVOp5
                   Main.Yhtasuuri -> Main.$fShowVOp3
                   Main.Erisuuri -> Main.$fShowVOp1 }) -}
98a8c14477bc41632a07bd560ff431ea
  $fShowVOp_$cshowList :: [Main.VOp] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.VOp]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.VOp Main.$w$cshowsPrec12 ls s) -}
98a8c14477bc41632a07bd560ff431ea
  $fShowVOp_$cshowsPrec ::
    GHC.Types.Int -> Main.VOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int) (w1 :: Main.VOp) (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec12 w1 w2) -}
a4e343f0f5085aa1e7f40a8f7017bf2a
  $s$fAlternativeParsecT_$sunion ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
8e76bb33e50d5b34bc1b038e3db009e8
  $s$fAlternativeParsecT_$sunion1 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorItem
            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
    -> Data.Set.Internal.Set
         (Text.Megaparsec.Error.ErrorItem
            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
a0fdcc7d415a2209bf5768e17a141f79
  $s$fAlternativeParsecT_$swithHints ::
    Text.Megaparsec.Internal.Hints
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> (Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
        -> Text.Megaparsec.State.State [GHC.Types.Char] -> m b)
    -> Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
    -> Text.Megaparsec.State.State [GHC.Types.Char]
    -> m b
  {- Arity: 3, Strictness: <L,U><C(S),1*C1(U)><S,1*U>,
     Inline: (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ @ e
                   @ m :: * -> *
                   @ b
                   (ds :: Text.Megaparsec.Internal.Hints
                            (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (c :: Text.Megaparsec.Error.ParseError [GHC.Types.Char] e
                         -> Text.Megaparsec.State.State [GHC.Types.Char] -> m b)
                   (e1 :: Text.Megaparsec.Error.ParseError [GHC.Types.Char] e) ->
                 case e1 of wild {
                   Text.Megaparsec.Error.TrivialError pos us ps
                   -> c (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ e
                           pos
                           us
                           (GHC.Base.foldr
                              @ (Data.Set.Internal.Set
                                   (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                              @ (Data.Set.Internal.Set
                                   (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                                 -> Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                              (\ (ds1 :: Data.Set.Internal.Set
                                           (Text.Megaparsec.Error.ErrorItem
                                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                                 (ds2 :: Data.Set.Internal.Set
                                           (Text.Megaparsec.Error.ErrorItem
                                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                                         -> Data.Set.Internal.Set
                                              (Text.Megaparsec.Error.ErrorItem
                                                 (Text.Megaparsec.Stream.Token
                                                    [GHC.Types.Char])))[OneShot]
                                 (v :: Data.Set.Internal.Set
                                         (Text.Megaparsec.Error.ErrorItem
                                            (Text.Megaparsec.Stream.Token
                                               [GHC.Types.Char])))[OneShot] ->
                               case v of z { DEFAULT ->
                               ds2 (Main.$s$fAlternativeParsecT_$sunion1 z ds1) })
                              (GHC.Base.id
                                 @ (Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))
                              (GHC.Types.:
                                 @ (Data.Set.Internal.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                                 ps
                                 ds
                                   `cast`
                                 (Text.Megaparsec.Internal.N:Hints[0]
                                      <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N))
                              (Data.Set.Internal.Tip
                                 @ (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Stream.Token [GHC.Types.Char])))))
                   Text.Megaparsec.Error.FancyError ipv ipv1 -> c wild }) -}
8569d69451164514cf8c79ea8959ffbf
  $s$fEqErrorFancy ::
    GHC.Classes.Eq (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                  (Text.Megaparsec.Error.$fEqErrorFancy_$c==
                     @ Data.Void.Void
                     Data.Void.$fEqVoid)
                  Main.$s$fEqErrorFancy_$s$fEqErrorFancy_$c/= -}
c9c4f61e21670adf3f16557d06f7fa9a
  $s$fEqErrorFancy_$s$fEqErrorFancy_$c/= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fEqErrorFancy_$c==
                        @ Data.Void.Void
                        Data.Void.$fEqVoid
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
86d49d5035cd732561b46ab038d7bb09
  $s$fEqErrorItem ::
    GHC.Classes.Eq
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorItem
                       (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                  (Text.Megaparsec.Error.$fEqErrorItem_$c==
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fEqChar
                       `cast`
                     (GHC.Classes.Eq (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  Main.$s$fEqErrorItem_$s$fEqErrorItem_$c/= -}
a905f80804ed44e95fc143c27b9a2698
  $s$fEqErrorItem_$s$fEqErrorItem_$c/= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fEqErrorItem_$c==
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fEqChar
                          `cast`
                        (GHC.Classes.Eq (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
fa48334fc55dcd5b6c255e0c3969bda0
  $s$fOrdErrorFancy ::
    GHC.Classes.Ord (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                  Main.$s$fEqErrorFancy
                  (Text.Megaparsec.Error.$fOrdErrorFancy_$ccompare
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid)
                  (Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid)
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          b
                          a of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                     @ Data.Void.Void
                     Data.Void.$fOrdVoid
                     b
                     a)
                  (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          a
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          y
                          x of wild {
                     GHC.Types.False -> y GHC.Types.True -> x })
                  (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                     (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                   case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                          @ Data.Void.Void
                          Data.Void.$fOrdVoid
                          y
                          x of wild {
                     GHC.Types.False -> x GHC.Types.True -> y }) -}
439ce3fe198720ea0b80505e67e3cd0c
  $s$fOrdErrorFancy_$c<= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
494af60328dc78709c0989aed9adb77b
  $s$fOrdErrorFancy_$c>= ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (b :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
0fa83830dbafdc3bdc73d56034c9ba7c
  $s$fOrdErrorFancy_$cmax ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
23e997e406e0c6f9838d53f2bba6832e
  $s$fOrdErrorFancy_$cmin ::
    Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
    -> Text.Megaparsec.Error.ErrorFancy Data.Void.Void
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void)
                   (y :: Text.Megaparsec.Error.ErrorFancy Data.Void.Void) ->
                 case Text.Megaparsec.Error.$fOrdErrorFancy_$c<
                        @ Data.Void.Void
                        Data.Void.$fOrdVoid
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
1a4b76eb537cf7e811946fc8f8e85fde
  $s$fOrdErrorItem ::
    GHC.Classes.Ord
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Megaparsec.Error.ErrorItem
                       (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                  Main.$s$fEqErrorItem
                  (Text.Megaparsec.Error.$fOrdErrorItem_$ccompare
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  (Text.Megaparsec.Error.$fOrdErrorItem_$c<
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R)
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          b
                          a of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   Text.Megaparsec.Error.$fOrdErrorItem_$c<
                     @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                     GHC.Classes.$fOrdChar
                       `cast`
                     (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                     b
                     a)
                  (\ (a :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (b :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          a
                          b of wild {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True -> GHC.Types.False })
                  (\ (x :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (y :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          y
                          x of wild {
                     GHC.Types.False -> y GHC.Types.True -> x })
                  (\ (x :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                     (y :: Text.Megaparsec.Error.ErrorItem
                             (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                   case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                          @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          GHC.Classes.$fOrdChar
                            `cast`
                          (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                          y
                          x of wild {
                     GHC.Types.False -> x GHC.Types.True -> y }) -}
e70a03a206f0a3d02778fc89c0ada090
  $s$fOrdErrorItem_$c<= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (b :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        b
                        a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
bd016829e4a42759c3487ef3f20d9bfb
  $s$fOrdErrorItem_$c>= ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (b :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        a
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9d10a4b2dd056ffad7a13f35096fcbab
  $s$fOrdErrorItem_$cmax ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        y
                        x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
06e3625a39c5ae124fe089fda809383e
  $s$fOrdErrorItem_$cmin ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
    -> Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (y :: Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                 case Text.Megaparsec.Error.$fOrdErrorItem_$c<
                        @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                        GHC.Classes.$fOrdChar
                          `cast`
                        (GHC.Classes.Ord (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))_R
                        y
                        x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
ad643e299760c1f5eb99d40c6a2d32e1
  $saddPrecLevel ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> [Control.Monad.Combinators.Expr.Operator
          (Text.Megaparsec.Internal.ParsecT
             Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
          a]
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 2, Strictness: <L,C(C1(C1(C1(C1(U)))))><L,1*U> -}
9a21707b8d35ac1f19fa528e75d08f8c
  $sbetween ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity open
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity close
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ @ open
                   @ close
                   @ a
                   (open1 :: Text.Megaparsec.Internal.ParsecT
                               Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity open)
                   (close1 :: Text.Megaparsec.Internal.ParsecT
                                Data.Void.Void
                                GHC.Base.String
                                Data.Functor.Identity.Identity
                                close)
                   (p :: Text.Megaparsec.Internal.ParsecT
                           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ a
                   @ close
                   (Text.Megaparsec.Internal.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ Data.Void.Void
                      @ Data.Functor.Identity.Identity
                      Text.Megaparsec.Stream.$fStream[]
                      @ open
                      @ a
                      open1
                      p)
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <a>_R))
                   close1)
                  `cast`
                (forall (open :: <*>_N) (close :: <*>_N) (a :: <*>_N).
                 <Text.Megaparsec.Internal.ParsecT
                    Data.Void.Void
                    GHC.Base.String
                    Data.Functor.Identity.Identity
                    open>_R
                 ->_R <Text.Megaparsec.Internal.ParsecT
                         Data.Void.Void
                         GHC.Base.String
                         Data.Functor.Identity.Identity
                         close>_R
                 ->_R <Text.Megaparsec.Internal.ParsecT
                         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
ea0c05adbee8327b15bfba19bbd6d6fc
  $sdecimal1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: GHC.Types.Int
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: GHC.Types.Int
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$w$sdecimal @ b ww1 ww2 ww3 w1 w4 }) -}
926f4004c2eb1b9b0894edc6c9436386
  $sdecimal10 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.$sdecimal11) -}
787762eb089d20fb1327cc67a9b69676
  $sdecimal11 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.$sdecimal14
                   Main.$sdecimal12) -}
32760b66541bc502512e35caa5dff4c4
  $sdecimal12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$sdecimal13) -}
c2c517fdb03421f1041f65e22cddeb1e
  $sdecimal13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nteger"#) -}
b518850424e7281090afab4e4f2e10d2
  $sdecimal14 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'i'#) -}
51c59fd77db4b5cc5bbdb57d7ca814a6
  $sdecimal2 ::
    [Data.Set.Internal.Set
       (Text.Megaparsec.Error.ErrorItem
          (Text.Megaparsec.Stream.Token [GHC.Types.Char]))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   Main.$sdecimal3
                   (GHC.Types.[]
                      @ (Data.Set.Internal.Set
                           (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))) -}
bf5570cb521e2ee846153b3f2dde5583
  $sdecimal3 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.$sdecimal4
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
12f3ecb11b6d6ddda355aed5f8c34195
  $sdecimal4 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.$sdecimal5) -}
088cd8a3c38b4e7ebf80d2fcdf6157fa
  $sdecimal5 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.$sdecimal8
                   Main.$sdecimal6) -}
7d58ceba5770ec5378d726de38de02a9
  $sdecimal6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$sdecimal7) -}
b4126a251db0efc70cb7ce3d801032a4
  $sdecimal7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("igit"#) -}
c821bd954dd8ef582c2ba9aa39521bbc
  $sdecimal8 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'd'#) -}
e0292718d247da0f3caa29fd33d16be4
  $sdecimal9 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.$sdecimal10
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
8428b39454e9c5f2e1c5e07d0c50d46f
  $sinsertR_go3 ::
    GHC.Classes.Ord a1 =>
    a1 -> a1 -> Data.Set.Internal.Set a1 -> Data.Set.Internal.Set a1
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,U><S,1*U><S,1*U> -}
4e07fd53c639d6c052a5200e411bb4be
  $sinsert_go3 ::
    GHC.Classes.Ord a1 =>
    a1 -> a1 -> Data.Set.Internal.Set a1 -> Data.Set.Internal.Set a1
  {- Arity: 4,
     Strictness: <L,U(A,C(C1(U)),A,A,A,A,A,A)><L,U><S,1*U><S,1*U> -}
581375ca7c376417ef40991df6a26951
  $spInfixL ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void
      GHC.Base.String
      Data.Functor.Identity.Identity
      (a -> a -> a)
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: [~] -}
a03269c2d7986db7072006fdb181a865
  $spInfixR ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void
      GHC.Base.String
      Data.Functor.Identity.Identity
      (a -> a -> a)
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> a
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
  {- Arity: 8,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: [~] -}
69135aee176628777a4f795c29da68a7
  $tc'Aliohjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8001802274408989482##
                   6447367613820978404##
                   Main.$trModule
                   Main.$tc'Aliohjelma2
                   0#
                   Main.$tc'Aliohjelma1) -}
5cfcfc04548e45c432045dbe1960f970
  $tc'Aliohjelma1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f1667c7f755950affe43af5c4f9df51d
  $tc'Aliohjelma2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Aliohjelma3) -}
c6dfc7ce6b27ce4b7939232af34c97d9
  $tc'Aliohjelma3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Aliohjelma"#) -}
c2e5c8e7d0e20270126b203a5cd75c43
  $tc'Aritmeettinen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17101064230281127630##
                   17674975807145904712##
                   Main.$trModule
                   Main.$tc'Aritmeettinen2
                   0#
                   Main.$tc'Aritmeettinen1) -}
1efda5deae8c7484bf2628eb1335caaf
  $tc'Aritmeettinen1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bab316dd32b16e31b15e3ba2f1a75b0c
  $tc'Aritmeettinen2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Aritmeettinen3) -}
90a88bf41530715cadb4afc26052327e
  $tc'Aritmeettinen3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Aritmeettinen"#) -}
c46ca0c5e794eb52be55e0d2fd51c05e
  $tc'ArvoBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14002121210451470730##
                   8694696766992514570##
                   Main.$trModule
                   Main.$tc'ArvoBool2
                   0#
                   Main.$tc'ArvoBool1) -}
8fce6a4d3e8ddf79faf6fbdbc27d5b4e
  $tc'ArvoBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
581709c24f91eaef4b29b840c9d51a9a
  $tc'ArvoBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoBool3) -}
c63e2b784c841cee70f316a110dcad82
  $tc'ArvoBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoBool"#) -}
a5e2faf13e426c69eb9771aed50e22c8
  $tc'ArvoInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15914880759453955293##
                   7607306622100378426##
                   Main.$trModule
                   Main.$tc'ArvoInt2
                   0#
                   Main.$tc'ArvoInt1) -}
e92ae8821b4495d651cd3d524e339558
  $tc'ArvoInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b8e2d69ad92a9e932c2dfd78ba5ae525
  $tc'ArvoInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoInt3) -}
6fc1477b4b3e61e31671c5ca3a9e9afd
  $tc'ArvoInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoInt"#) -}
457f08bd791dba9513180f65fe41e58d
  $tc'ArvoString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13422943877696750739##
                   17366286188324008315##
                   Main.$trModule
                   Main.$tc'ArvoString2
                   0#
                   Main.$tc'ArvoString1) -}
aedc991e83fe92f824643814fd34ffdf
  $tc'ArvoString1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1533e575204d56ca95639ff1644a564e
  $tc'ArvoString2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'ArvoString3) -}
d9936a71def8372428a2dd3a67ff36fe
  $tc'ArvoString3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArvoString"#) -}
edb3eee08bfd8cf20a41ad5fa7035236
  $tc'Erisuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5895142615301007063##
                   3197693317535370355##
                   Main.$trModule
                   Main.$tc'Erisuuri2
                   0#
                   Main.$tc'Erisuuri1) -}
7dd68a6fd9ada53a9a7790049d172840
  $tc'Erisuuri1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
bd97141f3a026d0673b7cc9e83d426ac
  $tc'Erisuuri2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Erisuuri3) -}
b0661ba2fde7aa0355484ae159e55b71
  $tc'Erisuuri3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Erisuuri"#) -}
91277cf4c6ecad8eac469ba6a212effe
  $tc'Id :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6661115548681150912##
                   2390779830395085040##
                   Main.$trModule
                   Main.$tc'Id2
                   0#
                   Main.$tc'Id1) -}
6d35fd54b97ba38ddcccd658e4e48e84
  $tc'Id1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d24699d7054aa57629922037a13a5140
  $tc'Id2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Id3) -}
29cd3e18433f03d971b239468b23c21f
  $tc'Id3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Id"#) -}
6fa61f888a36fd68ba013955deac3261
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6132961123506030646##
                   6684648458316850408##
                   Main.$trModule
                   Main.$tc'If2
                   0#
                   Main.$tc'If1) -}
8b1065db9fcf73f2f73be2a2a4ec9bc8
  $tc'If1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
deda67112de693b1b6d98a5a46f3ca3a
  $tc'If2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'If3) -}
1c005ec4d64e1adaf399d4b6d5d523f9
  $tc'If3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'If"#) -}
5a3d64a0e5260e5ef733aaabb702f701
  $tc'IfElse :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10716242296366891913##
                   3527870482548045459##
                   Main.$trModule
                   Main.$tc'IfElse2
                   0#
                   Main.$tc'IfElse1) -}
ceb5bfb2adfcaa897a8524503561fc3a
  $tc'IfElse1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1f5f45bf5bf61a1db4ac9a522f5d9ee2
  $tc'IfElse2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'IfElse3) -}
bdeb256e553872bdded71f3a3bba728f
  $tc'IfElse3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IfElse"#) -}
e3ef0551752a0974ae51637a10393bfb
  $tc'Jako :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4994242762110306756##
                   12894901441805598304##
                   Main.$trModule
                   Main.$tc'Jako2
                   0#
                   Main.$tc'Jako1) -}
5465ab53240e0e51c95df26a45d4cd12
  $tc'Jako1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
f9162d4f29f02c21a9a204ae378afeb9
  $tc'Jako2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Jako3) -}
bf187dd44fc294d00a4d74fe887c5955
  $tc'Jako3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Jako"#) -}
6343ad848e50edaf854f7f5cfc3151e7
  $tc'Kerto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12656474128145606944##
                   14039410796370364382##
                   Main.$trModule
                   Main.$tc'Kerto1
                   0#
                   Main.$tc'Jako1) -}
04f43b051cac986daa21e37d86b7681a
  $tc'Kerto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Kerto2) -}
6ec0d500634c9d18b988dad6e55abdc5
  $tc'Kerto2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Kerto"#) -}
6e267af653dfc6c92a251ac32eaea05a
  $tc'LEhto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15056220188369016815##
                   17358479544626899973##
                   Main.$trModule
                   Main.$tc'LEhto2
                   0#
                   Main.$tc'LEhto1) -}
ffa84c952b50520d3391303770b14d97
  $tc'LEhto1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d3ef44865c57f214b96b4ee8dee0468b
  $tc'LEhto2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LEhto3) -}
06740e05c5a0bcee6aac78987fe9ed18
  $tc'LEhto3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LEhto"#) -}
a9306d145ced53ed10a90ff2a57d23de
  $tc'LPalautus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18077896862279206212##
                   15101955476175411170##
                   Main.$trModule
                   Main.$tc'LPalautus2
                   0#
                   Main.$tc'LPalautus1) -}
7cb9fa9c6e2b423bf23f70e910162369
  $tc'LPalautus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6db33312a1564211ff402233a4b19770
  $tc'LPalautus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LPalautus3) -}
2fc4fd53216f1e1154d0bd5719e7d27d
  $tc'LPalautus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LPalautus"#) -}
6e717c9ad9ee88d58341fcfa7838823d
  $tc'LSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10500393949164787957##
                   9747829419435095061##
                   Main.$trModule
                   Main.$tc'LSijoitus2
                   0#
                   Main.$tc'LSijoitus1) -}
4f2aabd02d99373c240d5ea8650b501f
  $tc'LSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c0cf39c7ada068b12d40d56024af487b
  $tc'LSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LSijoitus3) -}
2430fb198f8e4dafaf49cf1b996dcf56
  $tc'LSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LSijoitus"#) -}
6feecd3b8e201d7f49882a77779d6ce7
  $tc'LSilmukka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1761139517769780880##
                   9072162367831536473##
                   Main.$trModule
                   Main.$tc'LSilmukka2
                   0#
                   Main.$tc'LSilmukka1) -}
04450c348abba12d38a8478f88aa26af
  $tc'LSilmukka1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fa30ccb8dd86a11b51a6420aae528216
  $tc'LSilmukka2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LSilmukka3) -}
ed95570afd8f46cf32880d5d855e2265
  $tc'LSilmukka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LSilmukka"#) -}
1d3708e7694c8c9fab051ff3b6b1db7b
  $tc'LTulostus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15087648076301262718##
                   3932854075053917859##
                   Main.$trModule
                   Main.$tc'LTulostus1
                   0#
                   Main.$tc'LPalautus1) -}
6e83dd0e9684feedd1940388c3b5143f
  $tc'LTulostus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'LTulostus2) -}
0540dbfdeabec0fe27e4702d24b5b024
  $tc'LTulostus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LTulostus"#) -}
63cdb0db0bc4725c4fbaa8c412ddce3a
  $tc'Luokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18095189686615302436##
                   8201994814945175776##
                   Main.$trModule
                   Main.$tc'Luokka2
                   0#
                   Main.$tc'Luokka1) -}
5b7c3871343e4079223f2866f82ba283
  $tc'Luokka1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f0de039815bcd1754da62dfa1075971a
  $tc'Luokka2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Luokka3) -}
d1afde293502774dd91d1e08b17dd8a9
  $tc'Luokka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Luokka"#) -}
a23ed1b8f99e9cfeb0e5dc8fde55b506
  $tc'MArvo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16290877833611856718##
                   16697237925670610662##
                   Main.$trModule
                   Main.$tc'MArvo2
                   0#
                   Main.$tc'MArvo1) -}
68736143f867e837ae5df499d0032350
  $tc'MArvo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
37d6d00807161f2ccd0aa2cdb81c6d61
  $tc'MArvo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MArvo3) -}
4db7daab63320ce29dec1865d880f276
  $tc'MArvo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MArvo"#) -}
c0a4dad2f07a3e36078de0b77a94b30e
  $tc'MId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10418609164891684108##
                   16816117487322586611##
                   Main.$trModule
                   Main.$tc'MId2
                   0#
                   Main.$tc'MId1) -}
1e3844cb3ae2ce5d341031fd447ab750
  $tc'MId1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
82d4df7de49f450db4091ab061cab59f
  $tc'MId2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MId3) -}
9f7eea68f916564d25a7be74fbd3bd8c
  $tc'MId3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MId"#) -}
57b4fff734e48ae5ac78cf928204b484
  $tc'MainOhjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14233149494168175295##
                   8347624946644061804##
                   Main.$trModule
                   Main.$tc'MainOhjelma2
                   0#
                   Main.$tc'MainOhjelma1) -}
a72960497af76559c8a057b5076e06a2
  $tc'MainOhjelma1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e485cc26c80fe4eda5495f65367a4935
  $tc'MainOhjelma2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'MainOhjelma3) -}
4a8554a8eec4b8c9414d147ab58b5985
  $tc'MainOhjelma3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MainOhjelma"#) -}
fbd87b299fe2b7dfb422924324b6f1c8
  $tc'Miinus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6617136556733717570##
                   11181307621559174908##
                   Main.$trModule
                   Main.$tc'Miinus1
                   0#
                   Main.$tc'Jako1) -}
2cbe440d4916b6a43a7e0dd3e844952c
  $tc'Miinus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Miinus2) -}
59ab6d065afb426b07989ddbcc38e663
  $tc'Miinus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Miinus"#) -}
766a4803c0ee370e2f3b5a7f77ea36ae
  $tc'Palautustyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16711401376202205237##
                   4609325661798551430##
                   Main.$trModule
                   Main.$tc'Palautustyyppi2
                   0#
                   Main.$tc'Palautustyyppi1) -}
e777164f5b13d23f789d87929a03ba5b
  $tc'Palautustyyppi1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
15479d27031149e7b6838bfdef1d3ebc
  $tc'Palautustyyppi2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Palautustyyppi3) -}
43d5679ca9053ca08fb5c11cc7293dd4
  $tc'Palautustyyppi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Palautustyyppi"#) -}
824172b9d21ca1b879f1d88fcc3efd17
  $tc'Parametri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3083725551386525162##
                   3154017588176226034##
                   Main.$trModule
                   Main.$tc'Parametri2
                   0#
                   Main.$tc'Parametri1) -}
a825ee8cd1822729827588934ee88720
  $tc'Parametri1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
55b5b1e7b7f927990beb177d5d22be79
  $tc'Parametri2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Parametri3) -}
e655ec35baa7aa24208fec66fc9408ec
  $tc'Parametri3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Parametri"#) -}
d9a857f65d926d46a5f321af1d617eed
  $tc'Pienempi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10099102669142310568##
                   1767607252871466791##
                   Main.$trModule
                   Main.$tc'Pienempi1
                   0#
                   Main.$tc'Erisuuri1) -}
be419fd578a698bf4ea6bffc87efedf9
  $tc'Pienempi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Pienempi2) -}
bacbfd629ce7769dad0bbc214a5f3005
  $tc'Pienempi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Pienempi"#) -}
f67ab51224cb7a14542b316d8c5d3655
  $tc'PienempiYhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2949922471695512643##
                   7788238106406568107##
                   Main.$trModule
                   Main.$tc'PienempiYhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
ee414fc1339481f6c10676809ab500cc
  $tc'PienempiYhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'PienempiYhtasuuri2) -}
cd4911bf6d726e8540ae77cb3bc6f889
  $tc'PienempiYhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PienempiYhtasuuri"#) -}
5bca946ec65cc63a14d6bdc30dfc8a98
  $tc'Plus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8170225512942515170##
                   11280510069790138749##
                   Main.$trModule
                   Main.$tc'Plus1
                   0#
                   Main.$tc'Jako1) -}
3429bb676cea8f5dd15049a449df3494
  $tc'Plus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Plus2) -}
fec8e835eada50a6e976e2febd0dc117
  $tc'Plus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Plus"#) -}
05a067a89372cc0ed90bd13a0dc0c86e
  $tc'Suurempi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4850453945634075477##
                   12487924943602007633##
                   Main.$trModule
                   Main.$tc'Suurempi1
                   0#
                   Main.$tc'Erisuuri1) -}
b94844d51bd2d1d4c03c0b13548f1503
  $tc'Suurempi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Suurempi2) -}
5ff1de94bc30f9fd54bc325188c6d57d
  $tc'Suurempi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Suurempi"#) -}
70ee91920c757c0b85d309540952ed90
  $tc'SuurempiYhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11585316968300943360##
                   2648360321319429010##
                   Main.$trModule
                   Main.$tc'SuurempiYhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
e6799f3aae226381aa1495fac2f3b86d
  $tc'SuurempiYhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'SuurempiYhtasuuri2) -}
cd3218e58711c1e977c04f9f5757b97d
  $tc'SuurempiYhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SuurempiYhtasuuri"#) -}
5dcaf65826f794c119b1421f1a7ffe33
  $tc'TTBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15214124812460183821##
                   1131605779699799354##
                   Main.$trModule
                   Main.$tc'TTBool2
                   0#
                   Main.$tc'TTBool1) -}
f84d5d7b4c236b75bfe4c79c0e14553f
  $tc'TTBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
9496bab5fabfce3f67c3a7f06bb42f0c
  $tc'TTBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTBool3) -}
e07f15a1b499697127d11e1ce71af97f
  $tc'TTBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTBool"#) -}
a572fbb46bf479c96f30ab9e8bfb0364
  $tc'TTInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   163140848333076578##
                   8564368219304769662##
                   Main.$trModule
                   Main.$tc'TTInt1
                   0#
                   Main.$tc'TTBool1) -}
fb8f73271bb26422145bf264a4f3886c
  $tc'TTInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTInt2) -}
b1d5f7be90f20527e14078e4a3604117
  $tc'TTInt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTInt"#) -}
7f2819ce7a6dbac0e3f314c30327b1b7
  $tc'TTString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17576615335097087784##
                   17370170758128700116##
                   Main.$trModule
                   Main.$tc'TTString1
                   0#
                   Main.$tc'TTBool1) -}
a08a86fa620ac6326e2c22ec0ae67834
  $tc'TTString1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTString2) -}
edd1d1e032c74960c6bd4dee3c8d9325
  $tc'TTString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTString"#) -}
845a14d8e517b47ba4c9e5bcfe13d2bc
  $tc'TTVoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13994410426611265761##
                   15280704162710775504##
                   Main.$trModule
                   Main.$tc'TTVoid1
                   0#
                   Main.$tc'TTBool1) -}
9a8f3e591af59e8973edf42b13e64d52
  $tc'TTVoid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'TTVoid2) -}
a10c921a50a78e09a544315fe9e723da
  $tc'TTVoid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TTVoid"#) -}
3ebbe2b9d2ef3128b562bbb1bba46b48
  $tc'UusiSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8046529862898521954##
                   3119037549882023950##
                   Main.$trModule
                   Main.$tc'UusiSijoitus2
                   0#
                   Main.$tc'UusiSijoitus1) -}
c6f4773369e2b0cf2c91dcb91fd09c59
  $tc'UusiSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
fd2dacbc0d2d2d9c126b4f93b7d79857
  $tc'UusiSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'UusiSijoitus3) -}
6f332aa9348c3b46403b75988e6d9786
  $tc'UusiSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UusiSijoitus"#) -}
c251edf26bd6266fb2a3c9e8084a1841
  $tc'VanhaSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13972460370976919435##
                   8545954513250652187##
                   Main.$trModule
                   Main.$tc'VanhaSijoitus2
                   0#
                   Main.$tc'VanhaSijoitus1) -}
40647631f34fd4f31811cc77c5c9d0cd
  $tc'VanhaSijoitus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
432963334663e4e4d64801140761b650
  $tc'VanhaSijoitus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'VanhaSijoitus3) -}
62f885f0f67a98bb1346e47198a26c7f
  $tc'VanhaSijoitus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VanhaSijoitus"#) -}
03b3f056764cbf6a1fef997528c5bad1
  $tc'Vertailu :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6508159651505920416##
                   2058730949561452416##
                   Main.$trModule
                   Main.$tc'Vertailu2
                   0#
                   Main.$tc'Vertailu1) -}
daee01127799b9039e611beac56d64c8
  $tc'Vertailu1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9f03bea690d2be12c8adc2b1d0a498c7
  $tc'Vertailu2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Vertailu3) -}
4c48e0549b8814acb8045e52f7caafbc
  $tc'Vertailu3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Vertailu"#) -}
258ba704b8a007de5a11b6c48acf18d0
  $tc'Void :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5157635618976230456##
                   9993593079178362531##
                   Main.$trModule
                   Main.$tc'Void2
                   0#
                   Main.$tc'Void1) -}
a4fb5c8f1c7a402e1b57c41ea8365d03
  $tc'Void1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
0e1b8bdf54945ea6a6d103d59fc6e5c6
  $tc'Void2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Void3) -}
63b3228fc63ef62c49c13b6a36419997
  $tc'Void3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Void"#) -}
b73be6f762a378fe529c0022f0424f91
  $tc'Yhtasuuri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4760123363911811134##
                   3198719185355581796##
                   Main.$trModule
                   Main.$tc'Yhtasuuri1
                   0#
                   Main.$tc'Erisuuri1) -}
93471daccb00bfd855719ea6e97a58be
  $tc'Yhtasuuri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Yhtasuuri2) -}
3277cc6366c59c3bcb75d02e062799d7
  $tc'Yhtasuuri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Yhtasuuri"#) -}
717eb41e1856728861a7717f3696868d
  $tcAliohjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1810419551870051689##
                   13293127293462791418##
                   Main.$trModule
                   Main.$tcAliohjelma1
                   0#
                   GHC.Types.krep$*) -}
55dce0c46972caa612080c0123333a7c
  $tcAliohjelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcAliohjelma2) -}
6ef02f2a697a4d6236ab7a4921cab8ed
  $tcAliohjelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Aliohjelma"#) -}
ccea51282dd95d980fab2ae3d8a8ab21
  $tcArvo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3326573508887049350##
                   6605479587420527467##
                   Main.$trModule
                   Main.$tcArvo1
                   0#
                   GHC.Types.krep$*) -}
98c98c37ed88516fa8d6acdb00dc0ea2
  $tcArvo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcArvo2) -}
13888ef55e9cb08f644e8af9bb8283bb
  $tcArvo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arvo"#) -}
fe953c15d410c67dc700f671d588fcd3
  $tcEhtolause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7441365987239631328##
                   13327124068771298015##
                   Main.$trModule
                   Main.$tcEhtolause1
                   0#
                   GHC.Types.krep$*) -}
25f9ab72edf503a0d42dbd20a45dade6
  $tcEhtolause1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcEhtolause2) -}
65d5cb62b6c5069f78571037fd660e55
  $tcEhtolause2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Ehtolause"#) -}
77222c749cf4380842c7da49bbff75d8
  $tcId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14785258017342714209##
                   13007136961065071287##
                   Main.$trModule
                   Main.$tcId1
                   0#
                   GHC.Types.krep$*) -}
0505cacf733d86daba8b3152e7188aa1
  $tcId1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcId2) -}
45bf98ee9ef0b2a297a3b25061fd134e
  $tcId2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Id"#) -}
28e265a8ece617bdf26218cedb33bc0e
  $tcLauseke :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14745130585350838121##
                   7446357493128569355##
                   Main.$trModule
                   Main.$tcLauseke1
                   0#
                   GHC.Types.krep$*) -}
872a340128a5f477ee3b008575497d7a
  $tcLauseke1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcLauseke2) -}
c2a5bbe7163de79bd065d975cd00b686
  $tcLauseke2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lauseke"#) -}
aa362072e6ea0d6a86790c1976aa681c
  $tcLuokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10679833007829350280##
                   6661038335128979810##
                   Main.$trModule
                   Main.$tcLuokka1
                   0#
                   GHC.Types.krep$*) -}
c0946cdc1be68037b5bffdd69861c4da
  $tcLuokka1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcLuokka2) -}
0cafe4460fa3cf41582bb88f4758ebd7
  $tcLuokka2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Luokka"#) -}
23484d453e5158500ea10b448646caaa
  $tcMaaritelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3684832993326292215##
                   12150521874317670511##
                   Main.$trModule
                   Main.$tcMaaritelma1
                   0#
                   GHC.Types.krep$*) -}
f03e4c171b808fc0e2185601089401e2
  $tcMaaritelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcMaaritelma2) -}
639ad2dbcb93b69bd3d1e61214565f4f
  $tcMaaritelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Maaritelma"#) -}
57c0975fc096608304249b766adba2a0
  $tcMainOhjelma :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15328713886095295855##
                   7534288064830813188##
                   Main.$trModule
                   Main.$tcMainOhjelma1
                   0#
                   GHC.Types.krep$*) -}
86a940ca908d8d4c79336f9e5a8dfa08
  $tcMainOhjelma1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcMainOhjelma2) -}
7cc8b3b467b55eed95d585d255aa4245
  $tcMainOhjelma2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MainOhjelma"#) -}
44c718cc595747e694d78f63f0fa80ce
  $tcOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6710467076270626544##
                   8243317404965346010##
                   Main.$trModule
                   Main.$tcOp1
                   0#
                   GHC.Types.krep$*) -}
21a79cb71daf4cfad8647ccb1f1c32d2
  $tcOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcOp2) -}
052b5424e70753ab8ee947cfce99605a
  $tcOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Op"#) -}
968c219a23c34f526e49094edb731fb7
  $tcPalautustyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9313234817569966368##
                   17728429788371397006##
                   Main.$trModule
                   Main.$tcPalautustyyppi1
                   0#
                   GHC.Types.krep$*) -}
5fb8f40eed71c7192819e1e01843e059
  $tcPalautustyyppi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcPalautustyyppi2) -}
e728676562f982dd69ddf11a9d3dee44
  $tcPalautustyyppi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Palautustyyppi"#) -}
f5d66c34472e7ba12d22ff69fcf35ba2
  $tcParametri :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2329219927416706185##
                   2470713353278703101##
                   Main.$trModule
                   Main.$tcParametri1
                   0#
                   GHC.Types.krep$*) -}
12f28dbecef1107991094ee3ad54b3db
  $tcParametri1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcParametri2) -}
60729091e0b920cfce50e7f6679850a0
  $tcParametri2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Parametri"#) -}
b00ea2d658a42325a3f047d47ff204e9
  $tcSijoitus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11205050677393953272##
                   7074848778810997230##
                   Main.$trModule
                   Main.$tcSijoitus1
                   0#
                   GHC.Types.krep$*) -}
bfeb94fb7828ccd57cf25854073b19ab
  $tcSijoitus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcSijoitus2) -}
8fb44f7e13ed42f76b2065f70936e655
  $tcSijoitus2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Sijoitus"#) -}
94b3126c54b619ba8960563cbb21b29a
  $tcTietotyyppi :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6890128802254120107##
                   2752455493797044054##
                   Main.$trModule
                   Main.$tcTietotyyppi1
                   0#
                   GHC.Types.krep$*) -}
3733b7f5160b54b1c52ab26968773a70
  $tcTietotyyppi1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcTietotyyppi2) -}
21cc97ae7b699c84971d3a654f77ca8f
  $tcTietotyyppi2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tietotyyppi"#) -}
fb77b3b0a109c92ac3545646d171a104
  $tcVOp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11151184663418058086##
                   10793825110668627817##
                   Main.$trModule
                   Main.$tcVOp1
                   0#
                   GHC.Types.krep$*) -}
4190929d366c1633807626b6c7f8b5bc
  $tcVOp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcVOp2) -}
f9064faff746525de671b75f842cc951
  $tcVOp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VOp"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d185a0d7a57e5cc5a24f0524ea42e1c8
  $w$cshow :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   Main.$fShowId2
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShow(,)3
                      (GHC.Show.showLitString ww Main.$fShowArvo5))) -}
3433022902425908b8b4534c7d9ca5f9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Main.Id
    -> Main.Palautustyyppi
    -> [Main.Parametri]
    -> [Main.Lauseke]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,1*U(1*U)><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [2] -}
c5e47c0afbe65da220df28acb48413d2
  $w$cshowsPrec1 ::
    GHC.Prim.Int# -> Main.Arvo -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Main.Arvo)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.ArvoInt b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo4
                             (case b1 of ww2 { GHC.Types.I# ww3 ->
                              case GHC.Show.$wshowSignedInt 11# ww3 w1 of ww4 { (#,#) ww5 ww6 ->
                              GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo4
                                (case b1 of ww2 { GHC.Types.I# ww3 ->
                                 case GHC.Show.$wshowSignedInt
                                        11#
                                        ww3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           w1) of ww4 { (#,#) ww5 ww6 ->
                                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) }
                   Main.ArvoBool b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo3
                             (case b1 of wild1 {
                                GHC.Types.False
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool4 w1
                                GHC.Types.True
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool2 w1 })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo3
                                (case b1 of wild1 {
                                   GHC.Types.False
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool4
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1)
                                   GHC.Types.True
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool2
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1) })) }
                   Main.ArvoString b1
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowArvo2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w1)))
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowArvo2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w1))))) } }) -}
e484cf3ee9b5df3cae7c197e1bd41468
  $w$cshowsPrec10 :: Main.Op -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Op) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Plus -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp7 w1
                   Main.Miinus -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp5 w1
                   Main.Kerto -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp3 w1
                   Main.Jako -> GHC.Base.++ @ GHC.Types.Char Main.$fShowOp1 w1 }) -}
013e4ab9d63c679aa78dd6e8179b094f
  $w$cshowsPrec11 ::
    GHC.Prim.Int#
    -> Main.Sijoitus -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Main.Sijoitus)
                   (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.UusiSijoitus b1 b2 b3
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String)[OneShot] ->
                          GHC.CString.unpackAppendCString#
                            Main.$fShowSijoitus3
                            (Main.$w$cshowsPrec8
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of ww1 { Main.Id ww2 ->
                                   Main.$w$cshowsPrec3
                                     11#
                                     ww2
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.showSpace1
                                        (Main.$w$cshowsPrec9 11# b3 x)) })))
                      } in
                      case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT -> p w1
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1)) }
                   Main.VanhaSijoitus b1 b2
                   -> case GHC.Prim.>=# ww 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Main.$fShowSijoitus2
                             (case b1 of ww1 { Main.Id ww2 ->
                              Main.$w$cshowsPrec3
                                11#
                                ww2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (Main.$w$cshowsPrec9 11# b2 w1)) })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Main.$fShowSijoitus2
                                (case b1 of ww1 { Main.Id ww2 ->
                                 Main.$w$cshowsPrec3
                                   11#
                                   ww2
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (Main.$w$cshowsPrec9
                                         11#
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            w1))) })) } }) -}
98a8c14477bc41632a07bd560ff431ea
  $w$cshowsPrec12 :: Main.VOp -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.VOp) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Pienempi -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp11 w1
                   Main.Suurempi -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp9 w1
                   Main.PienempiYhtasuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp7 w1
                   Main.SuurempiYhtasuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp5 w1
                   Main.Yhtasuuri -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp3 w1
                   Main.Erisuuri
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowVOp1 w1 }) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Main.Ehtolause -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
2763e6e3798c6fdbf15ea4e3b061c8a0
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowId2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w)))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowId2
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString
                                 ww1
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))))) }) -}
b9266f4f60d6c50c5c12a07fdb22e2c9
  $w$cshowsPrec4 ::
    GHC.Prim.Int# -> Main.Lauseke -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
992a8bf3a792dcc2893302ba8d4d9fdf
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> Main.Id
    -> Main.MainOhjelma
    -> [Main.Aliohjelma]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5,
     Strictness: <S,U><L,1*U(1*U)><L,1*U(1*U(1*U,1*U(1*U)),1*U)><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Id)
                   (ww2 :: Main.MainOhjelma)
                   (ww3 :: [Main.Aliohjelma])
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     case ww1 of ww4 { Main.Id ww5 ->
                     Main.$w$cshowsPrec3
                       11#
                       ww5
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.showSpace1
                          (case ww2 of ww6 { Main.MainOhjelma ww7 ww8 ->
                           Main.$w$cshowsPrec6
                             11#
                             ww7
                             ww8
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.showSpace1
                                (Main.$fShowAliohjelma_$cshowList ww3 x)) })) }
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka2 (g w)
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Main.$fShowLuokka2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))) }) -}
384dd4284423a80a51713161d3770c86
  $w$cshowsPrec6 ::
    GHC.Prim.Int#
    -> Main.Parametri
    -> [Main.Lauseke]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(1*U,1*U(1*U))><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Parametri)
                   (ww2 :: [Main.Lauseke])
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowLuokka13
                       (case ww1 of ww3 { Main.Parametri ww4 ww5 ->
                        Main.$w$cshowsPrec7
                          11#
                          ww4
                          ww5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.showSpace1
                             (case ww2 of wild {
                                [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x
                                : x1 xs
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     GHC.Show.showList__3
                                     (Main.$w$cshowsPrec4
                                        0#
                                        x1
                                        (let {
                                           lvl46 :: [GHC.Types.Char]
                                           = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x
                                         } in
                                         letrec {
                                           showl :: [Main.Lauseke] -> GHC.Base.String
                                             {- Arity: 1, Strictness: <S,1*U> -}
                                           = \ (ds2 :: [Main.Lauseke]) ->
                                             case ds2 of wild1 {
                                               [] -> lvl46
                                               : y ys
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    GHC.Show.showList__1
                                                    (Main.$w$cshowsPrec4 0# y (showl ys)) }
                                         } in
                                         showl xs)) })) })
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
8b8cea8001e8c33db402ac4ffc0c4270
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> Main.Tietotyyppi
    -> Main.Id
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U(1*U)><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Main.Tietotyyppi)
                   (ww2 :: Main.Id)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> GHC.CString.unpackAppendCString#
                        Main.$fShowLuokka12
                        (Main.$w$cshowsPrec8
                           ww1
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (case ww2 of ww3 { Main.Id ww4 ->
                               Main.$w$cshowsPrec3 11# ww4 w })))
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowLuokka12
                           (Main.$w$cshowsPrec8
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showSpace1
                                 (case ww2 of ww3 { Main.Id ww4 ->
                                  Main.$w$cshowsPrec3
                                    11#
                                    ww4
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w) })))) }) -}
2420ec2f5e78643ac9ea82e37dfd2164
  $w$cshowsPrec8 ::
    Main.Tietotyyppi -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Tietotyyppi) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.TTInt -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka10 w1
                   Main.TTBool -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka8 w1
                   Main.TTString -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka6 w1
                   Main.TTVoid
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fShowLuokka4 w1 }) -}
df1dfc94ea1a8b10e7570587c2996f65
  $w$cshowsPrec9 ::
    GHC.Prim.Int#
    -> Main.Maaritelma -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [2] -}
47e3547f57e15e0b1d867503282137e1
  $w$sdecimal ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: GHC.Types.Int
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case GHC.List.$wspan
                        @ GHC.Types.Char
                        GHC.Unicode.isDigit
                        ww of ww3 { (#,#) ww4 ww5 ->
                 case ww4 of wild {
                   []
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (case ww of wild1 {
                                 []
                                 -> Text.Megaparsec.Error.EndOfInput
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 : t ts
                                 -> Text.Megaparsec.Error.Tokens
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                      (Text.Megaparsec.Internal.nes
                                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                         t `cast`
                                         (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))) }))
                           Main.$sdecimal9)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] ww ww1 ww2)
                   : ds1 ds2
                   -> w (Main.$wgo wild 0#)
                        (case GHC.List.$wlenAcc
                                @ GHC.Types.Char
                                wild
                                0# of ww6 { DEFAULT ->
                         Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           ww5
                           (GHC.Prim.+# ww1 ww6)
                           ww2 })
                        Main.$sdecimal2
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N)) } }) -}
3e9ddbeefbd349f843cb8d8fcd5cb1a1
  $w$sskipLineComment ::
    Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
    -> forall b1.
       [GHC.Types.Char]
       -> GHC.Prim.Int#
       -> Text.Megaparsec.State.PosState [GHC.Types.Char]
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 7,
     Strictness: <S,U><L,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2] -}
37fb9ecc436759ba8b4ccbb953276aa2
  $w$sspace ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity ()
    -> forall b.
       Text.Megaparsec.State.State GHC.Base.String
       -> (()
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token GHC.Base.String)
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Data.Functor.Identity.Identity b)
       -> (()
           -> Text.Megaparsec.State.State GHC.Base.String
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token GHC.Base.String)
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 7,
     Strictness: <C(C(C(C(C(S))))),C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(C1(U)))))><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
d6dc56b13e00ac7de59f24e229df77b7
  $wgo :: [GHC.Types.Char] -> GHC.Prim.Int# -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U><S,U>m, Inline: [2] -}
c19d9cafdfdb5dcc0767617d814d5fb9
  $widentifier ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Inline: [2] -}
c5d322cd5a7d9ea8f173a7721aef78de
  $wjAliohjelma ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
cefe3b410c2355a9b686432f6e029b53
  $wjasennin ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: ()
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case ww of wild {
                   []
                   -> w GHC.Tuple.()
                        (Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           (GHC.Types.[] @ GHC.Types.Char)
                           ww1
                           ww2)
                        (GHC.Types.[]
                           @ (Data.Set.Internal.Set
                                (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N))
                   : t ts
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (Text.Megaparsec.Error.Tokens
                                 @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 (Text.Megaparsec.Internal.nes
                                    @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                    t `cast` (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0]))))))
                           Main.jasennin3)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] wild ww1 ww2) }) -}
a437cc07aed192fe30f50c00a2526a5f
  $wlauseke ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
d792e5c38962db353bae4e3858c34a32
  $wparametrit ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [2] -}
5a696b2103abc0c03bf6c1faf208e459
  $wwhitespace ::
    [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> Text.Megaparsec.State.PosState [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: Text.Megaparsec.State.PosState [GHC.Types.Char])
                   (w :: ()
                         -> Text.Megaparsec.State.State [GHC.Types.Char]
                         -> Text.Megaparsec.Internal.Hints
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case GHC.List.$wspan
                        @ GHC.Types.Char
                        GHC.Unicode.isSpace
                        ww of ww3 { (#,#) ww4 ww5 ->
                 case ww4 of wild {
                   []
                   -> w1
                        (Text.Megaparsec.Error.TrivialError
                           @ [GHC.Types.Char]
                           @ Data.Void.Void
                           (GHC.Types.I# ww1)
                           (GHC.Maybe.Just
                              @ (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                              (case ww of wild1 {
                                 []
                                 -> Text.Megaparsec.Error.EndOfInput
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                 : t ts
                                 -> Text.Megaparsec.Error.Tokens
                                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                      (Text.Megaparsec.Internal.nes
                                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                         t `cast`
                                         (Sub (Sym (Text.Megaparsec.Stream.D:R:Token[][0])))) }))
                           Main.identifier8)
                        (Text.Megaparsec.State.State @ [GHC.Types.Char] ww ww1 ww2)
                   : ds1 ds2
                   -> w GHC.Tuple.()
                        (case GHC.List.$wlenAcc
                                @ GHC.Types.Char
                                wild
                                0# of ww6 { DEFAULT ->
                         Text.Megaparsec.State.State
                           @ [GHC.Types.Char]
                           ww5
                           (GHC.Prim.+# ww1 ww6)
                           ww2 })
                        Main.identifier7
                          `cast`
                        (Sym (Text.Megaparsec.Internal.N:Hints[0]
                                  <Text.Megaparsec.Stream.Token [GHC.Types.Char]>_N)) } }) -}
b8bcc5962a70ad40734c97bf221004cb
  data Aliohjelma
    = Aliohjelma Main.Id
                 Main.Palautustyyppi
                 [Main.Parametri]
                 [Main.Lauseke]
c5e47c0afbe65da220df28acb48413d2
  data Arvo
    = ArvoInt GHC.Types.Int
    | ArvoBool GHC.Types.Bool
    | ArvoString GHC.Base.String
b9266f4f60d6c50c5c12a07fdb22e2c9
  data Ehtolause
    = If Main.Maaritelma [Main.Lauseke]
    | IfElse Main.Maaritelma [Main.Lauseke] [Main.Lauseke]
7b519e84f17348030685aea75eefd654
  data Id = Id GHC.Base.String
b9266f4f60d6c50c5c12a07fdb22e2c9
  data Lauseke
    = LTulostus Main.Maaritelma
    | LSijoitus Main.Sijoitus
    | LPalautus Main.Maaritelma
    | LEhto Main.Ehtolause
    | LSilmukka Main.Maaritelma [Main.Lauseke]
84c565bf33ef0ddfd6decb0e1c477074
  data Luokka = Luokka Main.Id Main.MainOhjelma [Main.Aliohjelma]
df1dfc94ea1a8b10e7570587c2996f65
  data Maaritelma
    = MId Main.Id
    | MArvo Main.Arvo
    | Aritmeettinen Main.Op Main.Maaritelma Main.Maaritelma
    | Vertailu Main.VOp Main.Maaritelma Main.Maaritelma
9dec73c6b0f0a043e21f682ae6550d73
  data MainOhjelma = MainOhjelma Main.Parametri [Main.Lauseke]
e484cf3ee9b5df3cae7c197e1bd41468
  data Op = Plus | Miinus | Kerto | Jako
5464c07b0a29099be58180211fe98396
  data Palautustyyppi = Palautustyyppi Main.Tietotyyppi | Void
c38695806baf28cfa4e819532fd43157
  data Parametri = Parametri Main.Tietotyyppi Main.Id
0a93c8eee1c5d0c55d40020d6da0f5ed
  type Parser =
    Text.Megaparsec.Parsec Data.Void.Void GHC.Base.String :: * -> *
013e4ab9d63c679aa78dd6e8179b094f
  data Sijoitus
    = UusiSijoitus Main.Tietotyyppi Main.Id Main.Maaritelma
    | VanhaSijoitus Main.Id Main.Maaritelma
2420ec2f5e78643ac9ea82e37dfd2164
  data Tietotyyppi = TTInt | TTBool | TTString | TTVoid
98a8c14477bc41632a07bd560ff431ea
  data VOp
    = Pienempi
    | Suurempi
    | PienempiYhtasuuri
    | SuurempiYhtasuuri
    | Yhtasuuri
    | Erisuuri
eb39e6d73a1e16f405c74b62022afeb3
  aMaaritelma :: Main.Parser Main.Maaritelma
  {- Unfolding: (Main.aMaaritelma_go
                   Main.aOperaattorit
                   Main.aMaaritelma1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))) -}
7d45740463b761b1537253a341d18461
  aMaaritelma1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
99028cfda54b7fcd97e10f7d8fe07103
  aMaaritelma_go ::
    [[Control.Monad.Combinators.Expr.Operator
        (Text.Megaparsec.Internal.ParsecT
           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
        Main.Maaritelma]]
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void
         GHC.Base.String
         Data.Functor.Identity.Identity
         Main.Maaritelma
    -> Text.Megaparsec.Internal.ParsecT
         Data.Void.Void
         GHC.Base.String
         Data.Functor.Identity.Identity
         Main.Maaritelma
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
390816fa4f688f474176087e1739c7af
  aOperaattorit ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.aOperaattorit13
                   Main.aOperaattorit1) -}
4c9688dbb218d23cefe1511fd2c621ac
  aOperaattorit1 ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.aOperaattorit2
                   (GHC.Types.[]
                      @ [Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma])) -}
5918d8ceb2edf958812c23b678f029d8
  aOperaattorit10 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.aOperaattorit_x1
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.aOperaattorit_x1
                 } in
                 Main.aOperaattorit8
                   Main.aOperaattorit11
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
edaf17097da648b1f1f52d35324dcdd2
  aOperaattorit11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.aOperaattorit12) -}
4342f26bc746f7921b1ad37499fcb7ea
  aOperaattorit12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+"#) -}
2cbb9eeb5c21c173ffa299402dd30b08
  aOperaattorit13 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.aOperaattorit19
                   Main.aOperaattorit14) -}
d0b8403e65c8ece410000b8f24b054ee
  aOperaattorit14 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.aOperaattorit15
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
650ff8b3d7fc52e9dc63e60a37f04f23
  aOperaattorit15 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.aOperaattorit16
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
2b9c9624fa85e4f6a863503fee500e26
  aOperaattorit16 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.aOperaattorit_x2
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.aOperaattorit_x2
                 } in
                 Main.aOperaattorit8
                   Main.aOperaattorit17
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
17556d57f7449d58e3ec7eed49b59621
  aOperaattorit17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.aOperaattorit18) -}
5e2fe1f8e20b5b7c7246d6af60047923
  aOperaattorit18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
b66998ec3fc23d4de577fbd0826569a8
  aOperaattorit19 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.aOperaattorit20
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
ca924ad4d13b091ae7e05ce4252909c1
  aOperaattorit2 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.aOperaattorit9
                   Main.aOperaattorit3) -}
bb2769d1fd1da6d8010cd5e2686f1f10
  aOperaattorit20 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.aOperaattorit_x3
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.aOperaattorit_x3
                 } in
                 Main.aOperaattorit8
                   Main.aOperaattorit21
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
2ac52865366c159a659e6fc4dc76c529
  aOperaattorit21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.aOperaattorit22) -}
6e2233f95731c52f24cfa1830f828d7b
  aOperaattorit22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
7dfa7475a803baca3ee84df95111daf6
  aOperaattorit3 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.aOperaattorit4
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
527224b439faba3754ce200554fb975f
  aOperaattorit4 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.aOperaattorit5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
69e3d6d79b9cbc023613bdde936267c9
  aOperaattorit5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.aOperaattorit_x
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.aOperaattorit_x
                 } in
                 Main.aOperaattorit8
                   Main.aOperaattorit6
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
9f7f38db5f5f8c266c0a9b17b14cc93a
  aOperaattorit6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.aOperaattorit7) -}
d980a0b4cebbfbe4566f2c9da50d52a2
  aOperaattorit7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
d7cf44c08e83494cd716bfa7377b1b5b
  aOperaattorit8 ::
    Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
8c3614ae200763ccdad8a92eb5bbea2a
  aOperaattorit9 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.aOperaattorit10
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
191f131bdd99fe44f88ba09b3af51293
  aOperaattorit_x ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Miinus) -}
f095d72955f73261a399724303f21a5e
  aOperaattorit_x1 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Plus) -}
7536b910af1d413c3784a6e3ea5cfcba
  aOperaattorit_x2 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Jako) -}
e4c54035d5e22688e6650418ce8592b1
  aOperaattorit_x3 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Aritmeettinen Main.Kerto) -}
a39506fb5f0824e9fcbaa0a79763987a
  aTermi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.aMaaritelma1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
67a5116171c8c941704e35d37426aff0
  asulut :: Main.Parser a -> Main.Parser a
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Main.$sbetween
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @ a
                   Main.asulut4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))) -}
268dbfa444a44093ab889bdcc6106bbd
  asulut1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.asulut2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
fab644264ba12e7b0c3497d6399f4e8e
  asulut2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.asulut3) -}
82934314767976fad1f81a3493546cd9
  asulut3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
062263a173c4a698e8619e8968685112
  asulut4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.asulut5
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
503746681437403ea2274a86047e0bde
  asulut5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.asulut6) -}
3803cc1bf80bcb10edca55e577541216
  asulut6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
da3d37bd85cb94bc1042609469a76435
  bMaaritelma :: Main.Parser Main.Maaritelma
  {- Unfolding: (Main.$saddPrecLevel
                   @ Main.Maaritelma
                   Main.bMaaritelma31
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.bMaaritelma1) -}
b453402b7d443e929f1fd16ca8277291
  bMaaritelma1 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma27
                   Main.bMaaritelma2) -}
cc3e82823e0510b31f552de5cf33cea3
  bMaaritelma10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!="#) -}
8720d99ac7ea9095a041db52658ce983
  bMaaritelma11 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma12
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
e414d174a4a4465156ba09c173e12b5f
  bMaaritelma12 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x1
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x1
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma13
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
ee27e215072dcda5dfc0176e1db9a1d2
  bMaaritelma13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma14) -}
565e2a606921601691b087c4e8750471
  bMaaritelma14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=="#) -}
f06dace31040e05bc6182dc8eee934c6
  bMaaritelma15 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma16
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
bb77985893e10a771d7bc11ebb4fc737
  bMaaritelma16 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x2
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x2
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma17
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
686fccfe8404d1d7989dd7c3dc23f1eb
  bMaaritelma17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma18) -}
45c8b4c3110cac354374a33183a6d82a
  bMaaritelma18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">="#) -}
4da99850e3556432d4ee37939349b822
  bMaaritelma19 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma20
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
bd1a3e91232762de3e781e3b0892cccc
  bMaaritelma2 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma23
                   Main.bMaaritelma3) -}
a088e1e079a6757b8f352d81652458a8
  bMaaritelma20 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x3
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x3
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma21
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
25a05cff64107d46b4551dfc1ad09fae
  bMaaritelma21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma22) -}
6bea9508bba0c34a77c7cbac1cc367ea
  bMaaritelma22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<="#) -}
fc3050683f7c9b19ba08371146b0110e
  bMaaritelma23 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma24
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
86e485ddfdc4f4b63e9e434ded7a3aea
  bMaaritelma24 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x4
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x4
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma25
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
e339fb13b000ec3dacf8a073f6989b7a
  bMaaritelma25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma26) -}
2aecfd13422f44df69d539fac495b9ba
  bMaaritelma26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
4052af235c4e052f5de070b225371665
  bMaaritelma27 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma28
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
77fcde536caa66d8f63699b1a9c77458
  bMaaritelma28 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x5
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x5
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma29
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
ce697410e645aa5c5e41e6835b8b1afc
  bMaaritelma29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma30) -}
383692c46ef4b884cbc781fd9d93e48e
  bMaaritelma3 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma19
                   Main.bMaaritelma4) -}
a81fa50d9b7c86d1355b716a79d15d31
  bMaaritelma30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
39b3d6567d0977086d51b307ff68acee
  bMaaritelma31 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
5854c1341658c498c7ee3d035a2c5e67
  bMaaritelma4 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma15
                   Main.bMaaritelma5) -}
54f2a37223a3e1154382d78cd5526320
  bMaaritelma5 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma11
                   Main.bMaaritelma6) -}
5ef6f094e6c76e84bdd28e3de30a4a4e
  bMaaritelma6 ::
    [Control.Monad.Combinators.Expr.Operator
       Main.Parser Main.Maaritelma]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma)
                   Main.bMaaritelma7
                   (GHC.Types.[]
                      @ (Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma))) -}
d989342a17afd87b8c003ce605656376
  bMaaritelma7 ::
    Control.Monad.Combinators.Expr.Operator
      (Text.Megaparsec.Internal.ParsecT
         Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
      Main.Maaritelma
  {- Strictness: m2,
     Unfolding: (Control.Monad.Combinators.Expr.InfixL
                   @ (Text.Megaparsec.Internal.ParsecT
                        Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity)
                   @ Main.Maaritelma
                   Main.bMaaritelma8
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma>_R))) -}
53353256700d249bf3fe8544588b4c5c
  bMaaritelma8 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ((Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,1*C1(C(C1(U)))><L,U><L,1*C1(C(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (eta1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta2 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: (Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma)
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                   (eta5 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 let {
                   lvl46 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta4 Main.bMaaritelma_x
                 } in
                 let {
                   lvl47 :: Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1
                   = eta2 Main.bMaaritelma_x
                 } in
                 Main.aOperaattorit8
                   Main.bMaaritelma9
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   eta1
                   (\ (x1 :: GHC.Base.String) -> lvl47)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   eta3
                   (\ (x1 :: GHC.Base.String) -> lvl46)
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eta5) -}
7e1686d31eff12cb74f8b54d58ca3a83
  bMaaritelma9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bMaaritelma10) -}
faaec6b49bfc7ccec527c42c4f8feba8
  bMaaritelma_x ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Erisuuri) -}
033fc8fe6b67c5b8685af356a79f7587
  bMaaritelma_x1 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Yhtasuuri) -}
7826addf97a3942b9a4813ece8dc93f1
  bMaaritelma_x2 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.SuurempiYhtasuuri) -}
1180c976a1d8ad7e4ba870840450ac55
  bMaaritelma_x3 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.PienempiYhtasuuri) -}
6d70676bdc9719863aaf8a29adedafa8
  bMaaritelma_x4 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Suurempi) -}
da12a666cc4225cd40732eb0dbde7d27
  bMaaritelma_x5 ::
    Main.Maaritelma -> Main.Maaritelma -> Main.Maaritelma
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (Main.Vertailu Main.Pienempi) -}
28a519fcd78405cb30573912c82a4566
  bOperaattorit ::
    [[Control.Monad.Combinators.Expr.Operator
        Main.Parser Main.Maaritelma]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Control.Monad.Combinators.Expr.Operator
                        Main.Parser Main.Maaritelma]
                   Main.bMaaritelma1
                   (GHC.Types.[]
                      @ [Control.Monad.Combinators.Expr.Operator
                           Main.Parser Main.Maaritelma])) -}
97799fde30fcefc74f53d1098ea56c5b
  bTermi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.bMaaritelma31
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
87db6897332605c6097fb15e73bd9b23
  boolEtosi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolEtosi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
ac4bee521164b115f3b15f118a76ff5a
  boolEtosi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.boolEtosi3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.boolEtosi_x s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.boolEtosi_x s' hs)
                   eerr) -}
b8c40adfb00c8b6950b413545ba09be1
  boolEtosi2 :: Main.Arvo
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.ArvoBool GHC.Types.False) -}
f20df8d70f43a768a02e813d3daf2065
  boolEtosi3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.boolEtosi4) -}
abe7cfe974c33b0a1004d8ca1f4119c8
  boolEtosi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.boolEtosi5) -}
0e6542dbe86f7b690b27633b289d044b
  boolEtosi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
23931bd8f80d950e16fc67938e2643ad
  boolEtosi6 ::
    GHC.Base.String
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (()
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 1, Strictness: <L,U> -}
775520f99498873d53303621b75e7995
  boolEtosi_x :: Main.Maaritelma
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.MArvo Main.boolEtosi2) -}
dac95f48dba406501bd1b1b7ce71f133
  boolTosi :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolTosi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
12e8100d90b719a04aae1f2c2633ab96
  boolTosi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.boolTosi3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.boolTosi_x s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.boolTosi_x s' hs)
                   eerr) -}
7311a4ea0cb4bab0b2764d716ba70222
  boolTosi2 :: Main.Arvo
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.ArvoBool GHC.Types.True) -}
ef346ad34865c5a8a60518d0994b839b
  boolTosi3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.boolTosi4) -}
7c94c3198cf5a3e234e53e9ebffb89d7
  boolTosi4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.boolTosi5) -}
d7d225c147f230f0469b0a59fdbdc616
  boolTosi5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
ea14862bb09d36a2258f83d685124dfa
  boolTosi_x :: Main.Maaritelma
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Main.MArvo Main.boolTosi2) -}
1119966a2f6f95f2ff8787cdf961b7a1
  booli :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.booli1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
4d3ae107d6b85703fa420984be6f25d6
  booli1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.booli2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTBool s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTBool s' hs)
                   eerr) -}
0c1ab5a38d7fc2c662714b732d735c2b
  booli2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.booli3) -}
aee81e0909fda39e59fb5f20ebd6fdf0
  booli3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.booli4) -}
ba65620188c347745f79838f0104f63f
  booli4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bool"#) -}
c9205338c9c6b34dfe1cabf9dcdf62fe
  ehtolause :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.ehtolause1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
8e36ba4ccf448d43eefa4a65b5faf616
  ehtolause1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
69e8489a92196256ddaf512150c021fc
  elsellinen :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.elsellinen1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
f1301319a2f5bb045941b1911f1ab046
  elsellinen1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elsellinen2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elsellinen2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
898c2b15e51348fd03ecc2b886dc481e
  elsellinen10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen11) -}
89d19c46c2dfa6484bdd5b36f55119df
  elsellinen11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
92e14bc24d23a50c37322bb18c2a4f5c
  elsellinen12 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.elsellinen13) -}
5ddd27828def5df2e1c7c98f0cd28e33
  elsellinen13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen14) -}
909bfab7d8802c9d2272075f9890ee50
  elsellinen14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("if"#) -}
3ac5421aceb33269b87dbb5a88735ae2
  elsellinen2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elsellinen3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elsellinen3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
55492fe2c6d31b379fda12816ca662f1
  elsellinen3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
ea30966daab1d703d0e2bfb3428af872
  elsellinen4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.elsellinen5
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
0360d45011c071db2fee2c4c56d7be86
  elsellinen5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.elsellinen6) -}
edac85124fd3dc9db570e2e6180dee5a
  elsellinen6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
b51a20cc4df0be736c19bc4e70dc9a77
  elsellinen7 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Base.String
                   @ Main.Maaritelma
                   Main.elsellinen9
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elsellinen8
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))) -}
65f8dba83045675a3e36938b282bc0c6
  elsellinen8 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(U))> -}
518b75e6372316035556ba60cae46eee
  elsellinen9 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.elsellinen10
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
f9160dcf74e676382c4f3ecd065fdc20
  elseton :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.elseton1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
339a1f1262ed61b7dea021a44e451333
  elseton1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elseton2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.elseton2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
0b9d6783956bdefdae80e805f6ab2b82
  elseton2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elseton3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.elseton3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
b522ebd89b3d0295ffd407223ef72744
  elseton3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (ehto :: Main.Maaritelma)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ [Main.Lauseke]
                   @ GHC.Base.String
                   Main.elseton4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b
                   eta
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.LEhto (Main.If ehto x)) s' hs)
                   eta2
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.LEhto (Main.If ehto x)) s' hs)
                   eta4) -}
eca07b48cd7b2e1edcfa0123c3792763
  elseton4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Base.String
                   @ [Main.Lauseke]
                   Main.asulut4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elseton5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))) -}
5e56cd51f4f7132d3a8ceb09c4fe57af
  elseton5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Lauseke]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [2],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Lauseke]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [Main.Lauseke]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 Main.$wlauseke @ b1 w w1 w2 w3) -}
deae21e9c565a2eeadc193689dc04d8e
  identifier :: Main.Parser Main.Id
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.identifier1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Id>_R)) -}
df0bfd730e6fb0cf31ce580bfb98de37
  identifier1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
ea4455dbb205e84d3d26f838146d21bd
  identifier10 :: GHC.Base.NonEmpty GHC.Types.Char
  {- Strictness: m,
     Unfolding: (GHC.Base.:|
                   @ GHC.Types.Char
                   Main.identifier13
                   Main.identifier11) -}
4a17201ff8c319fd5e7057fa35a81b3e
  identifier11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.identifier12) -}
be32351c7089ad300efccb62df060483
  identifier12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hite space"#) -}
e50bfecdc286d9da96a279f4d9da394d
  identifier13 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'w'#) -}
8f636da6b3eca6617079c21d5456195c
  identifier14 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Id
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,C(C1(C1(U)))><L,A><L,A><L,C(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: Main.Id
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Main.Id
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$widentifier @ b ww1 ww2 ww3 w1 w4 }) -}
db038f994253a147387cd3e95db10aed
  identifier2 ::
    Text.Megaparsec.State.State GHC.Base.String
    -> (()
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token GHC.Base.String)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token GHC.Base.String)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError GHC.Base.String Data.Void.Void
        -> Text.Megaparsec.State.State GHC.Base.String
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: (\ @ b
                   (w :: Text.Megaparsec.State.State GHC.Base.String)
                   (w1 :: ()
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token GHC.Base.String)
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            GHC.Base.String Data.Void.Void
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token GHC.Base.String)
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            GHC.Base.String Data.Void.Void
                          -> Text.Megaparsec.State.State GHC.Base.String
                          -> Data.Functor.Identity.Identity b) ->
                 Main.$w$sspace
                   Main.identifier6
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Main.identifier3
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   (Text.Megaparsec.Internal.pZero
                      @ Data.Void.Void
                      @ [GHC.Types.Char]
                      @ Data.Functor.Identity.Identity
                      @ ())
                   @ b
                   w
                   w1
                   w2
                   w3) -}
d0a03725359c18cad815404477c8f6e0
  identifier3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Unfolding: (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$w$sskipLineComment
                   Main.identifier4
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   ww1
                   ww2
                   ww3
                   w1
                   w3
                   w4 }) -}
96623902efd148a6cf7a8b5a4cee936b
  identifier4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.identifier5) -}
5b35e530d770db3ddc6ba435a0d6aa99
  identifier5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#"#) -}
7bb3b371ac6f304641028fb43ef71005
  identifier6 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(SSL),1*U(U,U,U)><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$wwhitespace @ b1 ww1 ww2 ww3 w1 w4 }) -}
62d7f352b69b0a90cb504784f60b4ea1
  identifier7 ::
    [Data.Set.Internal.Set
       (Text.Megaparsec.Error.ErrorItem
          (Text.Megaparsec.Stream.Token [GHC.Types.Char]))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.Set.Internal.Set
                        (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   Main.identifier8
                   (GHC.Types.[]
                      @ (Data.Set.Internal.Set
                           (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Stream.Token [GHC.Types.Char]))))) -}
79fda85dcb0d6c24ebce5c84b370413e
  identifier8 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   Main.identifier9
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
4aadf4f6e9a734978a4b180f721a572c
  identifier9 ::
    Text.Megaparsec.Error.ErrorItem
      (Text.Megaparsec.Stream.Token [GHC.Types.Char])
  {- Strictness: m2,
     Unfolding: (Text.Megaparsec.Error.Label
                   @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                   Main.identifier10) -}
1e85e12a5d7ff33a8569b7f895a0f33c
  integer :: Main.Parser GHC.Types.Int
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.integer1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
684ade150c8e5d30730fc0e1167f63d7
  integer1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Types.Int
                   @ ()
                   Main.$sdecimal1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
9204868f337651a22f30becefb3e1de9
  intti :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.intti1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
8c038df1781efa0a809dc9b6b604c73c
  intti1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.intti2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTInt s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTInt s' hs)
                   eerr) -}
fdab6e48bcb8b45e5df97fbc3a5c4d97
  intti2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.intti3) -}
d2b4c070623ebcc9a330c8b832a06711
  intti3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.intti4) -}
78541f85d892f62af6bd9714861ad421
  intti4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("int"#) -}
263029f957095b03a699b3409e2a86ee
  jAliohjelma :: Main.Parser [Main.Aliohjelma]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Aliohjelma]>_R)) -}
e008a5208914f41259dfaa4b964b8d25
  jAliohjelma' :: Main.Parser Main.Aliohjelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma'1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Aliohjelma>_R)) -}
b92b6b884f31aecd978ef1f92a410a8b
  jAliohjelma'1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Aliohjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Aliohjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Aliohjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Aliohjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jAliohjelma'3
                   @ b1
                   s1
                   (\ (x :: Main.Palautustyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jAliohjelma'2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Aliohjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Palautustyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jAliohjelma'2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Aliohjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
767f34edd7d530b15e28625fb9b990b1
  jAliohjelma'2 ::
    Main.Palautustyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Aliohjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Aliohjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
36f900edce81c8179225808694b96194
  jAliohjelma'3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
4036fd5263052a49517195dbf1101054
  jAliohjelma1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Aliohjelma]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [2],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Aliohjelma]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [Main.Aliohjelma]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 Main.$wjAliohjelma @ b1 w w1 w2 w3) -}
0155e970d45cfc30900476eb3d02955f
  jMain :: Main.Parser Main.MainOhjelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.jMain1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.MainOhjelma>_R)) -}
839526a43192affd27ed7052b0969fc9
  jMain1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain12
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
52c169cfec7cd0a0434bacb513b7ea75
  jMain10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jMain11) -}
f6bde5dd33903f5f45aeed426b03f9eb
  jMain11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("string"#) -}
afd84509f73a9c33a66036fa5fe17d4f
  jMain12 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jMain13) -}
51e2d0d2950e21bdde84242488618ee8
  jMain13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
4fdf242275a42f15642828938cc29942
  jMain2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.aOperaattorit8
                   Main.elsellinen10
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain3
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain3
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
2d79c51c4f02e7be84d2b279c209e578
  jMain3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain9
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain4
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jMain4
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
68e5164da1c590fbae6c57f5ef498a4d
  jMain4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.aOperaattorit8
                   Main.jMain7
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain5
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain5
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
ad27f0a8c474f55d6f5884c1b4d239b0
  jMain5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.MainOhjelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.MainOhjelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain6
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jMain6
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.MainOhjelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
caba55f042fe9b04757008ae4a881f18
  jMain6 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.MainOhjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.MainOhjelma
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
12b593d242d6f93a651184ebfb2d05d2
  jMain7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jMain8) -}
3201558ff5b9e21573eb07c94e663f14
  jMain8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[]"#) -}
071a5b78517161a315a5daf28244310e
  jMain9 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jMain10) -}
1f679acca10178fb26c7c11929717785
  jasennin :: Main.Parser Main.Luokka
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.jasennin1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Luokka>_R)) -}
cb2d36f1ee3682e0b92d209d46297d73
  jasennin1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Luokka
                   @ ()
                   Main.jasennin4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Luokka>_R))
                   Main.jasennin2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
bcd125fa75f902c67a13b72f507a92dc
  jasennin10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("class"#) -}
cac71bf726796bceccfa9e5073f5ad7c
  jasennin2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(SSL),1*U(1*U,U,U)><L,A><L,A><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [2],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: ()
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.State.State ww1 ww2 ww3 ->
                 Main.$wjasennin @ b ww1 ww2 ww3 w3 w4 }) -}
ee501e7dcbfacd47369270a1d1a7e9cc
  jasennin3 ::
    Data.Set.Internal.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Data.Set.Internal.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   1#
                   (Text.Megaparsec.Error.EndOfInput
                      @ (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))
                   (Data.Set.Internal.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Stream.Token [GHC.Types.Char])))) -}
e2d793facf1530c8241a2099389d6cda
  jasennin4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Megaparsec.Internal.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ ()
                   @ Main.Luokka
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Main.jasennin5
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Luokka>_R))) -}
6d6d558fc16e252740f8c72017727b79
  jasennin5 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jasennin8
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jasennin6
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.jasennin6
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
3a98e5ce0c1fbd80d9b1494c80237140
  jasennin6 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Luokka
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Luokka
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jasennin7
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.jasennin7
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Luokka
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
c76494d5a8e9f0dbc7860f8c7deea74a
  jasennin7 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Luokka
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Luokka
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
4f8f2e8e324f8db1aed63a22af5fe498
  jasennin8 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.jasennin9) -}
11c86c326d4d61cfdfc558c0392928ac
  jasennin9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jasennin10) -}
908eed739ca2d0f84377f510d86f0e4d
  km :: Main.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.km1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
18b7a5f4b9a843bac71c7f918a1ac280
  km1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.km2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
715f2ef480cda8f2caa056edfdcc02c2
  km2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.km3) -}
e04d3e863e4238e6c3451a52b1dd80a5
  km3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("?"#) -}
cea7a0d5bb47c3236dc7a512dfd6a2b6
  lauseke :: Main.Parser [Main.Lauseke]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.elseton5
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Lauseke]>_R)) -}
c5a2addc9876a41b3063e2e0f0e69ec4
  lauseke' :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.lauseke'1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
3c0d0855369322547742681c0e312bcd
  lauseke'1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
5b455e97f32bc693f1fdd4bdfe62eca2
  lekseemi :: Main.Parser a -> Main.Parser a
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                Main.lekseemi1
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Megaparsec.Internal.ParsecT
                    Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
d08dc814ec821f6a566f355841d15f9b
  lekseemi1 ::
    Text.Megaparsec.Internal.ParsecT
      Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a
    -> forall b1.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (a
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> (a
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6, Strictness: <L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a
                   (p :: Text.Megaparsec.Internal.ParsecT
                           Data.Void.Void GHC.Base.String Data.Functor.Identity.Identity a) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ a
                   @ ()
                   p
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
20f50774e5d0bde7c5d8e4167399c976
  luku :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.luku1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
202387560afca06bb9f2466dafab3067
  luku1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ GHC.Types.Int
                   @ ()
                   Main.$sdecimal1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: GHC.Types.Int)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MArvo (Main.ArvoInt x)) s' hs)
                   cerr
                   (\ (x :: GHC.Types.Int)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MArvo (Main.ArvoInt x)) s' hs)
                   eerr) -}
6f5d511ad1f3762eaf035d5c329cfec7
  luokka :: Main.Parser Main.Luokka
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.jasennin5
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Luokka>_R)) -}
253f3e8756702bb9fa3afb8802539acd
  maaritelma :: Main.Parser Main.Maaritelma
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.elsellinen8
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
63f26cc68cfcb0adce50d5b4ad9e52af
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d02ea8893029b397be990a7b69abf8c1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.main2
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (Text.Megaparsec.parseTest
                    @ Data.Void.Void
                    @ Main.Luokka
                    @ GHC.Base.String
                    Text.Megaparsec.Error.$fShowErrorComponentVoid
                    Main.$fShowLuokka
                    Text.Megaparsec.Stream.$fStream[]
                    Main.jasennin1
                      `cast`
                    (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                              <Data.Void.Void>_N
                              <[GHC.Types.Char]>_N
                              <Data.Functor.Identity.Identity>_R
                              <Main.Luokka>_R))
                    ipv3)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv2 } }) -}
fd975c57b617dc0d1be7528f63d02332
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
4616fe6a5f0847fdd63ffd0964fc7682
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test.mess"#) -}
72db78aee9b64bc331c40afa565cf8fc
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
b88a40eeb883626b9e083bc535b86f96
  mid :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.mid1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
acab0cad31000d94fe86c4d244f99042
  mid1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MId x) s' hs)
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MId x) s' hs)
                   eerr) -}
705a8ddf712e43c1f8af60834423962b
  mjono :: Main.Parser Main.Maaritelma
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.mjono1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Maaritelma>_R)) -}
1dd7d79d37da0e1adc77f04155b55e63
  mjono1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.aOperaattorit8
                   Main.mjono4
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.mjono2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Maaritelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b1>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b1>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b1)
                                    -> Data.Functor.Identity.Identity b1>_R)))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.mjono2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Maaritelma
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b1>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b1>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b1)
                                              -> Data.Functor.Identity.Identity b1>_R)))))
                   eerr) -}
795d8727c6cac10741e1172ca7641ce1
  mjono2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Maaritelma
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Maaritelma
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.mjono3
                   (GHC.Base.id @ [GHC.Types.Char])
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.MArvo (Main.ArvoString x)) s' hs)
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.MArvo (Main.ArvoString x)) s' hs)
                   eerr) -}
54565233e4c0326a7d575d04728760d5
  mjono3 ::
    ([GHC.Types.Char] -> [GHC.Types.Char])
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> ([GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> ([GHC.Types.Char]
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,C(U)><L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
690fec17d56f641806dc11ffbaa0e298
  mjono4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.mjono5) -}
461701f0df7380fe4561aadeb1c1c812
  mjono5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\""#) -}
f7618c65c5f5e2e6e5551564889fa5a5
  palautus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.palautus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
55af66cc22c27049abb047667e987cf0
  palautus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautus3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.palautus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.palautus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
3a165c826f285220ff9dcd63c96eb3b7
  palautus2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen8
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok (Main.LPalautus x) s' hs)
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok (Main.LPalautus x) s' hs)
                   eerr) -}
ead98a11fa46c74c8e84d48600d38416
  palautus3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.palautus4) -}
328c5ec1895a8e8562db4a71beaf7dfb
  palautus4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.palautus5) -}
529aab2156df8bd513c7730497b2a2f9
  palautus5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("return"#) -}
0379b9ee447f5180c6db1c351f9618d8
  palautustietotyyppi :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.palautustietotyyppi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
5f9ec158ab5399b0b83708880bca8cb9
  palautustietotyyppi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    cok (Main.Palautustyyppi x) s' hs)
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eok (Main.Palautustyyppi x) s' hs)
                   eerr) -}
5baaa932cb2f03c0323190f823acaacc
  palautustietotyyppi2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
a0cda1703f985f5dfc65416327592f06
  palautustyyppi :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.jAliohjelma'3
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
2eb433a55955f7338e028457283de33b
  palautusvoid :: Main.Parser Main.Palautustyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.palautusvoid1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Palautustyyppi>_R)) -}
947c3c0c59664e4dac12a65831032432
  palautusvoid1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Palautustyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Palautustyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautusvoid2
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.Void s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.Void s' hs)
                   eerr) -}
6067f489e4148d0ae6f649669a1bb0f0
  palautusvoid2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.palautusvoid3) -}
04a6a3c3ddd26d44fedc2cf30d85c9ba
  palautusvoid3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.palautusvoid4) -}
0954da1273ac72ab52d2e0addbcc9182
  palautusvoid4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("void"#) -}
fd17c53085c03cfb42ccf8dc807d1505
  parametri :: Main.Parser Main.Parametri
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.parametri1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Parametri>_R)) -}
520d5485cea64797c2b1cdba3adc5c30
  parametri1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Parametri
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Parametri
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Parametri
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Parametri
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.parametri2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Parametri
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.parametri2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Parametri
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
583198bf759a5cc643fb838b1b373727
  parametri2 ::
    Main.Tietotyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Parametri
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Parametri
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (tyyppi :: Main.Tietotyyppi)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Parametri
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Parametri
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b
                   eta
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.Parametri tyyppi x) s' hs)
                   eta2
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.Parametri tyyppi x) s' hs)
                   eta4) -}
f719df61c292dcbce4bbe5a9c3bcde7b
  parametrit :: Main.Parser [Main.Parametri]
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.parametrit1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Main.Parametri]>_R)) -}
d621b17e26be17909c3023a9e42709ba
  parametrit1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> ([Main.Parametri]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [2],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (w1 :: [Main.Parametri]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [Main.Parametri]
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            [GHC.Types.Char] Data.Void.Void
                          -> Text.Megaparsec.State.State [GHC.Types.Char]
                          -> Data.Functor.Identity.Identity b1) ->
                 Main.$wparametrit @ b1 w w1 w2 w3) -}
53718529dcf75319fb2abbaac154ad73
  semi :: Main.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Main.semi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
8d963e3191e5180788203ed2580ee150
  semi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Stream.Tokens [GHC.Types.Char]
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Main.aOperaattorit8
                   Main.semi2
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))) -}
e40c5de041b54183837ba40ecd07b012
  semi2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.semi3) -}
12ac260ebb6b538f5c21008fb5e73821
  semi3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (";"#) -}
0f37f8658e15c6c164e31ebe42c506ba
  sijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.sijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
c0e0d1d5eb2cae04836dd4f9f6088b00
  sijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
672aff3008830ff4259e65f422b9dcbe
  silmukka :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.silmukka1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
6cf31121071e9bcc299b50b2722859b0
  silmukka1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.silmukka4
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.silmukka2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.silmukka2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
7fc27bb4d37091e4e5590bc04c26e705
  silmukka2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Maaritelma
                   @ GHC.Base.String
                   Main.elsellinen7
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Maaritelma>_R))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.silmukka3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.silmukka3
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
8614f3c0a474f381bcd821eed25467a4
  silmukka3 ::
    Main.Maaritelma
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (ehto :: Main.Maaritelma)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ [Main.Lauseke]
                   @ GHC.Base.String
                   Main.elseton4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Main.Lauseke]>_R))
                   Main.asulut1
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   @ b
                   eta
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta1 (Main.LSilmukka ehto x) s' hs)
                   eta2
                   (\ (x :: [Main.Lauseke])
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    eta3 (Main.LSilmukka ehto x) s' hs)
                   eta4) -}
02ca729d9217804ec904a8aa0b0af649
  silmukka4 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.silmukka5) -}
8f59adf909bf2aee35cf3a3a73b67379
  silmukka5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.silmukka6) -}
40d2acf12d78020585716d06f6e2264d
  silmukka6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("while"#) -}
70f27cc64ba75da05d035b641d8d6a13
  stringi :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.stringi1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
dd35065e78f7dedebb2a291838798f87
  stringi1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Tietotyyppi
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Tietotyyppi
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.jMain9
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok Main.TTString s' hs)
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok Main.TTString s' hs)
                   eerr) -}
79268bf86a39420783071791523646c9
  sulut :: Main.Parser a -> Main.Parser a
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Main.$sbetween
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   @ a
                   Main.elsellinen9
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))
                   Main.elsellinen4
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))))) -}
ab0cfc26706a7547a09db923db9ec5c7
  symboli :: GHC.Base.String -> Main.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.aOperaattorit8
                  `cast`
                (Sub (Text.Megaparsec.Stream.D:R:Tokens[][0])
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))))) -}
8bd45e2a179a8bc6bd419e41756e82da
  tietotyyppi :: Main.Parser Main.Tietotyyppi
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Main.palautustietotyyppi2
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Tietotyyppi>_R)) -}
2bae0721daf2a3182aedcefd0051a8ae
  tulostus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.tulostus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
a09009e9a154324ce4af69c048f72216
  tulostus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.tulostus3
                   @ b1
                   s1
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.tulostus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: ())
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    Main.tulostus2
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
933ccb40bf2cc10b35da72a9d8edfc93
  tulostus2 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.elsellinen8
                   @ b1
                   s1
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    cok (Main.LTulostus x) s' hs)
                   cerr
                   (\ (x :: Main.Maaritelma)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                    eok (Main.LTulostus x) s' hs)
                   eerr) -}
d4600fc9db712ef8014d74cbc2ed1969
  tulostus3 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Unfolding: (Main.boolEtosi6 Main.tulostus4) -}
01b594b86b49e0903d1b95fb841aaf64
  tulostus4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.tulostus5) -}
7be8e1bd74f3d91286052f4893ca8793
  tulostus5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("print"#) -}
3bebd91b87005339dd821f719be19a88
  uusisijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Main.uusisijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
18cb30816025fc5547b8a453650881b7
  uusisijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Main.palautustietotyyppi2
                   @ b1
                   s1
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.uusisijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Tietotyyppi)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.uusisijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
b1e00ca8be7449753d6c5ee38f09bb4a
  uusisijoitus2 ::
    Main.Tietotyyppi
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
854d9ecc80e19609729401089c824430
  vanhasijoitus :: Main.Parser Main.Lauseke
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.vanhasijoitus1
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <[GHC.Types.Char]>_N
                          <Data.Functor.Identity.Identity>_R
                          <Main.Lauseke>_R)) -}
0e382cf46590ad083bfd31c1459462ba
  vanhasijoitus1 ::
    Text.Megaparsec.State.State [GHC.Types.Char]
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> (Main.Lauseke
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Text.Megaparsec.Internal.Hints
             (Text.Megaparsec.Stream.Token [GHC.Types.Char])
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          [GHC.Types.Char] Data.Void.Void
        -> Text.Megaparsec.State.State [GHC.Types.Char]
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (cok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Main.Lauseke
                           -> Text.Megaparsec.State.State [GHC.Types.Char]
                           -> Text.Megaparsec.Internal.Hints
                                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Internal.$fApplicativeParsecT1
                   @ [GHC.Types.Char]
                   @ Data.Void.Void
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Stream.$fStream[]
                   @ Main.Id
                   @ ()
                   Main.identifier14
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <[GHC.Types.Char]>_N
                             <Data.Functor.Identity.Identity>_R
                             <Main.Id>_R))
                   Main.identifier2
                     `cast`
                   (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                             <Data.Void.Void>_N
                             <GHC.Base.String>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   s1
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.vanhasijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         cerr))
                   cerr
                   (\ (x :: Main.Id)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    Main.vanhasijoitus2
                      x
                      @ b1
                      s'
                      cok
                      cerr
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eok)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b1
                         hs
                         eerr))
                   eerr) -}
5268a97613f5e15aaecc8cb7b35ef077
  vanhasijoitus2 ::
    Main.Id
    -> forall b.
       Text.Megaparsec.State.State [GHC.Types.Char]
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> (Main.Lauseke
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Text.Megaparsec.Internal.Hints
                (Text.Megaparsec.Stream.Token [GHC.Types.Char])
           -> Data.Functor.Identity.Identity b)
       -> (Text.Megaparsec.Error.ParseError
             [GHC.Types.Char] Data.Void.Void
           -> Text.Megaparsec.State.State [GHC.Types.Char]
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (id :: Main.Id)
                   @ b
                   (eta :: Text.Megaparsec.State.State [GHC.Types.Char])
                   (eta1 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   k :: forall b1.
                        Text.Megaparsec.State.State [GHC.Types.Char]
                        -> (Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                        -> (Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                        -> (Main.Lauseke
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Text.Megaparsec.Internal.Hints
                                 (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                            -> Data.Functor.Identity.Identity b1)
                        -> (Text.Megaparsec.Error.ParseError
                              [GHC.Types.Char] Data.Void.Void
                            -> Text.Megaparsec.State.State [GHC.Types.Char]
                            -> Data.Functor.Identity.Identity b1)
                        -> Data.Functor.Identity.Identity b1
                     {- Arity: 5,
                        Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
                   = \ @ b1
                       (s1 :: Text.Megaparsec.State.State [GHC.Types.Char])
                       (cok :: Main.Lauseke
                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                               -> Text.Megaparsec.Internal.Hints
                                    (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                               -> Data.Functor.Identity.Identity b1)[OneShot]
                       (cerr :: Text.Megaparsec.Error.ParseError
                                  [GHC.Types.Char] Data.Void.Void
                                -> Text.Megaparsec.State.State [GHC.Types.Char]
                                -> Data.Functor.Identity.Identity b1)[OneShot]
                       (eok :: Main.Lauseke
                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                               -> Text.Megaparsec.Internal.Hints
                                    (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                               -> Data.Functor.Identity.Identity b1)[OneShot]
                       (eerr :: Text.Megaparsec.Error.ParseError
                                  [GHC.Types.Char] Data.Void.Void
                                -> Text.Megaparsec.State.State [GHC.Types.Char]
                                -> Data.Functor.Identity.Identity b1)[OneShot] ->
                     Main.elsellinen8
                       @ b1
                       s1
                       (\ (x :: Main.Maaritelma)
                          (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                          (hs :: Text.Megaparsec.Internal.Hints
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                        cok (Main.LSijoitus (Main.VanhaSijoitus id x)) s' hs)
                       cerr
                       (\ (x :: Main.Maaritelma)
                          (s' :: Text.Megaparsec.State.State [GHC.Types.Char])
                          (hs :: Text.Megaparsec.Internal.Hints
                                   (Text.Megaparsec.Stream.Token [GHC.Types.Char])) ->
                        eok (Main.LSijoitus (Main.VanhaSijoitus id x)) s' hs)
                       eerr
                 } in
                 Main.aOperaattorit8
                   Main.vanhasijoitus3
                     `cast`
                   (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0])))
                   @ b
                   eta
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    k @ b
                      s'
                      eta1
                      eta2
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta1)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta2))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b>_R)
                              ->_R <Text.Megaparsec.Error.ParseError
                                      [GHC.Types.Char] Data.Void.Void
                                    -> Text.Megaparsec.State.State [GHC.Types.Char]
                                    -> Data.Functor.Identity.Identity b>_R
                              ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                    ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                          -> Text.Megaparsec.Internal.Hints
                                               (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                                          -> Data.Functor.Identity.Identity b>_R)
                              ->_R <(Text.Megaparsec.Error.ParseError
                                       [GHC.Types.Char] Data.Void.Void
                                     -> Text.Megaparsec.State.State [GHC.Types.Char]
                                     -> Data.Functor.Identity.Identity b)
                                    -> Data.Functor.Identity.Identity b>_R)))
                   eta2
                   (\ (x :: GHC.Base.String)
                      (s' :: Text.Megaparsec.State.State [GHC.Types.Char])[OneShot]
                      (hs :: Text.Megaparsec.Internal.Hints
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))[OneShot] ->
                    k @ b
                      s'
                      eta1
                      eta2
                      (Text.Megaparsec.Internal.accHints
                         @ (Text.Megaparsec.Stream.Token [GHC.Types.Char])
                         @ Main.Lauseke
                         @ [GHC.Types.Char]
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta3)
                      (Main.$s$fAlternativeParsecT_$swithHints
                         @ Data.Void.Void
                         @ Data.Functor.Identity.Identity
                         @ b
                         hs
                         eta4))
                     `cast`
                   (Nth:2
                        (Nth:3
                             (Nth:3
                                  (Nth:3
                                       (<Text.Megaparsec.State.State [GHC.Types.Char]>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b>_R)
                                        ->_R <Text.Megaparsec.Error.ParseError
                                                [GHC.Types.Char] Data.Void.Void
                                              -> Text.Megaparsec.State.State [GHC.Types.Char]
                                              -> Data.Functor.Identity.Identity b>_R
                                        ->_R (Sub (Sym (Text.Megaparsec.Stream.D:R:Tokens[][0]))
                                              ->_R <Text.Megaparsec.State.State [GHC.Types.Char]
                                                    -> Text.Megaparsec.Internal.Hints
                                                         (Text.Megaparsec.Stream.Token
                                                            [GHC.Types.Char])
                                                    -> Data.Functor.Identity.Identity b>_R)
                                        ->_R <(Text.Megaparsec.Error.ParseError
                                                 [GHC.Types.Char] Data.Void.Void
                                               -> Text.Megaparsec.State.State [GHC.Types.Char]
                                               -> Data.Functor.Identity.Identity b)
                                              -> Data.Functor.Identity.Identity b>_R)))))
                   eta4) -}
6bd193ee416f57b3c004e1376c0bbbfc
  vanhasijoitus3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.vanhasijoitus4) -}
92fe9528f7586c215e40b7e1b8367c28
  vanhasijoitus4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("="#) -}
c65db3e9f2a3150704ef7ea63e9e80e8
  vsana :: GHC.Base.String -> Main.Parser ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.boolEtosi6
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                               <Data.Void.Void>_N
                               <[GHC.Types.Char]>_N
                               <Data.Functor.Identity.Identity>_R
                               <()>_R)) -}
335d138cb8325aadfc5d34c9622cdf7f
  vsl :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.elsellinen13
                   Main.vsl1) -}
e2b2c5535b8cc5744f98da33cd3483a2
  vsl1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.vsl13 Main.vsl2) -}
198d5d35784eec7a5148c77a925eac17
  vsl10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.tulostus4
                   Main.vsl11) -}
69c9903caa37ed3ee711ca915d7f4dba
  vsl11 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.palautus4
                   Main.vsl12) -}
723dd234be234656b5fbffdbbac72e27
  vsl12 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jMain13
                   (GHC.Types.[] @ GHC.Base.String)) -}
a37b886f7c15265756b43647939a9497
  vsl13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.vsl14) -}
2b75d5548dcd03188bb7fe23330d058f
  vsl14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
4704b9f880fb6371ae0da6b35a570e6f
  vsl2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.silmukka5
                   Main.vsl3) -}
a77b896ad917bc022d95cfc3837287da
  vsl3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jasennin9
                   Main.vsl4) -}
5234ae056ac813aff532e6262a1a70c4
  vsl4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.palautusvoid3
                   Main.vsl5) -}
56649aeb17062492918e2ddd2d579ff9
  vsl5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.intti3 Main.vsl6) -}
ebd694108aa967c1b1f64ac0e4bb940d
  vsl6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.jMain10
                   Main.vsl7) -}
053fb29e957860c2835397cd2af014ef
  vsl7 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.booli3 Main.vsl8) -}
97110e67eb0c7b4359f5188c26d7708c
  vsl8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.boolTosi4
                   Main.vsl9) -}
f2f6b6f6b3eaf7efd5afc242a6a77759
  vsl9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.boolEtosi4
                   Main.vsl10) -}
86f5b589b09515ed971380ebb2bbe8a7
  whitespace :: Main.Parser ()
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                Main.identifier2
                  `cast`
                (Sym (Text.Megaparsec.Internal.N:ParsecT[0]
                          <Data.Void.Void>_N
                          <GHC.Base.String>_N
                          <Data.Functor.Identity.Identity>_R
                          <()>_R)) -}
instance GHC.Show.Show [Main.Aliohjelma] = Main.$fShowAliohjelma
instance GHC.Show.Show [Main.Arvo] = Main.$fShowArvo
instance GHC.Show.Show [Main.Ehtolause] = Main.$fShowEhtolause
instance GHC.Show.Show [Main.Id] = Main.$fShowId
instance GHC.Show.Show [Main.Lauseke] = Main.$fShowLauseke
instance GHC.Show.Show [Main.Luokka] = Main.$fShowLuokka
instance GHC.Show.Show [Main.Maaritelma] = Main.$fShowMaaritelma
instance GHC.Show.Show [Main.MainOhjelma] = Main.$fShowMainOhjelma
instance GHC.Show.Show [Main.Op] = Main.$fShowOp
instance GHC.Show.Show [Main.Palautustyyppi]
  = Main.$fShowPalautustyyppi
instance GHC.Show.Show [Main.Parametri] = Main.$fShowParametri
instance GHC.Show.Show [Main.Sijoitus] = Main.$fShowSijoitus
instance GHC.Show.Show [Main.Tietotyyppi] = Main.$fShowTietotyyppi
instance GHC.Show.Show [Main.VOp] = Main.$fShowVOp
"SPEC/Main $fEqErrorFancy @ Void" [orphan] forall (v :: GHC.Classes.Eq
                                                          Data.Void.Void)
  Text.Megaparsec.Error.$fEqErrorFancy @ Data.Void.Void v
  = Main.$s$fEqErrorFancy
"SPEC/Main $fEqErrorFancy_$c/= @ Void" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                  Data.Void.Void)
  Text.Megaparsec.Error.$fEqErrorFancy_$c/= @ Data.Void.Void $dEq
  = Main.$s$fEqErrorFancy_$s$fEqErrorFancy_$c/=
"SPEC/Main $fEqErrorItem @ (Token [Char])" [orphan] forall (v :: GHC.Classes.Eq
                                                                   (Text.Megaparsec.Stream.Token
                                                                      [GHC.Types.Char]))
  Text.Megaparsec.Error.$fEqErrorItem @ (Text.Megaparsec.Stream.Token
                                           [GHC.Types.Char])
                                      v
  = Main.$s$fEqErrorItem
"SPEC/Main $fEqErrorItem_$c/= @ (Token [Char])" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                                           (Text.Megaparsec.Stream.Token
                                                                              [GHC.Types.Char]))
  Text.Megaparsec.Error.$fEqErrorItem_$c/= @ (Text.Megaparsec.Stream.Token
                                                [GHC.Types.Char])
                                           $dEq
  = Main.$s$fEqErrorItem_$s$fEqErrorItem_$c/=
"SPEC/Main $fOrdErrorFancy @ Void" [orphan] forall (v :: GHC.Classes.Ord
                                                           Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy @ Data.Void.Void v
  = Main.$s$fOrdErrorFancy
"SPEC/Main $fOrdErrorFancy_$c<= @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                    Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$c<= @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$c<=
"SPEC/Main $fOrdErrorFancy_$c>= @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                    Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$c>= @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$c>=
"SPEC/Main $fOrdErrorFancy_$cmax @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                     Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$cmax @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$cmax
"SPEC/Main $fOrdErrorFancy_$cmin @ Void" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                     Data.Void.Void)
  Text.Megaparsec.Error.$fOrdErrorFancy_$cmin @ Data.Void.Void $dOrd
  = Main.$s$fOrdErrorFancy_$cmin
"SPEC/Main $fOrdErrorItem @ (Token [Char])" [orphan] forall (v :: GHC.Classes.Ord
                                                                    (Text.Megaparsec.Stream.Token
                                                                       [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem @ (Text.Megaparsec.Stream.Token
                                            [GHC.Types.Char])
                                       v
  = Main.$s$fOrdErrorItem
"SPEC/Main $fOrdErrorItem_$c<= @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                             (Text.Megaparsec.Stream.Token
                                                                                [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$c<= @ (Text.Megaparsec.Stream.Token
                                                 [GHC.Types.Char])
                                            $dOrd
  = Main.$s$fOrdErrorItem_$c<=
"SPEC/Main $fOrdErrorItem_$c>= @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                             (Text.Megaparsec.Stream.Token
                                                                                [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$c>= @ (Text.Megaparsec.Stream.Token
                                                 [GHC.Types.Char])
                                            $dOrd
  = Main.$s$fOrdErrorItem_$c>=
"SPEC/Main $fOrdErrorItem_$cmax @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$cmax @ (Text.Megaparsec.Stream.Token
                                                  [GHC.Types.Char])
                                             $dOrd
  = Main.$s$fOrdErrorItem_$cmax
"SPEC/Main $fOrdErrorItem_$cmin @ (Token [Char])" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char]))
  Text.Megaparsec.Error.$fOrdErrorItem_$cmin @ (Text.Megaparsec.Stream.Token
                                                  [GHC.Types.Char])
                                             $dOrd
  = Main.$s$fOrdErrorItem_$cmin
"SPEC/Main addPrecLevel @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                            ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                              (Text.Megaparsec.Internal.ParsecT
                                                                                                 Data.Void.Void
                                                                                                 GHC.Base.String
                                                                                                 Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.addPrecLevel @ (Text.Megaparsec.Internal.ParsecT
                                                   Data.Void.Void
                                                   GHC.Base.String
                                                   Data.Functor.Identity.Identity)
                                              @ a
                                              $dMonadPlus
  = Main.$saddPrecLevel @ a
"SPEC/Main between @ (ParsecT Void String Identity) _ _ _" [orphan] forall @ open
                                                                           @ close
                                                                           @ a
                                                                           ($dApplicative :: GHC.Base.Applicative
                                                                                               (Text.Megaparsec.Internal.ParsecT
                                                                                                  Data.Void.Void
                                                                                                  GHC.Base.String
                                                                                                  Data.Functor.Identity.Identity))
  Control.Applicative.Combinators.between @ (Text.Megaparsec.Internal.ParsecT
                                               Data.Void.Void
                                               GHC.Base.String
                                               Data.Functor.Identity.Identity)
                                          @ open
                                          @ close
                                          @ a
                                          $dApplicative
  = Main.$sbetween @ open @ close @ a
"SPEC/Main pInfixL @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                       ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                         (Text.Megaparsec.Internal.ParsecT
                                                                                            Data.Void.Void
                                                                                            GHC.Base.String
                                                                                            Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.pInfixL @ (Text.Megaparsec.Internal.ParsecT
                                              Data.Void.Void
                                              GHC.Base.String
                                              Data.Functor.Identity.Identity)
                                         @ a
                                         $dMonadPlus
  = Main.$spInfixL @ a
"SPEC/Main pInfixR @ (ParsecT Void String Identity) _" [orphan] forall @ a
                                                                       ($dMonadPlus :: GHC.Base.MonadPlus
                                                                                         (Text.Megaparsec.Internal.ParsecT
                                                                                            Data.Void.Void
                                                                                            GHC.Base.String
                                                                                            Data.Functor.Identity.Identity))
  Control.Monad.Combinators.Expr.pInfixR @ (Text.Megaparsec.Internal.ParsecT
                                              Data.Void.Void
                                              GHC.Base.String
                                              Data.Functor.Identity.Identity)
                                         @ a
                                         $dMonadPlus
  = Main.$spInfixR @ a
"SPEC/Main union @ (ErrorFancy Void)" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                  (Text.Megaparsec.Error.ErrorFancy
                                                                     Data.Void.Void))
  Data.Set.Internal.union @ (Text.Megaparsec.Error.ErrorFancy
                               Data.Void.Void)
                          $dOrd
  = Main.$s$fAlternativeParsecT_$sunion
"SPEC/Main union @ (ErrorItem (Token [Char]))" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                                           (Text.Megaparsec.Error.ErrorItem
                                                                              (Text.Megaparsec.Stream.Token
                                                                                 [GHC.Types.Char])))
  Data.Set.Internal.union @ (Text.Megaparsec.Error.ErrorItem
                               (Text.Megaparsec.Stream.Token [GHC.Types.Char]))
                          $dOrd
  = Main.$s$fAlternativeParsecT_$sunion1
"SPEC/Main withHints @ [Char] _ _ _" [orphan] forall @ e
                                                     @ m :: * -> *
                                                     @ b
                                                     ($dStream :: Text.Megaparsec.Stream.Stream
                                                                    [GHC.Types.Char])
  Text.Megaparsec.Internal.withHints @ [GHC.Types.Char]
                                     @ e
                                     @ m
                                     @ b
                                     $dStream
  = Main.$s$fAlternativeParsecT_$swithHints @ e @ m @ b
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

