
==================== FINAL INTERFACE ====================
2019-03-09 19:04:27.5625531 UTC

interface main:Messemlyzer 8063
  interface hash: 53fd5d7f576b431a68b3fd47d94969ba
  ABI hash: 906509bfc50864d4fab264a8d81dda96
  export-list hash: cff7a23a858d2e1ac03060c395b89fce
  orphan hash: 192ac8a8488deacfbea01cf15d610673
  flag hash: 8346313dc06e16ebefba9f23d6444d37
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Messemlyzer.aAliohjelmat
  Messemlyzer.aLauseke
  Messemlyzer.aLausekkeet
  Messemlyzer.aMaaritelma
  Messemlyzer.aMain
  Messemlyzer.analysoi
  Messemlyzer.mapAliohj
  Messemlyzer.uYmparisto
  Messemlyzer.AArvo{Messemlyzer.AVoid Messemlyzer.B Messemlyzer.I Messemlyzer.S}
  Messemlyzer.ALuokka{Messemlyzer.ALuokka}
  Messemlyzer.AMuuttujat
  Messemlyzer.AVirhe
  Messemlyzer.Aliohjelmat
module dependencies: Messer
package dependencies: array-0.5.3.0 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 containers-0.6.0.1
                      deepseq-1.4.4.0 ghc-prim-0.5.3 hashable-1.2.7.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 megaparsec-7.0.4 mtl-2.2.2
                      parser-combinators-1.0.1 primitive-0.6.4.0 scientific-0.3.6.2
                      text-1.2.3.1 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         megaparsec-7.0.4:Text.Megaparsec.Error
                         megaparsec-7.0.4:Text.Megaparsec.Pos
                         megaparsec-7.0.4:Text.Megaparsec.State
                         megaparsec-7.0.4:Text.Megaparsec.Stream
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array text-1.2.3.1:Data.Text
                         text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.12.0.0:Data.Either b81d41b5f4255f0a7c195f59e02f5b66
import  -/  base-4.12.0.0:GHC.Base b0f6eed6c4b57b0a2f7c7570f245848b
import  -/  base-4.12.0.0:GHC.Err c251e53993cbac856ae26ac9d3d737b6
import  -/  base-4.12.0.0:GHC.Num 6054c1c23a1433b06aa5321ae01f13b2
import  -/  base-4.12.0.0:GHC.Real 11a06d7fcd7db99538ab6d6f2b048af9
import  -/  base-4.12.0.0:GHC.Show 5c4c5ac15ef4d7749e0e6f06242c812a
import  -/  base-4.12.0.0:Prelude b1ccc486556b171042710ef6f2d1a539
import  -/  containers-0.6.0.1:Data.Map.Internal 809c18d4f1d0560a3f1f838f411341b9
import  -/  containers-0.6.0.1:Data.Map.Strict 862f7498e42e3aea305e0ee4cce1d01a
import  -/  containers-0.6.0.1:Data.Map.Strict.Internal f5a5f5ea9db0644dd801e65e72083886
import  -/  ghc-prim-0.5.3:GHC.Classes 555218a5f891dab16ebc6e6e04763e77
import  -/  Messer e1f88e828dd5e13e6dc757211349c899
  exports: eedbb4c9b519f3ec35d949e301366b6f
  AKutsu 3c442870e02d5bf9feed93c2e572f9af
  Aliohjelma 8382b386e263b4f186da179152d06ec1
  Aliohjelma f616844a16ec6006fac1a1627820eb52
  Aritmeettinen 6a29a995a425e9131e2fe8391a4e0004
  ArvoBool daea4fb2b5aa783b243fc98b36d8c8cd
  ArvoInt 1c46658729c19ac660817da145aac84a
  ArvoString 4bbe16ef07879a67daedba60ad49cd3c
  Id d78631d083b8ede42d51e70eafbf7de0
  Id b8fb69268f765c3ef225c661dc5360de
  If 0cef250a6b2f48f5d321ce643024ecca
  IfElse 54b70cf177992a3f2a7f895343a724a6
  Jako 77172067be0a76b22555fd5ac221a127
  Kerto 015c02bcf4d8098b360c048ef52ef326
  LAKutsu 8c923ee2c2dbb5be62683bc379c545c0
  LEhto eb7b1cac59446f75f7f648cc308fff3c
  LPalautus a87e8db9a88d63474ecd67a7377588f9
  LSijoitus ea73aae5918fa4397c0aa8262109164b
  LSilmukka f8cc4910b97fef8e857c292690e9bb0e
  LTulostus c2ede7ffa15f59d65ca0ddc63d60a111
  Lauseke 1c899e862121308cd4f91402a82ba3f9
  Luokka 96aaad7c4eac0cb961fde19017e07b38
  Luokka e7cb6c20637ed95ce0cae1a22331cd3d
  MArvo f55ccd5f76451238c75f6f4750308fb8
  MId adbf1cadfbd5b2bf212682e6b2713b2d
  Maaritelma ea67a20a6ff998dcfcbb33a0a151c225
  MainOhjelma 64827bc2510906d3c6f23026a016f94a
  MainOhjelma 76f67d672f2abe8d4a26760b75255aa7
  Miinus 92f36f9e9bbcf8ef6323f436df8bb93b
  Palautustyyppi 60382d1f14cfb56b0f898678a53698d8
  Palautustyyppi 34c02ede3d9961458594ae2e3e82e002
  Parametri 921e794e49ffe9faa3d22dee476adede
  Parametri 3da2d94919361cdb400e175048f0ba4d
  Plus 507edfff22260490c324f99136998a92
  TTBool 55b565619df9fbb976ba6712fefc3744
  TTInt cc6a82539248dbad234c7fccff13c960
  TTString 9dfa60b93aeb64a8e3bac9510068d823
  Tietotyyppi e9c807259680593d625496093d974d4b
  UusiSijoitus a27a4c2845449030206723666c04affc
  VanhaSijoitus ba79738bd896b7cc369085d876f07c0b
  Void d585c62109a942e8dd72f56bf442d61f
c9add3cab0645efc0329afdeea320f99
  $fShowAArvo :: GHC.Show.Show Messemlyzer.AArvo
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Messemlyzer.AArvo
                  Messemlyzer.$fShowAArvo_$cshowsPrec
                  Messemlyzer.$fShowAArvo_$cshow
                  Messemlyzer.$fShowAArvo_$cshowList -}
c9add3cab0645efc0329afdeea320f99
  $fShowAArvo1 :: Messemlyzer.AArvo -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Messemlyzer.$fShowAArvo_$cshowsPrec
                   Messemlyzer.$fShowAArvo2) -}
2acfdb1cbe4bfba4f62eb70de4c4252c
  $fShowAArvo2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
56eb91107780767ea0d21d4348219973
  $fShowAArvo3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Messemlyzer.$fShowAArvo4) -}
b321e0df88d1f24b24ee29df3447f546
  $fShowAArvo4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AVoid"#) -}
9953e497982c8ceb6c172b7812e95de8
  $fShowAArvo5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("S "#) -}
1a48304ea6565346a24ff16093a252d1
  $fShowAArvo6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("B "#) -}
d9fec4a4e24c9d6157ab66f3658cd520
  $fShowAArvo7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("I "#) -}
dee97c37075b9f338721ccbdd7440ac9
  $fShowAArvo8 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c9add3cab0645efc0329afdeea320f99
  $fShowAArvo_$cshow :: Messemlyzer.AArvo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Messemlyzer.AArvo) ->
                 case x of wild {
                   Messemlyzer.I b1
                   -> GHC.CString.unpackAppendCString#
                        Messemlyzer.$fShowAArvo7
                        (case b1 of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt
                                11#
                                ww3
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   Messemlyzer.B b1
                   -> GHC.CString.unpackAppendCString#
                        Messemlyzer.$fShowAArvo6
                        (case b1 of wild1 {
                           GHC.Types.False -> GHC.Show.$fShowBool4
                           GHC.Types.True -> GHC.Show.$fShowBool2 })
                   Messemlyzer.S b1
                   -> GHC.CString.unpackAppendCString#
                        Messemlyzer.$fShowAArvo5
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 Messemlyzer.$fShowAArvo8))
                   Messemlyzer.AVoid -> Messemlyzer.$fShowAArvo3 }) -}
c9add3cab0645efc0329afdeea320f99
  $fShowAArvo_$cshowList :: [Messemlyzer.AArvo] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Messemlyzer.AArvo]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Messemlyzer.AArvo
                   Messemlyzer.$fShowAArvo1
                   ls
                   s) -}
c9add3cab0645efc0329afdeea320f99
  $fShowAArvo_$cshowsPrec ::
    GHC.Types.Int -> Messemlyzer.AArvo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Messemlyzer.AArvo)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Messemlyzer.I b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Messemlyzer.$fShowAArvo7
                             (case b1 of ww2 { GHC.Types.I# ww3 ->
                              case GHC.Show.$wshowSignedInt 11# ww3 eta of ww4 { (#,#) ww5 ww6 ->
                              GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Messemlyzer.$fShowAArvo7
                                (case b1 of ww2 { GHC.Types.I# ww3 ->
                                 case GHC.Show.$wshowSignedInt
                                        11#
                                        ww3
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           eta) of ww4 { (#,#) ww5 ww6 ->
                                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) } }
                   Messemlyzer.B b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Messemlyzer.$fShowAArvo6
                             (case b1 of wild2 {
                                GHC.Types.False
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool4 eta
                                GHC.Types.True
                                -> GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowBool2 eta })
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Messemlyzer.$fShowAArvo6
                                (case b1 of wild2 {
                                   GHC.Types.False
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool4
                                        (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 eta)
                                   GHC.Types.True
                                   -> GHC.Base.++
                                        @ GHC.Types.Char
                                        GHC.Show.$fShowBool2
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)2
                                           eta) })) } }
                   Messemlyzer.S b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.>=# x 11# of lwild {
                        DEFAULT
                        -> GHC.CString.unpackAppendCString#
                             Messemlyzer.$fShowAArvo5
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta)))
                        1#
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                Messemlyzer.$fShowAArvo5
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            eta))))) } }
                   Messemlyzer.AVoid
                   -> GHC.Base.++ @ GHC.Types.Char Messemlyzer.$fShowAArvo3 eta }) -}
9d545decc8e21b7a0878340d70b88655
  $sinsertR_$sgo13 ::
    [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> a1
    -> Data.Map.Internal.Map [GHC.Types.Char] a1
    -> Data.Map.Internal.Map [GHC.Types.Char] a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
35c036ff50a1109690aa472c72c6a84e
  $sinsert_$sgo13 ::
    [GHC.Types.Char]
    -> [GHC.Types.Char]
    -> a1
    -> Data.Map.Internal.Map [GHC.Types.Char] a1
    -> Data.Map.Internal.Map [GHC.Types.Char] a1
  {- Arity: 4, Strictness: <L,U><S,1*U><L,U><S,1*U> -}
47c83dff2f346d836697d729bb24d5f1
  $slookup1 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map [GHC.Types.Char] a -> GHC.Maybe.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
379464880604d3809866fafa9af88a0f
  $sunion ::
    Data.Map.Internal.Map [GHC.Types.Char] a
    -> Data.Map.Internal.Map [GHC.Types.Char] a
    -> Data.Map.Internal.Map [GHC.Types.Char] a
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: [~] -}
22bb6031b9e9d3747e7ce46d9366697a
  $tc'ALuokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13482902241511470718##
                   8628331506273261413##
                   Messemlyzer.$trModule
                   Messemlyzer.$tc'ALuokka2
                   0#
                   Messemlyzer.$tc'ALuokka1) -}
e3adf1ec49968a6dec99cf5623eddcb6
  $tc'ALuokka1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
da7fa4d19d683454a6a76e60c2d67665
  $tc'ALuokka2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tc'ALuokka3) -}
f32930edfe6db766908ecdc673bcf8cc
  $tc'ALuokka3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ALuokka"#) -}
e228d4b1934aecb9ea4e63c361100684
  $tc'AVoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   769795051744147495##
                   11268315386244248179##
                   Messemlyzer.$trModule
                   Messemlyzer.$tc'AVoid2
                   0#
                   Messemlyzer.$tc'AVoid1) -}
7ebaf7bbcaeb7b1b7d75eb2dc67f5379
  $tc'AVoid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
3ae476a29830a909f026428adf031b1d
  $tc'AVoid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tc'AVoid3) -}
e4e568caf52bfb3cefe02422681c242b
  $tc'AVoid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AVoid"#) -}
6c0776ec8513596e04fa05db05cad9b1
  $tc'B :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11891088270852708188##
                   17629952793220048345##
                   Messemlyzer.$trModule
                   Messemlyzer.$tc'B2
                   0#
                   Messemlyzer.$tc'B1) -}
4162b9cc83911b5326b456d13b578e8d
  $tc'B1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c6c42ec24ed47bfe76f525b1a3852381
  $tc'B2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tc'B3) -}
48b8453c667ac6701fbf5cdf6141a3b9
  $tc'B3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'B"#) -}
202bafbfbde8a7bf3919e7bfa668f879
  $tc'I :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4682442608533730047##
                   17861813027476098472##
                   Messemlyzer.$trModule
                   Messemlyzer.$tc'I2
                   0#
                   Messemlyzer.$tc'I1) -}
2d07ccacf31b945a7aff991e709ff6ab
  $tc'I1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3af6310488fcf49927309d0e0e2e47e6
  $tc'I2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tc'I3) -}
0fe95eb7d909a91db118e93106fd2519
  $tc'I3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'I"#) -}
8819cedf0fbe50256f2e6c711441566d
  $tc'S :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1092535153501780969##
                   13065754103578773958##
                   Messemlyzer.$trModule
                   Messemlyzer.$tc'S2
                   0#
                   Messemlyzer.$tc'S1) -}
ab1c90bea23fe1499b880dc57378f016
  $tc'S1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9687bf4c10f98a1100983a7da4646a3b
  $tc'S2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tc'S3) -}
2eecce5fa0f48891420650a6d9de0eeb
  $tc'S3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'S"#) -}
7247c7ff0ade6227f2005d4bd44a9f51
  $tcAArvo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9510135838454790923##
                   8052782481314520320##
                   Messemlyzer.$trModule
                   Messemlyzer.$tcAArvo1
                   0#
                   GHC.Types.krep$*) -}
8906f90301bdb7f2eccb8f6d13db98f5
  $tcAArvo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tcAArvo2) -}
90cf137de08de8f50fdf5cf10547fe0a
  $tcAArvo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AArvo"#) -}
92b980adc030b272996259a6e260e1da
  $tcALuokka :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16941547632806176345##
                   3976106591924026102##
                   Messemlyzer.$trModule
                   Messemlyzer.$tcALuokka1
                   0#
                   GHC.Types.krep$*) -}
20c3a3b1b733faad97d61d20eab5e7ea
  $tcALuokka1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$tcALuokka2) -}
b2e04ae1307c11ff39fc634a8a14a2de
  $tcALuokka2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ALuokka"#) -}
5303ff43a8205ac5b83cbee2f77ba9fc
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Messemlyzer.$trModule3
                   Messemlyzer.$trModule1) -}
730c230d93dd6d178fcfc68756eb8460
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$trModule2) -}
28505e75b17f54db3080c19e4c44b5e8
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Messemlyzer"#) -}
ed4b6206ec301a17cb4ac93a7bbf2461
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Messemlyzer.$trModule4) -}
71f647d49633d913a060877dd9f1b871
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9b0e24256ea1e311f907e79d8cfba3ad
  $waAliohjelmat ::
    [Messer.Aliohjelma]
    -> Messemlyzer.Aliohjelmat
    -> (# Messemlyzer.Aliohjelmat, [Messemlyzer.AVirhe] #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [2] -}
c18896b85d40d3b85391086b01b98051
  $waLauseke ::
    Messer.Lauseke
    -> Messemlyzer.AMuuttujat
    -> Messemlyzer.Aliohjelmat
    -> (# Messer.Lauseke, [Messemlyzer.AVirhe],
          Messemlyzer.AMuuttujat #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,1*U>, Inline: [2] -}
d04e2a5148ae7e60dfadd606cc3370a5
  $waMaaritelma ::
    Messer.Maaritelma
    -> Messemlyzer.AMuuttujat
    -> (# GHC.Maybe.Maybe Messer.Tietotyyppi, Messer.Maaritelma,
          [Messemlyzer.AVirhe] #)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [2] -}
1c4bba4902eed5fcf6f6e9ba33de2f02
  $wanalysoi ::
    Messer.Id
    -> Messer.MainOhjelma
    -> [Messer.Aliohjelma]
    -> Data.Either.Either Messemlyzer.ALuokka [Messemlyzer.AVirhe]
  {- Arity: 3, Strictness: <L,U><L,U(U(U,U),A)><S,U>, Inline: [2],
     Unfolding: (\ (ww :: Messer.Id)
                   (ww1 :: Messer.MainOhjelma)
                   (ww2 :: [Messer.Aliohjelma]) ->
                 case Messemlyzer.$waAliohjelmat
                        ww2
                        (Messemlyzer.mapAliohj ww2) of ww3 { (#,#) ww4 ww5 ->
                 case GHC.Classes.$fEq[]_$s$c==1
                        (GHC.Base.++ @ [GHC.Types.Char] ww5 (Messemlyzer.analysoi1 ww1))
                        (GHC.Types.[] @ Messemlyzer.AVirhe) of wild {
                   GHC.Types.False
                   -> Data.Either.Right
                        @ Messemlyzer.ALuokka
                        @ [Messemlyzer.AVirhe]
                        (Messemlyzer.analysoi1 ww1)
                   GHC.Types.True
                   -> Data.Either.Left
                        @ Messemlyzer.ALuokka
                        @ [Messemlyzer.AVirhe]
                        (Messemlyzer.ALuokka
                           ww
                           (case ww1 of wild1 { Messer.MainOhjelma ds xs ->
                            case ds of wild2 { Messer.Parametri t ds1 ->
                            case ds1 of wild3 { Messer.Id id ->
                            Messer.MainOhjelma
                              wild2
                              (case Messemlyzer.aLausekkeet ret_ty [Messer.Lauseke] of {}) } } })
                           ww4) } }) -}
0f2aea7b8d71a11859e1e3360e5199ce
  $wpoly_go13 ::
    [GHC.Types.Char]
    -> Data.Map.Internal.Map [GHC.Types.Char] a
    -> (# Data.Map.Internal.Map [GHC.Types.Char] a,
          Data.Map.Internal.Map [GHC.Types.Char] a #)
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [2] -}
c9add3cab0645efc0329afdeea320f99
  data AArvo
    = I GHC.Types.Int | B GHC.Types.Bool | S GHC.Base.String | AVoid
58e21e7599866c38e9dc6dbd67b91472
  data ALuokka
    = ALuokka Messer.Id Messer.MainOhjelma Messemlyzer.Aliohjelmat
a0d476564700027c38d2e4ba7c160caa
  type AMuuttujat =
    Data.Map.Internal.Map GHC.Base.String Messemlyzer.AArvo
e900d943a953720cf4fde5c3fbc877d4
  type AVirhe = GHC.Base.String
0341a522c50717da24edaba8c68dd704
  type Aliohjelmat =
    Data.Map.Internal.Map
      GHC.Base.String
      (Messer.Palautustyyppi, [Messer.Parametri], [Messer.Lauseke])
cfde6a4fc963fca275460cf9a1a3a9fb
  aAliohjelmat ::
    [Messer.Aliohjelma]
    -> Messemlyzer.Aliohjelmat
    -> (Messemlyzer.Aliohjelmat, [Messemlyzer.AVirhe])
  {- Arity: 2, Strictness: <S,1*U><L,U>m, Inline: [2],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [Messer.Aliohjelma]) (w1 :: Messemlyzer.Aliohjelmat) ->
                 case Messemlyzer.$waAliohjelmat w w1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
fd5e5aebca3a54c317643598928ff5e6
  aLauseke ::
    Messer.Lauseke
    -> Messemlyzer.AMuuttujat
    -> Messemlyzer.Aliohjelmat
    -> (Messer.Lauseke, [Messemlyzer.AVirhe], Messemlyzer.AMuuttujat)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,1*U>m, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Messer.Lauseke)
                   (w1 :: Messemlyzer.AMuuttujat)
                   (w2 :: Messemlyzer.Aliohjelmat) ->
                 case Messemlyzer.$waLauseke w w1 w2 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
ee6971284440f0f0394a8390c73d7fad
  aLausekkeet ::
    [Messer.Lauseke]
    -> Messemlyzer.AMuuttujat
    -> Messemlyzer.Aliohjelmat
    -> ([Messer.Lauseke], [Messemlyzer.AVirhe], Messemlyzer.AMuuttujat)
  {- Strictness: x -}
0af624d74d5bf3aaa025c2069de0b158
  aMaaritelma ::
    Messer.Maaritelma
    -> Messemlyzer.AMuuttujat
    -> Messemlyzer.Aliohjelmat
    -> (GHC.Maybe.Maybe Messer.Tietotyyppi, Messer.Maaritelma,
        [Messemlyzer.AVirhe])
  {- Arity: 3, Strictness: <S,1*U><L,U><L,A>m, Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Messer.Maaritelma)
                   (w1 :: Messemlyzer.AMuuttujat)
                   (w2 :: Messemlyzer.Aliohjelmat) ->
                 case Messemlyzer.$waMaaritelma w w1 of ww { (#,,#) ww1 ww2 ww3 ->
                 (ww1, ww2, ww3) }) -}
1fdd81c7c9d6fdec5130a510088712f0
  aMain ::
    Messer.MainOhjelma
    -> Messemlyzer.Aliohjelmat
    -> (Messer.MainOhjelma, [Messemlyzer.AVirhe])
  {- Arity: 2, Strictness: <S(S(LS)L),1*U(1*U(U,U),A)><L,A>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Messer.MainOhjelma) (a :: Messemlyzer.Aliohjelmat) ->
                 case ds of wild { Messer.MainOhjelma ds1 xs ->
                 case ds1 of wild1 { Messer.Parametri t ds2 ->
                 case ds2 of wild2 { Messer.Id id ->
                 (Messer.MainOhjelma
                    (Messer.Parametri t (Messer.Id id))
                    (case Messemlyzer.aLausekkeet ret_ty [Messer.Lauseke] of {}),
                  case Messemlyzer.aLausekkeet
                  ret_ty [Messemlyzer.AVirhe]
                  of {}) } } }) -}
896858b2a4233e4d2f7ea7a1ddb16910
  analysoi ::
    Messer.Luokka
    -> Data.Either.Either Messemlyzer.ALuokka [Messemlyzer.AVirhe]
  {- Arity: 1, Strictness: <S(LLS),1*U(U,U(U(U,U),A),U)>,
     Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Messer.Luokka) ->
                 case w of ww { Messer.Luokka ww1 ww2 ww3 ->
                 Messemlyzer.$wanalysoi ww1 ww2 ww3 }) -}
2c59cf1c4dae13c9689321befd565382
  analysoi1 :: Messer.MainOhjelma -> [Messemlyzer.AVirhe]
  {- Arity: 1, Strictness: <B,1*U(1*U(A,1*H),A)>b -}
072768f22d3f22b706bad52fb7942d9a
  mapAliohj :: [Messer.Aliohjelma] -> Messemlyzer.Aliohjelmat
  {- Arity: 1, Strictness: <S,1*U> -}
a71f4bc29e81a5ba340f8b2daf9ef4c2
  uYmparisto :: [Messer.Parametri] -> Messemlyzer.AMuuttujat
  {- Arity: 1, Strictness: <S,1*U> -}
instance GHC.Show.Show [Messemlyzer.AArvo]
  = Messemlyzer.$fShowAArvo
"SPEC/Messemlyzer union @ [Char] _" [orphan] forall @ a
                                                    ($dOrd :: GHC.Classes.Ord [GHC.Types.Char])
  Data.Map.Internal.union @ [GHC.Types.Char] @ a $dOrd
  = Messemlyzer.$sunion @ a
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

