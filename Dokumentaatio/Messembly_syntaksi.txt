TIES448 Kääntäjätekniikka
Lähdekielen syntaksin suunnitelma



- Kieli koostuu blokeista, joita merkitään aaltosuluilla {}. 

- Ohjelman ylimmän tason rakenne on class, joka sisältää main-ohjelman, josta suoritus aloitetaan ja mahdollisesti aliohjelmia ja kommentteja

- Main-ohjelman ja aliohjelmien loppuun laitetaan ;-merkki

- Ohjelmablokit sisältävät valinta- ja toistoblokkeja, kommentteja, sekä lausekkeita

- Kommentit aloitetaan #-merkillä, jonka jälkeen kommentti jatkuu rivinvaihtoon asti

- Tyhjällä tilalla ei ole merkitystä ja se ohitetaan

- Tietotyypit: int, bool, string

- HUOM. käytämme määritelmää tässä kuvaamaan jotain joka evaluoituu joksikin arvoksi ja lauseketta
kuvaamaan, jotain suoritettavaa toimintoa. 

- Määritelmät (expression):
    - Muuttuja
    - Kokonaisluku
    - Totuusarvo
        - true
        - false
    - Merkkijono
        - "[merkkijono]"
    - Aritmeettiset
        - [määritelmä, joka tuottaa kokonaisluvun] + [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] - [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] * [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] / [määritelmä, joka tuottaa kokonaisluvun]
    - Vertailu
        - [määritelmä, joka tuottaa kokonaisluvun] < [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] > [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] == [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] != [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] <= [määritelmä, joka tuottaa kokonaisluvun]
        - [määritelmä, joka tuottaa kokonaisluvun] >= [määritelmä, joka tuottaa kokonaisluvun]
    - Aliohjelmakutsu
        [aliohjelman nimi] ([parametreina annettavat määritelmät])

- Lausekkeet (statement) (Huom! Kaikki lausekkeet loppuvat ?-merkkiin, myös ehtolauseet ja silmukat):
    - Tulostus
        - print [määritelmä] ?
    - Muuttujaan sijoitus
        - uusi muuttuja: 
            [tietotyyppi] [muuttujan nimi] = [määritelmä, joka tuottaa oikean tyyppisen arvon] ?
        - sijoitus olemassa olevaan muuttujaan
            [muuttujan nimi] = [määritelmä, joka tuottaa oikean tyyppisen arvon] ?
    - Palautus aliohjelmasta
        return [määritelmä] ?
    - If-lause:
            if ([määritelmä joka tuottaa totuusarvon]) { [suoritettava lauseke]* } ?
        TAI
            if ([määritelmä joka tuottaa totuusarvon]) { [suoritettava lauseke]* }
            else { [suoritettava lauseke]* } ?
    - Silmukat 
        - while
            while ([määritelmä]) { [suoritettava lauseke]* } ?
    - Aliohjelmakutsu
        [aliohjelman nimi] ([parametreina annettavat määritelmät]) ?


- class
    class [luokan nimi] { [main] [kommentti tai aliohjelma]* }

- main
    main (string[] args) { [suoritettava lauseke tai kommentti]* };

- aliohjelma
    [palautusarvon tyyppi tai void] [aliohjelman nimi] ([parametrit pilkulla erotettuna, esim. "int a, bool b"]) { [suoritettava lauseke tai kommentti]* };